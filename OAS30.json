{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "STUDIO Tasks API",
    "description" : "An API for managing a list of tasks that need to be done",
    "contact" : { },
    "version" : "1.1.0"
  },
  "servers" : [ {
    "url" : "https://6tvlu1k.api-mock.int.cloud.talend.com",
    "description" : "Endpoint du mock de votre API. Lorsqu'il est appel√©, il simule le comportement de votre API."
  } ],
  "paths" : {
    "/tasks/" : {
      "post" : {
        "summary" : "Create a new Task",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Task"
              },
              "example" : "{\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                },
                "example" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
              }
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      }
    },
    "/tasks/{taskid}" : {
      "get" : {
        "summary" : "Load a specific Task",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                },
                "example" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a Task",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Task"
              },
              "example" : "{\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                },
                "example" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
              }
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "Delete a Task",
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "taskid",
        "in" : "path",
        "required" : true,
        "description" : "Identifier of the Task",
        "schema" : {
          "type" : "string",
          "description" : "Identifier of the Task"
        },
        "example" : "47ee3550-b619-11e6-8408-0bdb025a7cfa"
      } ]
    },
    "/erg" : {
      "get" : {
        "summary" : "azdazdazdzdz",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "ok"
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Task" : {
        "type" : "object",
        "required" : [ "completed", "id", "name" ],
        "description" : "An object that represents a Task",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Auto-generated primary key field",
            "example" : "3fa2eb40-b61c-11e6-9de0-fdbe71bceebb"
          },
          "name" : {
            "type" : "string",
            "example" : "Figure out how to colonize Mars"
          },
          "completed" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "example" : "2016.10.06"
          }
        },
        "example" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
      },
      "Error" : {
        "type" : "object",
        "required" : [ "code" ],
        "description" : "This general error structure is used throughout this API.",
        "properties" : {
          "code" : {
            "type" : "integer",
            "minimum" : 400,
            "maximum" : 599
          },
          "description" : {
            "type" : "string",
            "example" : "Bad query parameter [$size]: Invalid integer value [abc]"
          },
          "reasonPhrase" : {
            "type" : "string",
            "example" : "Bad Request"
          }
        },
        "example" : "{\n  \"code\": 400,\n  \"description\": \"Bad query parameter [$size]: Invalid integer value [abc]\",\n  \"reasonPhrase\": \"Bad Request\"\n}"
      }
    },
    "parameters" : {
      "d" : {
        "name" : "d",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "d_1" : {
        "name" : "d",
        "in" : "header",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "d_2" : {
        "name" : "d",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "HTTP_BASIC" : {
        "type" : "http",
        "scheme" : "basic",
        "description" : "All GET methods are public, meaning that *you can read all the data*. Write operations require authentication and therefore are forbidden to the general public."
      }
    }
  }
}