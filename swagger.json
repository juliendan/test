{
  "swagger" : "2.0",
  "info" : {
    "description" : "The Borealis API will help developers CRUD their way through various resources set in the Borealis database.<br><br><b>Response Codes: </b><br><br><b>200</b> - Successful<br><br><b>400</b> - General Exceptions<br><br><b>401</b> - Unauhorized<br><br><b>403</b> - Business Rule Violation<br><br><b>500</b> - Database Exceptions<br><br><b>Note:</b> For each API call, form header parameters user and password must be supplied.<br>",
    "version" : "0.9.7.2 beta",
    "title" : "Borealis API (all rights reserved)",
    "termsOfService" : "",
    "contact" : {
      "name" : "Michael Davis",
      "email" : "mbradleydavis@gmail.com"
    }
  },
  "host" : "tasksapi.restlet.net",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/tasks/" : {
      "get" : {
        "summary" : "Load the list of Tasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Allows to filter the collection of results by the value of field `id`",
          "x-example" : "47ee3550-b619-11e6-8408-0bdb025a7cfa"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Allows to filter the collection of results by the value of field `name`",
          "x-example" : "Learn about hypermedia APIs"
        }, {
          "name" : "$page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Number of the page to retrieve.",
          "x-example" : 1
        }, {
          "name" : "$size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Size of the page to retrieve.",
          "x-example" : 10
        }, {
          "name" : "$sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Order in which to retrieve the results. Multiple sort criteria can be passed. Example: sort=age ASC,height DESC",
          "x-example" : "createdAt DESC"
        }, {
          "name" : "completed",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Allows to filter the collection of results by the value of field `completed`",
          "x-example" : true
        }, {
          "name" : "createdAt",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Allows to filter the collection of results by the value of field `createdAt`",
          "x-example" : "2016.07.03"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Task"
              }
            },
            "examples" : {
              "application/json" : "[{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}]"
            },
            "headers" : {
              "X-Page-Size" : {
                "type" : "integer",
                "x-example" : 25
              },
              "X-Page-Count" : {
                "type" : "integer",
                "x-example" : 1
              },
              "X-Page-Number" : {
                "type" : "integer",
                "x-example" : 1
              },
              "X-Total-Count" : {
                "type" : "integer",
                "x-example" : 2
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new Task",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Task"
          },
          "x-examples" : {
            "application/json" : "{\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Task"
            },
            "examples" : {
              "application/json" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      }
    },
    "/tasks/{taskid}" : {
      "get" : {
        "summary" : "Load a specific Task",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Task"
            },
            "examples" : {
              "application/json" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a Task",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Task"
          },
          "x-examples" : {
            "application/json" : "{\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Task"
            },
            "examples" : {
              "application/json" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "Delete a Task",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "taskid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Identifier of the Task",
        "x-example" : "47ee3550-b619-11e6-8408-0bdb025a7cfa"
      } ]
    },
    "/UTL/Tag/" : {
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "Gets all tags",
        "operationId" : "getsAllTags",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tag"
              }
            }
          }
        }
      }
    },
    "/UTL/Tag/{Tag}" : {
      "post" : {
        "tags" : [ "Tags" ],
        "summary" : "Adds a new tag",
        "operationId" : "addTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Tag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Tags" ],
        "summary" : "Updates a tag",
        "operationId" : "updateTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Tag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Tag",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/Tag/{TagKey}" : {
      "get" : {
        "tags" : [ "Tags" ],
        "summary" : "Gets tag by primary key",
        "operationId" : "getsTagByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tags" ],
        "summary" : "Deletes tag by primary key",
        "operationId" : "deleteTag",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TagKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/Role/" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Gets all roles",
        "operationId" : "getsAllRoles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Role"
              }
            }
          }
        }
      }
    },
    "/SC/Role/{Role}" : {
      "post" : {
        "tags" : [ "Roles" ],
        "summary" : "Adds a new role",
        "operationId" : "addRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Role"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Role"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Roles" ],
        "summary" : "Updates a role",
        "operationId" : "updateRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Role"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Role"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Role",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/Role/{RoleKey}" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Gets role by primary key",
        "operationId" : "getsRoleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Role"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Roles" ],
        "summary" : "Deletes role by primary key",
        "operationId" : "deleteRole",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RoleKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/Role/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Finds roles by id or name",
        "operationId" : "getsAllRoles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Role"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Time/" : {
      "get" : {
        "tags" : [ "Times" ],
        "summary" : "Gets all times",
        "operationId" : "getsAllTimes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Time"
              }
            }
          }
        }
      }
    },
    "/HR/Time/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Times" ],
        "summary" : "Get times by employeekey",
        "operationId" : "getsTimesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Time"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Time/{RejectionKey}" : {
      "get" : {
        "tags" : [ "Times" ],
        "summary" : "Get times by rejectionkey",
        "operationId" : "getsTimesByRejectionKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Time"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RejectionKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Time/{Time}" : {
      "get" : {
        "tags" : [ "Times" ],
        "summary" : "Gets time by revision",
        "operationId" : "getsTimeByRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Time"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Times" ],
        "summary" : "Adds a new time",
        "operationId" : "addTime",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Time"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Times" ],
        "summary" : "Updates a time",
        "operationId" : "updateTime",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Time"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Time",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Time/{TimeKey}" : {
      "get" : {
        "tags" : [ "Times" ],
        "summary" : "Gets time by primary key",
        "operationId" : "getsTimeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Time"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Times" ],
        "summary" : "Deletes time by primary key",
        "operationId" : "deleteTime",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Time/{TSCalendarKey}" : {
      "get" : {
        "tags" : [ "Times" ],
        "summary" : "Get times by tscalendarkey",
        "operationId" : "getsTimesByTSCalendarKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Time"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSCalendarKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Time/Void/{TimeVoid}" : {
      "put" : {
        "tags" : [ "Times" ],
        "summary" : "Void a time",
        "operationId" : "voidTime",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalVoid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeVoid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/User/" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Gets all users",
        "operationId" : "getsAllUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/SC/User/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get users by statusclskey",
        "operationId" : "getsUsersByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/User/{User}" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Adds a new user",
        "operationId" : "addUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Updates a user",
        "operationId" : "updateUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "User",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/User/{UserKey}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Gets user by primary key",
        "operationId" : "getsUserByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Deletes user by primary key",
        "operationId" : "deleteUser",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/User/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Finds users by id or name",
        "operationId" : "getsAllUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/Check/" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Gets all checks",
        "operationId" : "getsAllChecks",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Check"
              }
            }
          }
        }
      }
    },
    "/AP/Check/{BankAcctKey}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Get checks by bankacctkey",
        "operationId" : "getsChecksByBankAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Check/{Check}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Gets check by revision",
        "operationId" : "getsCheckByRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Checks" ],
        "summary" : "Adds a new check",
        "operationId" : "addCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Check"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Checks" ],
        "summary" : "Updates a check",
        "operationId" : "updateCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Check"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Check",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/Check/{CheckClsKey}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Get checks by checkclskey",
        "operationId" : "getsChecksByCheckClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Check/{CheckKey}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Gets check by primary key",
        "operationId" : "getsCheckByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Checks" ],
        "summary" : "Deletes check by primary key",
        "operationId" : "deleteCheck",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Check/{ClientKey}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Get checks by clientkey",
        "operationId" : "getsChecksByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Check/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Get checks by employeekey",
        "operationId" : "getsChecksByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Check/{VendorKey}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Get checks by vendorkey",
        "operationId" : "getsChecksByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Check"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Check/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Checks" ],
        "summary" : "Finds checks by id or name",
        "operationId" : "getsAllChecks",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Check"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/Check/Void/{CheckVoid}" : {
      "put" : {
        "tags" : [ "Checks" ],
        "summary" : "Void a check",
        "operationId" : "voidCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalVoid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckVoid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/Group/" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Gets all groups",
        "operationId" : "getsAllGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Group"
              }
            }
          }
        }
      }
    },
    "/SC/Group/{Group}" : {
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Adds a new group",
        "operationId" : "addGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Groups" ],
        "summary" : "Updates a group",
        "operationId" : "updateGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Group",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/Group/{GroupKey}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Gets group by primary key",
        "operationId" : "getsGroupByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Deletes group by primary key",
        "operationId" : "deleteGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/Group/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Finds groups by id or name",
        "operationId" : "getsAllGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Group"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/State/" : {
      "get" : {
        "tags" : [ "States" ],
        "summary" : "Gets all states",
        "operationId" : "getsAllStates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/State"
              }
            }
          }
        }
      }
    },
    "/CM/State/{State}" : {
      "post" : {
        "tags" : [ "States" ],
        "summary" : "Adds a new state",
        "operationId" : "addState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/State"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/State"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "States" ],
        "summary" : "Updates a state",
        "operationId" : "updateState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/State"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/State"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "State",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/State/{StateKey}" : {
      "get" : {
        "tags" : [ "States" ],
        "summary" : "Gets state by primary key",
        "operationId" : "getsStateByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/State"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "States" ],
        "summary" : "Deletes state by primary key",
        "operationId" : "deleteState",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StateKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/State/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "States" ],
        "summary" : "Finds states by id or name",
        "operationId" : "getsAllStates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/State"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Budget/" : {
      "get" : {
        "tags" : [ "Budgets" ],
        "summary" : "Gets all budgets",
        "operationId" : "getsAllBudgets",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Budget"
              }
            }
          }
        }
      }
    },
    "/GA/Budget/{AcctKey}/{IsCash}/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Budgets" ],
        "summary" : "Gets budget by primary key",
        "operationId" : "getsBudgetByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Budget"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Budgets" ],
        "summary" : "Deletes budget by primary key",
        "operationId" : "deleteBudget",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "IsCash",
        "in" : "path",
        "required" : true,
        "type" : "boolean"
      }, {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Budget/{Budget}" : {
      "post" : {
        "tags" : [ "Budgets" ],
        "summary" : "Adds a new budget",
        "operationId" : "addBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Budget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Budget"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Budgets" ],
        "summary" : "Updates a budget",
        "operationId" : "updateBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Budget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Budget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Budget",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/Client/" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Gets all clients",
        "operationId" : "getsAllClients",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Client"
              }
            }
          }
        }
      }
    },
    "/AR/Client/{AddressKey}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get clients by addresskey",
        "operationId" : "getsClientsByAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Client/{BillTermKey}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get clients by billtermkey",
        "operationId" : "getsClientsByBillTermKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillTermKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Client/{Client}" : {
      "post" : {
        "tags" : [ "Clients" ],
        "summary" : "Adds a new client",
        "operationId" : "addClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Client"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Clients" ],
        "summary" : "Updates a client",
        "operationId" : "updateClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Client"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Client",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/Client/{ClientClsKey}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get clients by clientclskey",
        "operationId" : "getsClientsByClientClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Client/{ClientKey}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Gets client by primary key",
        "operationId" : "getsClientByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Clients" ],
        "summary" : "Deletes client by primary key",
        "operationId" : "deleteClient",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Client/{CompanyKey}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get clients by companykey",
        "operationId" : "getsClientsByCompanyKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CompanyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Client/{MarketClsKey}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get clients by marketclskey",
        "operationId" : "getsClientsByMarketClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "MarketClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Client/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get clients by statusclskey",
        "operationId" : "getsClientsByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Client/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Finds clients by id or name",
        "operationId" : "getsAllClients",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Client"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/Office/" : {
      "get" : {
        "tags" : [ "Offices" ],
        "summary" : "Gets all offices",
        "operationId" : "getsAllOffices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Office"
              }
            }
          }
        }
      }
    },
    "/SS/Office/{AddressKey}" : {
      "get" : {
        "tags" : [ "Offices" ],
        "summary" : "Get offices by addresskey",
        "operationId" : "getsOfficesByAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Office"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/Office/{Office}" : {
      "post" : {
        "tags" : [ "Offices" ],
        "summary" : "Adds a new office",
        "operationId" : "addOffice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Office"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Office"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Offices" ],
        "summary" : "Updates a office",
        "operationId" : "updateOffice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Office"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Office"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Office",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/Office/{OfficeKey}" : {
      "get" : {
        "tags" : [ "Offices" ],
        "summary" : "Gets office by primary key",
        "operationId" : "getsOfficeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Office"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Offices" ],
        "summary" : "Deletes office by primary key",
        "operationId" : "deleteOffice",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OfficeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/Office/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Offices" ],
        "summary" : "Finds offices by id or name",
        "operationId" : "getsAllOffices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Office"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Period/" : {
      "get" : {
        "tags" : [ "Periods" ],
        "summary" : "Gets all periods",
        "operationId" : "getsAllPeriods",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Period"
              }
            }
          }
        }
      }
    },
    "/GA/Period/{Period}" : {
      "post" : {
        "tags" : [ "Periods" ],
        "summary" : "Adds a new period",
        "operationId" : "addPeriod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Period"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Period"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Periods" ],
        "summary" : "Updates a period",
        "operationId" : "updatePeriod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Period"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Period"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Period",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Period/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Periods" ],
        "summary" : "Gets period by primary key",
        "operationId" : "getsPeriodByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Period"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Periods" ],
        "summary" : "Deletes period by primary key",
        "operationId" : "deletePeriod",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Period/{PeriodStatusClsKey}" : {
      "get" : {
        "tags" : [ "Periods" ],
        "summary" : "Get periods by periodstatusclskey",
        "operationId" : "getsPeriodsByPeriodStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Period"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Period/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Periods" ],
        "summary" : "Finds periods by id or name",
        "operationId" : "getsAllPeriods",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Period"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/Vendor/" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Gets all vendors",
        "operationId" : "getsAllVendors",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vendor"
              }
            }
          }
        }
      }
    },
    "/AP/Vendor/{AddressKey}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Get vendors by addresskey",
        "operationId" : "getsVendorsByAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Vendor/{CompanyKey}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Get vendors by companykey",
        "operationId" : "getsVendorsByCompanyKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CompanyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Vendor/{PrimaryContactKey}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Get vendors by primarycontactkey",
        "operationId" : "getsVendorsByPrimaryContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PrimaryContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Vendor/{SecondaryContactKey}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Get vendors by secondarycontactkey",
        "operationId" : "getsVendorsBySecondaryContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SecondaryContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Vendor/{SpecialtyClsKey}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Get vendors by specialtyclskey",
        "operationId" : "getsVendorsBySpecialtyClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SpecialtyClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Vendor/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Get vendors by statusclskey",
        "operationId" : "getsVendorsByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Vendor/{Vendor}" : {
      "post" : {
        "tags" : [ "Vendors" ],
        "summary" : "Adds a new vendor",
        "operationId" : "addVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Vendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Vendors" ],
        "summary" : "Updates a vendor",
        "operationId" : "updateVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Vendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Vendor",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/Vendor/{VendorKey}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Gets vendor by primary key",
        "operationId" : "getsVendorByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Vendors" ],
        "summary" : "Deletes vendor by primary key",
        "operationId" : "deleteVendor",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Vendor/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Vendors" ],
        "summary" : "Finds vendors by id or name",
        "operationId" : "getsAllVendors",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vendor"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Account/" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Gets all accounts",
        "operationId" : "getsAllAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Account"
              }
            }
          }
        }
      }
    },
    "/GA/Account/{Account}" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Adds a new account",
        "operationId" : "addAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Accounts" ],
        "summary" : "Updates a account",
        "operationId" : "updateAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Account",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Account/{AcctInfoKey}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get accounts by acctinfokey",
        "operationId" : "getsAccountsByAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Account/{AcctKey}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Gets account by primary key",
        "operationId" : "getsAccountByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Accounts" ],
        "summary" : "Deletes account by primary key",
        "operationId" : "deleteAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Account/{CenterKey}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get accounts by centerkey",
        "operationId" : "getsAccountsByCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Account/{CheckDesignKey}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get accounts by checkdesignkey",
        "operationId" : "getsAccountsByCheckDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Account/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get accounts by statusclskey",
        "operationId" : "getsAccountsByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Account/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Finds accounts by id or name",
        "operationId" : "getsAllAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Account"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Accrual/" : {
      "get" : {
        "tags" : [ "Accruals" ],
        "summary" : "Gets all accruals",
        "operationId" : "getsAllAccruals",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Accrual"
              }
            }
          }
        }
      }
    },
    "/HR/Accrual/{Accrual}" : {
      "post" : {
        "tags" : [ "Accruals" ],
        "summary" : "Adds a new accrual",
        "operationId" : "addAccrual",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Accrual"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Accrual"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Accruals" ],
        "summary" : "Updates a accrual",
        "operationId" : "updateAccrual",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Accrual"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Accrual"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Accrual",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Accrual/{AccrualKey}" : {
      "get" : {
        "tags" : [ "Accruals" ],
        "summary" : "Gets accrual by primary key",
        "operationId" : "getsAccrualByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Accrual"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Accruals" ],
        "summary" : "Deletes accrual by primary key",
        "operationId" : "deleteAccrual",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Accrual/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Accruals" ],
        "summary" : "Get accruals by projectinfokey",
        "operationId" : "getsAccrualsByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Accrual"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Accrual/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Accruals" ],
        "summary" : "Finds accruals by id or name",
        "operationId" : "getsAllAccruals",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Accrual"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/AddFee/" : {
      "get" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Gets all add fees",
        "operationId" : "getsAllAdd Fees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AddFee"
              }
            }
          }
        }
      }
    },
    "/PA/AddFee/{AddFee}" : {
      "post" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Adds a new add fee",
        "operationId" : "addAddFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AddFee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Updates a add fee",
        "operationId" : "updateAddFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddFee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/AddFee/{AddFeeClsKey}" : {
      "get" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Get add fees by addfeeclskey",
        "operationId" : "getsAddFeesByAddFeeClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddFeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/AddFee/{AddFeeKey}" : {
      "get" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Gets add fee by primary key",
        "operationId" : "getsAdd FeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AddFee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Deletes add fee by primary key",
        "operationId" : "deleteAddFee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddFeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/AddFee/{RevAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Get add fees by revacctinfokey",
        "operationId" : "getsAddFeesByRevAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/AddFee/{TaxAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Get add fees by taxacctinfokey",
        "operationId" : "getsAddFeesByTaxAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TaxAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/AddFee/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Add Fees" ],
        "summary" : "Finds add fees by id or name",
        "operationId" : "getsAllAdd Fees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AddFee"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/Billing/" : {
      "get" : {
        "tags" : [ "Billings" ],
        "summary" : "Gets all billings",
        "operationId" : "getsAllBillings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Billing"
              }
            }
          }
        }
      }
    },
    "/SS/Billing/{Billing}" : {
      "post" : {
        "tags" : [ "Billings" ],
        "summary" : "Adds a new billing",
        "operationId" : "addBilling",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Billing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Billing"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Billings" ],
        "summary" : "Updates a billing",
        "operationId" : "updateBilling",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Billing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Billing"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Billing",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/Billing/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Billings" ],
        "summary" : "Gets billing by primary key",
        "operationId" : "getsBillingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Billing"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Billings" ],
        "summary" : "Deletes billing by primary key",
        "operationId" : "deleteBilling",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/Billing/{InvNumberClsKey}" : {
      "get" : {
        "tags" : [ "Billings" ],
        "summary" : "Get billings by invnumberclskey",
        "operationId" : "getsBillingsByInvNumberClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Billing"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvNumberClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Gets all contacts",
        "operationId" : "getsAllContacts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contact"
              }
            }
          }
        }
      }
    },
    "/CM/Contact/{CompanyKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contacts by companykey",
        "operationId" : "getsContactsByCompanyKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CompanyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/{Contact}" : {
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Adds a new contact",
        "operationId" : "addContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "Updates a contact",
        "operationId" : "updateContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Contact",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/Contact/{ContactKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Gets contact by primary key",
        "operationId" : "getsContactByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "Deletes contact by primary key",
        "operationId" : "deleteContact",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contacts by employeekey",
        "operationId" : "getsContactsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/{EthnicClsKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contacts by ethnicclskey",
        "operationId" : "getsContactsByEthnicClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EthnicClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/{GenderClsKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contacts by genderclskey",
        "operationId" : "getsContactsByGenderClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GenderClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/{OfficeKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contacts by officekey",
        "operationId" : "getsContactsByOfficeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OfficeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/{SportActivityClsKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contacts by sportactivityclskey",
        "operationId" : "getsContactsBySportActivityClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SportActivityClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/{SportEventClsKey}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contacts by sporteventclskey",
        "operationId" : "getsContactsBySportEventClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SportEventClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Contact/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Finds contacts by id or name",
        "operationId" : "getsAllContacts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contact"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Expense/" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Gets all expenses",
        "operationId" : "getsAllExpenses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Expense"
              }
            }
          }
        }
      }
    },
    "/HR/Expense/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Get expenses by employeekey",
        "operationId" : "getsExpensesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Expense"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Expense/{ESAcctKey}" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Get expenses by esacctkey",
        "operationId" : "getsExpensesByESAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Expense"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ESAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Expense/{Expense}" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Gets expense by revision",
        "operationId" : "getsExpenseByRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Expense"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Expenses" ],
        "summary" : "Adds a new expense",
        "operationId" : "addExpense",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Expense"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Expense"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expenses" ],
        "summary" : "Updates a expense",
        "operationId" : "updateExpense",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Expense"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Expense"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Expense",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Expense/{ExpKey}" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Gets expense by primary key",
        "operationId" : "getsExpenseByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Expense"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expenses" ],
        "summary" : "Deletes expense by primary key",
        "operationId" : "deleteExpense",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Expense/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Expenses" ],
        "summary" : "Finds expenses by id or name",
        "operationId" : "getsAllExpenses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Expense"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Expense/Void/{ExpenseVoid}" : {
      "put" : {
        "tags" : [ "Expenses" ],
        "summary" : "Void a expense",
        "operationId" : "voidExpense",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalVoid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseVoid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Holiday/" : {
      "get" : {
        "tags" : [ "Holidays" ],
        "summary" : "Gets all holidays",
        "operationId" : "getsAllHolidays",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Holiday"
              }
            }
          }
        }
      }
    },
    "/HR/Holiday/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Holidays" ],
        "summary" : "Get holidays by centerinfokey",
        "operationId" : "getsHolidaysByCenterInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Holiday"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Holiday/{Holiday}" : {
      "post" : {
        "tags" : [ "Holidays" ],
        "summary" : "Adds a new holiday",
        "operationId" : "addHoliday",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Holiday"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Holiday"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Holidays" ],
        "summary" : "Updates a holiday",
        "operationId" : "updateHoliday",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Holiday"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Holiday"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Holiday",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Holiday/{HolidayKey}" : {
      "get" : {
        "tags" : [ "Holidays" ],
        "summary" : "Gets holiday by primary key",
        "operationId" : "getsHolidayByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Holiday"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Holidays" ],
        "summary" : "Deletes holiday by primary key",
        "operationId" : "deleteHoliday",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "HolidayKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Invoice/" : {
      "get" : {
        "tags" : [ "Invoices" ],
        "summary" : "Gets all invoices",
        "operationId" : "getsAllInvoices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Invoice"
              }
            }
          }
        }
      }
    },
    "/AR/Invoice/{ARAcctKey}" : {
      "get" : {
        "tags" : [ "Invoices" ],
        "summary" : "Get invoices by aracctkey",
        "operationId" : "getsInvoicesByARAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Invoice/{ClientKey}" : {
      "get" : {
        "tags" : [ "Invoices" ],
        "summary" : "Get invoices by clientkey",
        "operationId" : "getsInvoicesByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Invoice/{Invoice}" : {
      "get" : {
        "tags" : [ "Invoices" ],
        "summary" : "Gets invoice by revision",
        "operationId" : "getsInvoiceByRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoice"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Invoices" ],
        "summary" : "Adds a new invoice",
        "operationId" : "addInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Invoice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoice"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoices" ],
        "summary" : "Updates a invoice",
        "operationId" : "updateInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Invoice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Invoice",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/Invoice/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Invoices" ],
        "summary" : "Gets invoice by primary key",
        "operationId" : "getsInvoiceByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoice"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoices" ],
        "summary" : "Deletes invoice by primary key",
        "operationId" : "deleteInvoice",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Invoice/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Invoices" ],
        "summary" : "Finds invoices by id or name",
        "operationId" : "getsAllInvoices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Invoice"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/Invoice/Void/{InvoiceVoid}" : {
      "put" : {
        "tags" : [ "Invoices" ],
        "summary" : "Void a invoice",
        "operationId" : "voidInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalVoid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceVoid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Journal/" : {
      "get" : {
        "tags" : [ "Journals" ],
        "summary" : "Gets all journals",
        "operationId" : "getsAllJournals",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Journal"
              }
            }
          }
        }
      }
    },
    "/GA/Journal/{CurrencyKey}" : {
      "get" : {
        "tags" : [ "Journals" ],
        "summary" : "Get journals by currencykey",
        "operationId" : "getsJournalsByCurrencyKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Journal"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CurrencyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Journal/{JEClsKey}" : {
      "get" : {
        "tags" : [ "Journals" ],
        "summary" : "Get journals by jeclskey",
        "operationId" : "getsJournalsByJEClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Journal"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JEClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Journal/{Journal}" : {
      "get" : {
        "tags" : [ "Journals" ],
        "summary" : "Gets journal by revision",
        "operationId" : "getsJournalByRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Journal"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Journals" ],
        "summary" : "Adds a new journal",
        "operationId" : "addJournal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Journal"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Journal"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Journals" ],
        "summary" : "Updates a journal",
        "operationId" : "updateJournal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Journal"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Journal"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Journal",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Journal/{JournalClsKey}" : {
      "get" : {
        "tags" : [ "Journals" ],
        "summary" : "Get journals by journalclskey",
        "operationId" : "getsJournalsByJournalClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Journal"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Journal/{JournalKey}" : {
      "get" : {
        "tags" : [ "Journals" ],
        "summary" : "Gets journal by primary key",
        "operationId" : "getsJournalByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Journal"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Journals" ],
        "summary" : "Deletes journal by primary key",
        "operationId" : "deleteJournal",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Journal/Void/{JournalVoid}" : {
      "put" : {
        "tags" : [ "Journals" ],
        "summary" : "Void a journal",
        "operationId" : "voidJournal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalVoid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalVoid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/Project/" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Gets all projects",
        "operationId" : "getsAllProjects",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Project"
              }
            }
          }
        }
      }
    },
    "/PA/Project/{BillEmployeeKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by billemployeekey",
        "operationId" : "getsProjectsByBillEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{DeptEmployeeKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by deptemployeekey",
        "operationId" : "getsProjectsByDeptEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DeptEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{PAEmployeeKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by paemployeekey",
        "operationId" : "getsProjectsByPAEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PAEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{PMEmployeeKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by pmemployeekey",
        "operationId" : "getsProjectsByPMEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PMEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{PrinEmployeeKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by prinemployeekey",
        "operationId" : "getsProjectsByPrinEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PrinEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{Project}" : {
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Adds a new project",
        "operationId" : "addProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Project"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Updates a project",
        "operationId" : "updateProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Project"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Project",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/Project/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by projectinfokey",
        "operationId" : "getsProjectsByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Gets project by primary key",
        "operationId" : "getsProjectByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Projects" ],
        "summary" : "Deletes project by primary key",
        "operationId" : "deleteProject",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{ProjectStatusClsKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by projectstatusclskey",
        "operationId" : "getsProjectsByProjectStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{SupEmployeeKey}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by supemployeekey",
        "operationId" : "getsProjectsBySupEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SupEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{WBS1Key}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by wbs1key",
        "operationId" : "getsProjectsByWBS1Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "WBS1Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{WBS2Key}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by wbs2key",
        "operationId" : "getsProjectsByWBS2Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "WBS2Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{WBS3Key}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by wbs3key",
        "operationId" : "getsProjectsByWBS3Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "WBS3Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{WBS4Key}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by wbs4key",
        "operationId" : "getsProjectsByWBS4Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "WBS4Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/{WBS5Key}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by wbs5key",
        "operationId" : "getsProjectsByWBS5Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "WBS5Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/Project/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Finds projects by id or name",
        "operationId" : "getsAllProjects",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Project"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/Receipt/" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Gets all receipts",
        "operationId" : "getsAllReceipts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Receipt"
              }
            }
          }
        }
      }
    },
    "/AR/Receipt/{BankAcctKey}" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Get receipts by bankacctkey",
        "operationId" : "getsReceiptsByBankAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Receipt/{ClientKey}" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Get receipts by clientkey",
        "operationId" : "getsReceiptsByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Receipt/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Get receipts by employeekey",
        "operationId" : "getsReceiptsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Receipt/{Receipt}" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Gets receipt by revision",
        "operationId" : "getsReceiptByRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Receipts" ],
        "summary" : "Adds a new receipt",
        "operationId" : "addReceipt",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Receipt"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Receipts" ],
        "summary" : "Updates a receipt",
        "operationId" : "updateReceipt",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Receipt"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Receipt",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/Receipt/{ReceiptClsKey}" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Get receipts by receiptclskey",
        "operationId" : "getsReceiptsByReceiptClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Receipt/{ReceiptKey}" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Gets receipt by primary key",
        "operationId" : "getsReceiptByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Receipts" ],
        "summary" : "Deletes receipt by primary key",
        "operationId" : "deleteReceipt",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Receipt/{VendorKey}" : {
      "get" : {
        "tags" : [ "Receipts" ],
        "summary" : "Get receipts by vendorkey",
        "operationId" : "getsReceiptsByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Receipt"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/Receipt/Void/{ReceiptVoid}" : {
      "put" : {
        "tags" : [ "Receipts" ],
        "summary" : "Void a receipt",
        "operationId" : "voidReceipt",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalVoid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptVoid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/Setting/" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Gets all settings",
        "operationId" : "getsAllSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Setting"
              }
            }
          }
        }
      }
    },
    "/SS/Setting/{InvoicePeriodKey}" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Get settings by invoiceperiodkey",
        "operationId" : "getsSettingsByInvoicePeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Setting"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoicePeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/Setting/{Setting}" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Adds a new setting",
        "operationId" : "addSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Setting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Setting"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Settings" ],
        "summary" : "Updates a setting",
        "operationId" : "updateSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Setting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Setting"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Setting",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/Setting/{SettingKey}" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Gets setting by primary key",
        "operationId" : "getsSettingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Setting"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes setting by primary key",
        "operationId" : "deleteSetting",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SettingKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Voucher/" : {
      "get" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Gets all vouchers",
        "operationId" : "getsAllVouchers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Voucher"
              }
            }
          }
        }
      }
    },
    "/AP/Voucher/{APAcctKey}" : {
      "get" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Get vouchers by apacctkey",
        "operationId" : "getsVouchersByAPAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Voucher"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Voucher/{PaymentTermKey}" : {
      "get" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Get vouchers by paymenttermkey",
        "operationId" : "getsVouchersByPaymentTermKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Voucher"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PaymentTermKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Voucher/{VendorKey}" : {
      "get" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Get vouchers by vendorkey",
        "operationId" : "getsVouchersByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Voucher"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Voucher/{Voucher}" : {
      "get" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Gets voucher by revision",
        "operationId" : "getsVoucherByRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Voucher"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Adds a new voucher",
        "operationId" : "addVoucher",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Voucher"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Voucher"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Updates a voucher",
        "operationId" : "updateVoucher",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Voucher"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Voucher"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Voucher",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/Voucher/{VoucherKey}" : {
      "get" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Gets voucher by primary key",
        "operationId" : "getsVoucherByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Voucher"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Deletes voucher by primary key",
        "operationId" : "deleteVoucher",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/Voucher/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Finds vouchers by id or name",
        "operationId" : "getsAllVouchers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Voucher"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/Voucher/Void/{VoucherVoid}" : {
      "put" : {
        "tags" : [ "Vouchers" ],
        "summary" : "Void a voucher",
        "operationId" : "voidVoucher",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalVoid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherVoid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/Address/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Gets all addresses",
        "operationId" : "getsAllAddresses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Address"
              }
            }
          }
        }
      }
    },
    "/CM/Address/{Address}" : {
      "post" : {
        "tags" : [ "Addresses" ],
        "summary" : "Adds a new address",
        "operationId" : "addAddress",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Address"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Address"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Addresses" ],
        "summary" : "Updates a address",
        "operationId" : "updateAddress",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Address"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Address"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Address",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/Address/{AddressKey}" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Gets address by primary key",
        "operationId" : "getsAddressByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Address"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Addresses" ],
        "summary" : "Deletes address by primary key",
        "operationId" : "deleteAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Company/" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Gets all companies",
        "operationId" : "getsAllCompanies",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Company"
              }
            }
          }
        }
      }
    },
    "/CM/Company/{CenterKey}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Get companies by centerkey",
        "operationId" : "getsCompaniesByCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Company/{Company}" : {
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "Adds a new company",
        "operationId" : "addCompany",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Companies" ],
        "summary" : "Updates a company",
        "operationId" : "updateCompany",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Company",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/Company/{CompanyKey}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Gets company by primary key",
        "operationId" : "getsCompanyByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "Deletes company by primary key",
        "operationId" : "deleteCompany",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CompanyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Company/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Finds companies by id or name",
        "operationId" : "getsAllCompanies",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Company"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/Country/" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "Gets all countries",
        "operationId" : "getsAllCountries",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Country"
              }
            }
          }
        }
      }
    },
    "/CM/Country/{Country}" : {
      "post" : {
        "tags" : [ "Countries" ],
        "summary" : "Adds a new country",
        "operationId" : "addCountry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Country"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Country"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Countries" ],
        "summary" : "Updates a country",
        "operationId" : "updateCountry",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Country"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Country"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Country",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/Country/{CountryKey}" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "Gets country by primary key",
        "operationId" : "getsCountryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Country"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Countries" ],
        "summary" : "Deletes country by primary key",
        "operationId" : "deleteCountry",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CountryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Country/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Countries" ],
        "summary" : "Finds countries by id or name",
        "operationId" : "getsAllCountries",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Country"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/Document/" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Gets all documents",
        "operationId" : "getsAllDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Document"
              }
            }
          }
        }
      }
    },
    "/DM/Document/{Document}" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Adds a new document",
        "operationId" : "addDocument",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Document"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Document"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Documents" ],
        "summary" : "Updates a document",
        "operationId" : "updateDocument",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Document"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Document"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Document",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/Document/{DocumentKey}" : {
      "delete" : {
        "tags" : [ "Documents" ],
        "summary" : "Deletes Document by primary key",
        "operationId" : "deleteDocument",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/Document/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Finds documents by id or name",
        "operationId" : "getsAllDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Document"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Employee/" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Gets all employees",
        "operationId" : "getsAllEmployees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Employee"
              }
            }
          }
        }
      }
    },
    "/HR/Employee/{CenterKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by centerkey",
        "operationId" : "getsEmployeesByCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{Employee}" : {
      "post" : {
        "tags" : [ "Employees" ],
        "summary" : "Adds a new employee",
        "operationId" : "addEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Employee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employees" ],
        "summary" : "Updates a employee",
        "operationId" : "updateEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Employee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Employee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Employee/{EmployeeClsKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by employeeclskey",
        "operationId" : "getsEmployeesByEmployeeClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Gets employee by primary key",
        "operationId" : "getsEmployeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employees" ],
        "summary" : "Deletes employee by primary key",
        "operationId" : "deleteEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{EmployeeStatusClsKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by employeestatusclskey",
        "operationId" : "getsEmployeesByEmployeeStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{LocationKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by locationkey",
        "operationId" : "getsEmployeesByLocationKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LocationKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{PayPeriodKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by payperiodkey",
        "operationId" : "getsEmployeesByPayPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayPeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{SLKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by slkey",
        "operationId" : "getsEmployeesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{SupEmployeeKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by supemployeekey",
        "operationId" : "getsEmployeesBySupEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SupEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{TSClsKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by tsclskey",
        "operationId" : "getsEmployeesByTSClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/{VendorKey}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Get employees by vendorkey",
        "operationId" : "getsEmployeesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Employee/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Employees" ],
        "summary" : "Finds employees by id or name",
        "operationId" : "getsAllEmployees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Employee"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Location/" : {
      "get" : {
        "tags" : [ "Locations" ],
        "summary" : "Gets all locations",
        "operationId" : "getsAllLocations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          }
        }
      }
    },
    "/HR/Location/{Location}" : {
      "post" : {
        "tags" : [ "Locations" ],
        "summary" : "Adds a new location",
        "operationId" : "addLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Locations" ],
        "summary" : "Updates a location",
        "operationId" : "updateLocation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Location",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/Location/{LocationKey}" : {
      "get" : {
        "tags" : [ "Locations" ],
        "summary" : "Gets location by primary key",
        "operationId" : "getsLocationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Locations" ],
        "summary" : "Deletes location by primary key",
        "operationId" : "deleteLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LocationKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/Location/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Locations" ],
        "summary" : "Finds locations by id or name",
        "operationId" : "getsAllLocations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Overhead/" : {
      "get" : {
        "tags" : [ "Overheads" ],
        "summary" : "Gets all overheads",
        "operationId" : "getsAllOverheads",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Overhead"
              }
            }
          }
        }
      }
    },
    "/GA/Overhead/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Overheads" ],
        "summary" : "Get overheads by centerinfokey",
        "operationId" : "getsOverheadsByCenterInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Overhead"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Overhead/{OHBaseClsKey}" : {
      "get" : {
        "tags" : [ "Overheads" ],
        "summary" : "Get overheads by ohbaseclskey",
        "operationId" : "getsOverheadsByOHBaseClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Overhead"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHBaseClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Overhead/{OHKey}" : {
      "get" : {
        "tags" : [ "Overheads" ],
        "summary" : "Gets overhead by primary key",
        "operationId" : "getsOverheadByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Overhead"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Overheads" ],
        "summary" : "Deletes overhead by primary key",
        "operationId" : "deleteOverhead",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Overhead/{Overhead}" : {
      "post" : {
        "tags" : [ "Overheads" ],
        "summary" : "Adds a new overhead",
        "operationId" : "addOverhead",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Overhead"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Overhead"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Overheads" ],
        "summary" : "Updates a overhead",
        "operationId" : "updateOverhead",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Overhead"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Overhead"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Overhead",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Overhead/{PctActualClsKey}" : {
      "get" : {
        "tags" : [ "Overheads" ],
        "summary" : "Get overheads by pctactualclskey",
        "operationId" : "getsOverheadsByPctActualClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Overhead"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PctActualClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Overhead/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Overheads" ],
        "summary" : "Get overheads by periodkey",
        "operationId" : "getsOverheadsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Overhead"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/PCLabel/" : {
      "get" : {
        "tags" : [ "PC Labels" ],
        "summary" : "Gets all pc labels",
        "operationId" : "getsAllPC Labels",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PCLabel"
              }
            }
          }
        }
      }
    },
    "/SS/PCLabel/{PCLabel}" : {
      "post" : {
        "tags" : [ "PC Labels" ],
        "summary" : "Adds a new pc label",
        "operationId" : "addPCLabel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PCLabel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PCLabel"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PC Labels" ],
        "summary" : "Updates a pc label",
        "operationId" : "updatePCLabel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PCLabel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PCLabel"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PCLabel",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/PCLabel/{PCLabelKey}" : {
      "get" : {
        "tags" : [ "PC Labels" ],
        "summary" : "Gets pc label by primary key",
        "operationId" : "getsPC LabelByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PCLabel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PC Labels" ],
        "summary" : "Deletes pc label by primary key",
        "operationId" : "deletePCLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PCLabelKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeRev/" : {
      "get" : {
        "tags" : [ "Time Revs" ],
        "summary" : "Gets all time revs",
        "operationId" : "getsAllTime Revs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeRev"
              }
            }
          }
        }
      }
    },
    "/HR/TimeRev/{TimeKey}" : {
      "get" : {
        "tags" : [ "Time Revs" ],
        "summary" : "Get time revs by timekey",
        "operationId" : "getsTimeRevsByTimeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeRev/{TimeRev}" : {
      "post" : {
        "tags" : [ "Time Revs" ],
        "summary" : "Adds a new time rev",
        "operationId" : "addTimeRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Revs" ],
        "summary" : "Updates a time rev",
        "operationId" : "updateTimeRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeRev/{TimeRevKey}" : {
      "get" : {
        "tags" : [ "Time Revs" ],
        "summary" : "Gets time rev by primary key",
        "operationId" : "getsTime RevByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Revs" ],
        "summary" : "Deletes time rev by primary key",
        "operationId" : "deleteTimeRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Gets all activities",
        "operationId" : "getsAllActivities",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Activity"
              }
            }
          }
        }
      }
    },
    "/CM/Activity/{Activity}" : {
      "post" : {
        "tags" : [ "Activities" ],
        "summary" : "Adds a new activity",
        "operationId" : "addActivity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Activity"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Activities" ],
        "summary" : "Updates a activity",
        "operationId" : "updateActivity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Activity"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Activity",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/Activity/{ActivityClsKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by activityclskey",
        "operationId" : "getsActivitiesByActivityClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Gets activity by primary key",
        "operationId" : "getsActivityByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activities" ],
        "summary" : "Deletes activity by primary key",
        "operationId" : "deleteActivity",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{ActivityStatusClsKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by activitystatusclskey",
        "operationId" : "getsActivitiesByActivityStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{ClientKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by clientkey",
        "operationId" : "getsActivitiesByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{ContactKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by contactkey",
        "operationId" : "getsActivitiesByContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{CreatorKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by creatorkey",
        "operationId" : "getsActivitiesByCreatorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CreatorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{OwnerKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by ownerkey",
        "operationId" : "getsActivitiesByOwnerKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OwnerKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{ParentActivityKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by parentactivitykey",
        "operationId" : "getsActivitiesByParentActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ParentActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by projectinfokey",
        "operationId" : "getsActivitiesByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/Activity/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Finds activities by id or name",
        "operationId" : "getsAllActivities",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Activity"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ActivityCode/" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Gets all activities",
        "operationId" : "getsAllActivities",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityCode"
              }
            }
          }
        }
      }
    },
    "/HR/ActivityCode/{ActivityCode}" : {
      "post" : {
        "tags" : [ "Activities" ],
        "summary" : "Adds a new activity",
        "operationId" : "addActivityCode",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityCode"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityCode"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Activities" ],
        "summary" : "Updates a activity",
        "operationId" : "updateActivityCode",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityCode"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityCode"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityCode",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ActivityCode/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Gets activity by primary key",
        "operationId" : "getsActivityByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityCode"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activities" ],
        "summary" : "Deletes activity by primary key",
        "operationId" : "deleteActivityCode",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ActivityCode/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Finds activities by id or name",
        "operationId" : "getsAllActivities",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityCode"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/BillTerm/" : {
      "get" : {
        "tags" : [ "Bill Terms" ],
        "summary" : "Gets all bill terms",
        "operationId" : "getsAllBill Terms",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillTerm"
              }
            }
          }
        }
      }
    },
    "/AR/BillTerm/{BillTerm}" : {
      "post" : {
        "tags" : [ "Bill Terms" ],
        "summary" : "Adds a new bill term",
        "operationId" : "addBillTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BillTerm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillTerm"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Bill Terms" ],
        "summary" : "Updates a bill term",
        "operationId" : "updateBillTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BillTerm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillTerm"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillTerm",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/BillTerm/{BillTermKey}" : {
      "get" : {
        "tags" : [ "Bill Terms" ],
        "summary" : "Gets bill term by primary key",
        "operationId" : "getsBill TermByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillTerm"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Bill Terms" ],
        "summary" : "Deletes bill term by primary key",
        "operationId" : "deleteBillTerm",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillTermKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/BillTerm/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Bill Terms" ],
        "summary" : "Finds bill terms by id or name",
        "operationId" : "getsAllBill Terms",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillTerm"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Currency/" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "Gets all currencies",
        "operationId" : "getsAllCurrencies",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Currency"
              }
            }
          }
        }
      }
    },
    "/GA/Currency/{Currency}" : {
      "post" : {
        "tags" : [ "Currencies" ],
        "summary" : "Adds a new currency",
        "operationId" : "addCurrency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Currency"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Currency"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Currencies" ],
        "summary" : "Updates a currency",
        "operationId" : "updateCurrency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Currency"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Currency"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Currency",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/Currency/{CurrencyKey}" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "Gets currency by primary key",
        "operationId" : "getsCurrencyByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Currency"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Currencies" ],
        "summary" : "Deletes currency by primary key",
        "operationId" : "deleteCurrency",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CurrencyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/Currency/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "Finds currencies by id or name",
        "operationId" : "getsAllCurrencies",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Currency"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/ESSetting/" : {
      "get" : {
        "tags" : [ "ESSettings" ],
        "summary" : "Gets all essettings",
        "operationId" : "getsAllESSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ESSetting"
              }
            }
          }
        }
      }
    },
    "/SS/ESSetting/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "ESSettings" ],
        "summary" : "Gets essetting by primary key",
        "operationId" : "getsESSettingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ESSetting"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ESSettings" ],
        "summary" : "Deletes essetting by primary key",
        "operationId" : "deleteESSetting",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ESSetting/{ESSetting}" : {
      "post" : {
        "tags" : [ "ESSettings" ],
        "summary" : "Adds a new essetting",
        "operationId" : "addESSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ESSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ESSetting"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ESSettings" ],
        "summary" : "Updates a essetting",
        "operationId" : "updateESSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ESSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ESSetting"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ESSetting",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/Invoicing/" : {
      "get" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Gets all invoicings",
        "operationId" : "getsAllInvoicings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Invoicing"
              }
            }
          }
        }
      }
    },
    "/IN/Invoicing/{ARAcctKey}" : {
      "get" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Get invoicings by aracctkey",
        "operationId" : "getsInvoicingsByARAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoicing"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/Invoicing/{ClientKey}" : {
      "get" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Get invoicings by clientkey",
        "operationId" : "getsInvoicingsByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoicing"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/Invoicing/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Get invoicings by invoicekey",
        "operationId" : "getsInvoicingsByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoicing"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/Invoicing/{Invoicing}" : {
      "post" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Adds a new invoicing",
        "operationId" : "addInvoicing",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Invoicing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoicing"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Updates a invoicing",
        "operationId" : "updateInvoicing",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Invoicing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoicing"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Invoicing",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/Invoicing/{ProjectInfoKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Gets invoicing by primary key",
        "operationId" : "getsInvoicingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Invoicing"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoicings" ],
        "summary" : "Deletes invoicing by primary key",
        "operationId" : "deleteInvoicing",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/RoleLine/" : {
      "get" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Gets all role lines",
        "operationId" : "getsAllRole Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RoleLine"
              }
            }
          }
        }
      }
    },
    "/SC/RoleLine/{PermissionKey}" : {
      "get" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Get role lines by permissionkey",
        "operationId" : "getsRoleLinesByPermissionKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RoleLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PermissionKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/RoleLine/{RoleKey}" : {
      "get" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Get role lines by rolekey",
        "operationId" : "getsRoleLinesByRoleKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RoleLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RoleKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/RoleLine/{RoleLine}" : {
      "post" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Adds a new role line",
        "operationId" : "addRoleLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RoleLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RoleLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Updates a role line",
        "operationId" : "updateRoleLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RoleLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RoleLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RoleLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/RoleLine/{RoleLineKey}" : {
      "get" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Gets role line by primary key",
        "operationId" : "getsRole LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RoleLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Deletes role line by primary key",
        "operationId" : "deleteRoleLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RoleLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/RoleLine/{RptDesignKey}" : {
      "get" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Get role lines by rptdesignkey",
        "operationId" : "getsRoleLinesByRptDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RoleLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RptDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/RoleLine/{ScreenKey}" : {
      "get" : {
        "tags" : [ "Role Lines" ],
        "summary" : "Get role lines by screenkey",
        "operationId" : "getsRoleLinesByScreenKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RoleLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ScreenKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/TSFormat/" : {
      "get" : {
        "tags" : [ "TS Formats" ],
        "summary" : "Gets all ts formats",
        "operationId" : "getsAllTS Formats",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSFormat"
              }
            }
          }
        }
      }
    },
    "/SS/TSFormat/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "TS Formats" ],
        "summary" : "Gets ts format by primary key",
        "operationId" : "getsTS FormatByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormat"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TS Formats" ],
        "summary" : "Deletes ts format by primary key",
        "operationId" : "deleteTSFormat",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/TSFormat/{TSFormat}" : {
      "post" : {
        "tags" : [ "TS Formats" ],
        "summary" : "Adds a new ts format",
        "operationId" : "addTSFormat",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSFormat"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormat"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TS Formats" ],
        "summary" : "Updates a ts format",
        "operationId" : "updateTSFormat",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSFormat"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormat"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSFormat",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeLine/" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Gets all time lines",
        "operationId" : "getsAllTime Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeLine"
              }
            }
          }
        }
      }
    },
    "/HR/TimeLine/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by activitykey",
        "operationId" : "getsTimeLinesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by billingmodclskey",
        "operationId" : "getsTimeLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by billstatusclskey",
        "operationId" : "getsTimeLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{EmployeeCenterKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by employeecenterkey",
        "operationId" : "getsTimeLinesByEmployeeCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeCenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by invoicekey",
        "operationId" : "getsTimeLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{OTClsKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by otclskey",
        "operationId" : "getsTimeLinesByOTClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OTClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{ProjectCenterKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by projectcenterkey",
        "operationId" : "getsTimeLinesByProjectCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectCenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by projectkey",
        "operationId" : "getsTimeLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{SLKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by slkey",
        "operationId" : "getsTimeLinesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{TimeLine}" : {
      "post" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Adds a new time line",
        "operationId" : "addTimeLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Updates a time line",
        "operationId" : "updateTimeLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeLine/{TimeLineKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Gets time line by primary key",
        "operationId" : "getsTime LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Deletes time line by primary key",
        "operationId" : "deleteTimeLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLine/{TimeRevKey}" : {
      "get" : {
        "tags" : [ "Time Lines" ],
        "summary" : "Get time lines by timerevkey",
        "operationId" : "getsTimeLinesByTimeRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/TimeZone/" : {
      "get" : {
        "tags" : [ "Time Zones" ],
        "summary" : "Gets all time zones",
        "operationId" : "getsAllTime Zones",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeZone"
              }
            }
          }
        }
      }
    },
    "/UTL/TimeZone/{TimeZone}" : {
      "post" : {
        "tags" : [ "Time Zones" ],
        "summary" : "Adds a new time zone",
        "operationId" : "addTimeZone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeZone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeZone"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Zones" ],
        "summary" : "Updates a time zone",
        "operationId" : "updateTimeZone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeZone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeZone"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeZone",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/TimeZone/{TZKey}" : {
      "get" : {
        "tags" : [ "Time Zones" ],
        "summary" : "Gets time zone by primary key",
        "operationId" : "getsTime ZoneByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeZone"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Zones" ],
        "summary" : "Deletes time zone by primary key",
        "operationId" : "deleteTimeZone",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TZKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/TimeZone/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Time Zones" ],
        "summary" : "Finds time zones by id or name",
        "operationId" : "getsAllTime Zones",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeZone"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/UserRole/" : {
      "get" : {
        "tags" : [ "User Roles" ],
        "summary" : "Gets all user roles",
        "operationId" : "getsAllUser Roles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserRole"
              }
            }
          }
        }
      }
    },
    "/SC/UserRole/{RoleKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "User Roles" ],
        "summary" : "Gets user role by primary key",
        "operationId" : "getsUser RoleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/UserRole"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "User Roles" ],
        "summary" : "Deletes user role by primary key",
        "operationId" : "deleteUserRole",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RoleKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/UserRole/{UserRole}" : {
      "post" : {
        "tags" : [ "User Roles" ],
        "summary" : "Adds a new user role",
        "operationId" : "addUserRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserRole"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/UserRole"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "User Roles" ],
        "summary" : "Updates a user role",
        "operationId" : "updateUserRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserRole"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/UserRole"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserRole",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/WBSLabel/" : {
      "get" : {
        "tags" : [ "WBS Labels" ],
        "summary" : "Gets all wbs labels",
        "operationId" : "getsAllWBS Labels",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WBSLabel"
              }
            }
          }
        }
      }
    },
    "/SS/WBSLabel/{WBSLabel}" : {
      "post" : {
        "tags" : [ "WBS Labels" ],
        "summary" : "Adds a new wbs label",
        "operationId" : "addWBSLabel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WBSLabel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/WBSLabel"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "WBS Labels" ],
        "summary" : "Updates a wbs label",
        "operationId" : "updateWBSLabel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WBSLabel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/WBSLabel"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "WBSLabel",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/WBSLabel/{WBSLabelKey}" : {
      "get" : {
        "tags" : [ "WBS Labels" ],
        "summary" : "Gets wbs label by primary key",
        "operationId" : "getsWBS LabelByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/WBSLabel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "WBS Labels" ],
        "summary" : "Deletes wbs label by primary key",
        "operationId" : "deleteWBSLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "WBSLabelKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/APDefault/" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Gets all ap defaults",
        "operationId" : "getsAllAP Defaults",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APDefault"
              }
            }
          }
        }
      }
    },
    "/SS/APDefault/{APAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Get ap defaults by apacctinfokey",
        "operationId" : "getsAPDefaultsByAPAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/APDefault/{APCnsAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Get ap defaults by apcnsacctinfokey",
        "operationId" : "getsAPDefaultsByAPCnsAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APCnsAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/APDefault/{APDefault}" : {
      "post" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Adds a new ap default",
        "operationId" : "addAPDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/APDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Updates a ap default",
        "operationId" : "updateAPDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/APDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APDefault",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/APDefault/{APEmpAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Get ap defaults by apempacctinfokey",
        "operationId" : "getsAPDefaultsByAPEmpAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APEmpAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/APDefault/{APICAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Get ap defaults by apicacctinfokey",
        "operationId" : "getsAPDefaultsByAPICAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APICAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/APDefault/{CCAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Get ap defaults by ccacctinfokey",
        "operationId" : "getsAPDefaultsByCCAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CCAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/APDefault/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Gets ap default by primary key",
        "operationId" : "getsAP DefaultByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Deletes ap default by primary key",
        "operationId" : "deleteAPDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/APDefault/{DiscAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AP Defaults" ],
        "summary" : "Get ap defaults by discacctinfokey",
        "operationId" : "getsAPDefaultsByDiscAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/APDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DiscAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ARDefault/" : {
      "get" : {
        "tags" : [ "AR Defaults" ],
        "summary" : "Gets all ar defaults",
        "operationId" : "getsAllAR Defaults",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ARDefault"
              }
            }
          }
        }
      }
    },
    "/SS/ARDefault/{ARDefault}" : {
      "post" : {
        "tags" : [ "AR Defaults" ],
        "summary" : "Adds a new ar default",
        "operationId" : "addARDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ARDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefault"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AR Defaults" ],
        "summary" : "Updates a ar default",
        "operationId" : "updateARDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ARDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARDefault",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/ARDefault/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "AR Defaults" ],
        "summary" : "Gets ar default by primary key",
        "operationId" : "getsAR DefaultByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefault"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AR Defaults" ],
        "summary" : "Deletes ar default by primary key",
        "operationId" : "deleteARDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/Adjustment/" : {
      "get" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Gets all adjustments",
        "operationId" : "getsAllAdjustments",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Adjustment"
              }
            }
          }
        }
      }
    },
    "/BI/Adjustment/{AdjKey}" : {
      "get" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Gets adjustment by primary key",
        "operationId" : "getsAdjustmentByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Adjustment"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Deletes adjustment by primary key",
        "operationId" : "deleteAdjustment",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/Adjustment/{Adjustment}" : {
      "post" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Adds a new adjustment",
        "operationId" : "addAdjustment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Adjustment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Adjustment"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Updates a adjustment",
        "operationId" : "updateAdjustment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Adjustment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Adjustment"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Adjustment",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/BI/Adjustment/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Get adjustments by periodkey",
        "operationId" : "getsAdjustmentsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Adjustment"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/Adjustment/{UserKey}" : {
      "get" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Get adjustments by userkey",
        "operationId" : "getsAdjustmentsByUserKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Adjustment"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Gets all check lines",
        "operationId" : "getsAllCheck Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckLine"
              }
            }
          }
        }
      }
    },
    "/AP/CheckLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by acctkey",
        "operationId" : "getsCheckLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by billingmodclskey",
        "operationId" : "getsCheckLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by billstatusclskey",
        "operationId" : "getsCheckLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{CheckLine}" : {
      "post" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Adds a new check line",
        "operationId" : "addCheckLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Updates a check line",
        "operationId" : "updateCheckLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CheckLine/{CheckLineKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Gets check line by primary key",
        "operationId" : "getsCheck LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Deletes check line by primary key",
        "operationId" : "deleteCheckLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{CheckRevKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by checkrevkey",
        "operationId" : "getsCheckLinesByCheckRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by exptypekey",
        "operationId" : "getsCheckLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by invoicekey",
        "operationId" : "getsCheckLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by lineclskey",
        "operationId" : "getsCheckLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by periodid",
        "operationId" : "getsCheckLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Check Lines" ],
        "summary" : "Get check lines by projectkey",
        "operationId" : "getsCheckLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/GroupLine/" : {
      "get" : {
        "tags" : [ "Group Lines" ],
        "summary" : "Gets all group lines",
        "operationId" : "getsAllGroup Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GroupLine"
              }
            }
          }
        }
      }
    },
    "/SC/GroupLine/{GroupKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Group Lines" ],
        "summary" : "Gets group line by primary key",
        "operationId" : "getsGroup LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GroupLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Group Lines" ],
        "summary" : "Deletes group line by primary key",
        "operationId" : "deleteGroupLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "GroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/GroupLine/{GroupLine}" : {
      "post" : {
        "tags" : [ "Group Lines" ],
        "summary" : "Adds a new group line",
        "operationId" : "addGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GroupLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Group Lines" ],
        "summary" : "Updates a group line",
        "operationId" : "updateGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GroupLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/GroupRole/" : {
      "get" : {
        "tags" : [ "Group Roles" ],
        "summary" : "Gets all group roles",
        "operationId" : "getsAllGroup Roles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GroupRole"
              }
            }
          }
        }
      }
    },
    "/SC/GroupRole/{GroupKey}/{RoleKey}" : {
      "get" : {
        "tags" : [ "Group Roles" ],
        "summary" : "Gets group role by primary key",
        "operationId" : "getsGroup RoleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GroupRole"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Group Roles" ],
        "summary" : "Deletes group role by primary key",
        "operationId" : "deleteGroupRole",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RoleKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "GroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/GroupRole/{GroupRole}" : {
      "post" : {
        "tags" : [ "Group Roles" ],
        "summary" : "Adds a new group role",
        "operationId" : "addGroupRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GroupRole"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GroupRole"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Group Roles" ],
        "summary" : "Updates a group role",
        "operationId" : "updateGroupRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GroupRole"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GroupRole"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GroupRole",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/ICDefault/" : {
      "get" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Gets all ic defaults",
        "operationId" : "getsAllIC Defaults",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ICDefault"
              }
            }
          }
        }
      }
    },
    "/SS/ICDefault/{AcctInfoKey}" : {
      "get" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Get ic defaults by acctinfokey",
        "operationId" : "getsICDefaultsByAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ICDefault/{APAcctInfoKey}" : {
      "get" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Get ic defaults by apacctinfokey",
        "operationId" : "getsICDefaultsByAPAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ICDefault/{ARAcctInfoKey}" : {
      "get" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Get ic defaults by aracctinfokey",
        "operationId" : "getsICDefaultsByARAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ICDefault/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Gets ic default by primary key",
        "operationId" : "getsIC DefaultByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Deletes ic default by primary key",
        "operationId" : "deleteICDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ICDefault/{ICDefault}" : {
      "post" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Adds a new ic default",
        "operationId" : "addICDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ICDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Updates a ic default",
        "operationId" : "updateICDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ICDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ICDefault",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/ICDefault/{RevAcctInfoKey}" : {
      "get" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Get ic defaults by revacctinfokey",
        "operationId" : "getsICDefaultsByRevAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ICDefault/{UnRevAcctInfoKey}" : {
      "get" : {
        "tags" : [ "IC Defaults" ],
        "summary" : "Get ic defaults by unrevacctinfokey",
        "operationId" : "getsICDefaultsByUnRevAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ICDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UnRevAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRate/" : {
      "get" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Gets all labor rates",
        "operationId" : "getsAllLabor Rates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborRate"
              }
            }
          }
        }
      }
    },
    "/PA/LaborRate/{LaborRate}" : {
      "post" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Adds a new labor rate",
        "operationId" : "addLaborRate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRate"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Updates a labor rate",
        "operationId" : "updateLaborRate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborRate",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborRate/{LRClsKey}" : {
      "get" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Get labor rates by lrclskey",
        "operationId" : "getsLaborRatesByLRClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRate/{LRKey}" : {
      "get" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Gets labor rate by primary key",
        "operationId" : "getsLabor RateByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRate"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Deletes labor rate by primary key",
        "operationId" : "deleteLaborRate",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRate/{RateClsKey}" : {
      "get" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Get labor rates by rateclskey",
        "operationId" : "getsLaborRatesByRateClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RateClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRate/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Labor Rates" ],
        "summary" : "Finds labor rates by id or name",
        "operationId" : "getsAllLabor Rates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborRate"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/LaborTeam/" : {
      "get" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Gets all labor teams",
        "operationId" : "getsAllLabor Teams",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborTeam"
              }
            }
          }
        }
      }
    },
    "/PM/LaborTeam/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Get labor teams by employeekey",
        "operationId" : "getsLaborTeamsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeam"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborTeam/{LaborTeam}" : {
      "post" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Adds a new labor team",
        "operationId" : "addLaborTeam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeam"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Updates a labor team",
        "operationId" : "updateLaborTeam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeam"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborTeam",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/LaborTeam/{LTKey}" : {
      "get" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Gets labor team by primary key",
        "operationId" : "getsLabor TeamByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeam"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Deletes labor team by primary key",
        "operationId" : "deleteLaborTeam",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LTKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborTeam/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Get labor teams by projectkey",
        "operationId" : "getsLaborTeamsByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeam"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborTeam/{SLKey}" : {
      "get" : {
        "tags" : [ "Labor Teams" ],
        "summary" : "Get labor teams by slkey",
        "operationId" : "getsLaborTeamsBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeam"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/PayPeriod/" : {
      "get" : {
        "tags" : [ "Pay Periods" ],
        "summary" : "Gets all pay periods",
        "operationId" : "getsAllPay Periods",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PayPeriod"
              }
            }
          }
        }
      }
    },
    "/HR/PayPeriod/{PayPeriod}" : {
      "post" : {
        "tags" : [ "Pay Periods" ],
        "summary" : "Adds a new pay period",
        "operationId" : "addPayPeriod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayPeriod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PayPeriod"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Pay Periods" ],
        "summary" : "Updates a pay period",
        "operationId" : "updatePayPeriod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayPeriod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PayPeriod"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayPeriod",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/PayPeriod/{PayPeriodKey}" : {
      "get" : {
        "tags" : [ "Pay Periods" ],
        "summary" : "Gets pay period by primary key",
        "operationId" : "getsPay PeriodByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PayPeriod"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Pay Periods" ],
        "summary" : "Deletes pay period by primary key",
        "operationId" : "deletePayPeriod",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayPeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/PayPeriod/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Pay Periods" ],
        "summary" : "Finds pay periods by id or name",
        "operationId" : "getsAllPay Periods",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PayPeriod"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/Preference/" : {
      "get" : {
        "tags" : [ "Preferences" ],
        "summary" : "Gets all preferences",
        "operationId" : "getsAllPreferences",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Preference"
              }
            }
          }
        }
      }
    },
    "/SC/Preference/{Preference}" : {
      "post" : {
        "tags" : [ "Preferences" ],
        "summary" : "Adds a new preference",
        "operationId" : "addPreference",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Preference"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Preference"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Preferences" ],
        "summary" : "Updates a preference",
        "operationId" : "updatePreference",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Preference"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Preference"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Preference",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/Preference/{TZKey}" : {
      "get" : {
        "tags" : [ "Preferences" ],
        "summary" : "Get preferences by tzkey",
        "operationId" : "getsPreferencesByTZKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Preference"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TZKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/Preference/{UserKey}" : {
      "get" : {
        "tags" : [ "Preferences" ],
        "summary" : "Gets preference by primary key",
        "operationId" : "getsPreferenceByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Preference"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Preferences" ],
        "summary" : "Deletes preference by primary key",
        "operationId" : "deletePreference",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/SearchCls/" : {
      "get" : {
        "tags" : [ "SearchClses" ],
        "summary" : "Gets all searchclses",
        "operationId" : "getsAllSearchClses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SearchCls"
              }
            }
          }
        }
      }
    },
    "/SYS/SearchCls/{SearchClsKey}" : {
      "get" : {
        "tags" : [ "SearchClses" ],
        "summary" : "Gets searchcls by primary key",
        "operationId" : "getsSearchClsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SearchCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SearchClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/SearchCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "SearchClses" ],
        "summary" : "Finds searchclses by id or name",
        "operationId" : "getsAllSearchClses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SearchCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/StageCls/" : {
      "get" : {
        "tags" : [ "Stage Clses" ],
        "summary" : "Gets all stage clses",
        "operationId" : "getsAllStage Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StageCls"
              }
            }
          }
        }
      }
    },
    "/USR/StageCls/{StageCls}" : {
      "post" : {
        "tags" : [ "Stage Clses" ],
        "summary" : "Adds a new stage cls",
        "operationId" : "addStageCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StageCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/StageCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Stage Clses" ],
        "summary" : "Updates a stage cls",
        "operationId" : "updateStageCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StageCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/StageCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StageCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/StageCls/{StageClsKey}" : {
      "get" : {
        "tags" : [ "Stage Clses" ],
        "summary" : "Gets stage cls by primary key",
        "operationId" : "getsStage ClsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/StageCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Stage Clses" ],
        "summary" : "Deletes stage cls by primary key",
        "operationId" : "deleteStageCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StageClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/StageCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Stage Clses" ],
        "summary" : "Finds stage clses by id or name",
        "operationId" : "getsAllStage Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StageCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/TSSetting/" : {
      "get" : {
        "tags" : [ "TS Settings" ],
        "summary" : "Gets all ts settings",
        "operationId" : "getsAllTS Settings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSSetting"
              }
            }
          }
        }
      }
    },
    "/SS/TSSetting/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "TS Settings" ],
        "summary" : "Gets ts setting by primary key",
        "operationId" : "getsTS SettingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSSetting"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TS Settings" ],
        "summary" : "Deletes ts setting by primary key",
        "operationId" : "deleteTSSetting",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/TSSetting/{TSSetting}" : {
      "post" : {
        "tags" : [ "TS Settings" ],
        "summary" : "Adds a new ts setting",
        "operationId" : "addTSSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSSetting"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TS Settings" ],
        "summary" : "Updates a ts setting",
        "operationId" : "updateTSSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSSetting"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSSetting",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeAudit/" : {
      "get" : {
        "tags" : [ "Time Audits" ],
        "summary" : "Gets all time audits",
        "operationId" : "getsAllTime Audits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeAudit"
              }
            }
          }
        }
      }
    },
    "/HR/TimeAudit/{TimeAudit}" : {
      "post" : {
        "tags" : [ "Time Audits" ],
        "summary" : "Adds a new time audit",
        "operationId" : "addTimeAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeAudit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Audits" ],
        "summary" : "Updates a time audit",
        "operationId" : "updateTimeAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeAudit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeAudit/{TimeAuditKey}" : {
      "get" : {
        "tags" : [ "Time Audits" ],
        "summary" : "Gets time audit by primary key",
        "operationId" : "getsTime AuditByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeAudit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Audits" ],
        "summary" : "Deletes time audit by primary key",
        "operationId" : "deleteTimeAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeAuditKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeAudit/{TimeLineKey}" : {
      "get" : {
        "tags" : [ "Time Audits" ],
        "summary" : "Get time audits by timelinekey",
        "operationId" : "getsTimeAuditsByTimeLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeAudit/{TimeRevKey}" : {
      "get" : {
        "tags" : [ "Time Audits" ],
        "summary" : "Get time audits by timerevkey",
        "operationId" : "getsTimeAuditsByTimeRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorEFT/" : {
      "get" : {
        "tags" : [ "Vendor EFTs" ],
        "summary" : "Gets all vendor efts",
        "operationId" : "getsAllVendor EFTs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorEFT"
              }
            }
          }
        }
      }
    },
    "/AP/VendorEFT/{VendorEFT}" : {
      "post" : {
        "tags" : [ "Vendor EFTs" ],
        "summary" : "Adds a new vendor eft",
        "operationId" : "addVendorEFT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorEFT"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorEFT"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Vendor EFTs" ],
        "summary" : "Updates a vendor eft",
        "operationId" : "updateVendorEFT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorEFT"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorEFT"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorEFT",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VendorEFT/{VendorEFTKey}" : {
      "get" : {
        "tags" : [ "Vendor EFTs" ],
        "summary" : "Gets vendor eft by primary key",
        "operationId" : "getsVendor EFTByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorEFT"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Vendor EFTs" ],
        "summary" : "Deletes vendor eft by primary key",
        "operationId" : "deleteVendorEFT",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorEFTKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorEFT/{VendorKey}" : {
      "get" : {
        "tags" : [ "Vendor EFTs" ],
        "summary" : "Get vendor efts by vendorkey",
        "operationId" : "getsVendorEFTsByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorEFT"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BudgetCls/" : {
      "get" : {
        "tags" : [ "Budget Clses" ],
        "summary" : "Gets all budget clses",
        "operationId" : "getsAllBudget Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BudgetCls"
              }
            }
          }
        }
      }
    },
    "/SYS/BudgetCls/{BudgetClsKey}" : {
      "get" : {
        "tags" : [ "Budget Clses" ],
        "summary" : "Gets budget cls by primary key",
        "operationId" : "getsBudget ClsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BudgetCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BudgetClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BudgetCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Budget Clses" ],
        "summary" : "Finds budget clses by id or name",
        "operationId" : "getsAllBudget Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BudgetCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CheckAudit/" : {
      "get" : {
        "tags" : [ "Check Audits" ],
        "summary" : "Gets all check audits",
        "operationId" : "getsAllCheck Audits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckAudit"
              }
            }
          }
        }
      }
    },
    "/AP/CheckAudit/{CheckAudit}" : {
      "post" : {
        "tags" : [ "Check Audits" ],
        "summary" : "Adds a new check audit",
        "operationId" : "addCheckAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckAudit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Check Audits" ],
        "summary" : "Updates a check audit",
        "operationId" : "updateCheckAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckAudit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CheckAudit/{CheckAuditKey}" : {
      "get" : {
        "tags" : [ "Check Audits" ],
        "summary" : "Gets check audit by primary key",
        "operationId" : "getsCheck AuditByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckAudit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Check Audits" ],
        "summary" : "Deletes check audit by primary key",
        "operationId" : "deleteCheckAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckAuditKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckAudit/{CheckLineKey}" : {
      "get" : {
        "tags" : [ "Check Audits" ],
        "summary" : "Get check audits by checklinekey",
        "operationId" : "getsCheckAuditsByCheckLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckAudit/{CheckRevKey}" : {
      "get" : {
        "tags" : [ "Check Audits" ],
        "summary" : "Get check audits by checkrevkey",
        "operationId" : "getsCheckAuditsByCheckRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckCash/" : {
      "get" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Gets all check cashes",
        "operationId" : "getsAllCheck Cashes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckCash"
              }
            }
          }
        }
      }
    },
    "/AP/CheckCash/{AcctKey}" : {
      "get" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Get check cashes by acctkey",
        "operationId" : "getsCheckCashesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckCash/{CheckCash}" : {
      "post" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Adds a new check cash",
        "operationId" : "addCheckCash",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckCash"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCash"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Updates a check cash",
        "operationId" : "updateCheckCash",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckCash"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckCash",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CheckCash/{CheckCashKey}" : {
      "get" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Gets check cash by primary key",
        "operationId" : "getsCheck CashByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCash"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Deletes check cash by primary key",
        "operationId" : "deleteCheckCash",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckCashKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckCash/{CheckKey}" : {
      "get" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Get check cashes by checkkey",
        "operationId" : "getsCheckCashesByCheckKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckCash/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Get check cashes by lineclskey",
        "operationId" : "getsCheckCashesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckCash/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Check Cashes" ],
        "summary" : "Get check cashes by projectkey",
        "operationId" : "getsCheckCashesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CreditCard/" : {
      "get" : {
        "tags" : [ "Credit Cards" ],
        "summary" : "Gets all credit cards",
        "operationId" : "getsAllCredit Cards",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CreditCard"
              }
            }
          }
        }
      }
    },
    "/AP/CreditCard/{CCKey}" : {
      "get" : {
        "tags" : [ "Credit Cards" ],
        "summary" : "Gets credit card by primary key",
        "operationId" : "getsCredit CardByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CreditCard"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Credit Cards" ],
        "summary" : "Deletes credit card by primary key",
        "operationId" : "deleteCreditCard",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CCKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CreditCard/{CreditCard}" : {
      "post" : {
        "tags" : [ "Credit Cards" ],
        "summary" : "Adds a new credit card",
        "operationId" : "addCreditCard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreditCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CreditCard"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Credit Cards" ],
        "summary" : "Updates a credit card",
        "operationId" : "updateCreditCard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreditCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CreditCard"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CreditCard",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CreditCard/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Credit Cards" ],
        "summary" : "Finds credit cards by id or name",
        "operationId" : "getsAllCredit Cards",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CreditCard"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeCC/" : {
      "get" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Gets all employee ccs",
        "operationId" : "getsAllEmployee CCs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeCC"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeCC/{CC1Key}" : {
      "get" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Get employee ccs by cc1key",
        "operationId" : "getsEmployeeCCsByCC1Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeCC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CC1Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeCC/{CC2Key}" : {
      "get" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Get employee ccs by cc2key",
        "operationId" : "getsEmployeeCCsByCC2Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeCC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CC2Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeCC/{CC3Key}" : {
      "get" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Get employee ccs by cc3key",
        "operationId" : "getsEmployeeCCsByCC3Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeCC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CC3Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeCC/{EmployeeCC}" : {
      "post" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Adds a new employee cc",
        "operationId" : "addEmployeeCC",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeCC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeCC"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Updates a employee cc",
        "operationId" : "updateEmployeeCC",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeCC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeCC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeCC",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeCC/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Gets employee cc by primary key",
        "operationId" : "getsEmployee CCByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeCC"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee CCs" ],
        "summary" : "Deletes employee cc by primary key",
        "operationId" : "deleteEmployeeCC",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseRev/" : {
      "get" : {
        "tags" : [ "Expense Revs" ],
        "summary" : "Gets all expense revs",
        "operationId" : "getsAllExpense Revs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseRev"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseRev/{ExpenseRev}" : {
      "post" : {
        "tags" : [ "Expense Revs" ],
        "summary" : "Adds a new expense rev",
        "operationId" : "addExpenseRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Revs" ],
        "summary" : "Updates a expense rev",
        "operationId" : "updateExpenseRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseRev/{ExpKey}" : {
      "get" : {
        "tags" : [ "Expense Revs" ],
        "summary" : "Get expense revs by expkey",
        "operationId" : "getsExpenseRevsByExpKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseRev/{ExpRevKey}" : {
      "get" : {
        "tags" : [ "Expense Revs" ],
        "summary" : "Gets expense rev by primary key",
        "operationId" : "getsExpense RevByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Revs" ],
        "summary" : "Deletes expense rev by primary key",
        "operationId" : "deleteExpenseRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseRev/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Expense Revs" ],
        "summary" : "Get expense revs by periodkey",
        "operationId" : "getsExpenseRevsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborGroup/" : {
      "get" : {
        "tags" : [ "Labor Groups" ],
        "summary" : "Gets all labor groups",
        "operationId" : "getsAllLabor Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborGroup"
              }
            }
          }
        }
      }
    },
    "/PA/LaborGroup/{LaborGroup}" : {
      "post" : {
        "tags" : [ "Labor Groups" ],
        "summary" : "Adds a new labor group",
        "operationId" : "addLaborGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroup"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Groups" ],
        "summary" : "Updates a labor group",
        "operationId" : "updateLaborGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborGroup",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborGroup/{LaborGroupKey}" : {
      "get" : {
        "tags" : [ "Labor Groups" ],
        "summary" : "Gets labor group by primary key",
        "operationId" : "getsLabor GroupByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroup"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Groups" ],
        "summary" : "Deletes labor group by primary key",
        "operationId" : "deleteLaborGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborGroup/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Labor Groups" ],
        "summary" : "Finds labor groups by id or name",
        "operationId" : "getsAllLabor Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborGroup"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ProjectETC/" : {
      "get" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Gets all projec tetcs",
        "operationId" : "getsAllProjec tETCs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectETC"
              }
            }
          }
        }
      }
    },
    "/PM/ProjectETC/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Get projec tetcs by activitykey",
        "operationId" : "getsProjectETCsByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectETC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectETC/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Get projec tetcs by employeekey",
        "operationId" : "getsProjectETCsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectETC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectETC/{ETCKey}" : {
      "get" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Gets projec tetc by primary key",
        "operationId" : "getsProjec tETCByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectETC"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Deletes projec tetc by primary key",
        "operationId" : "deleteProjectETC",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ETCKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectETC/{ProjectETC}" : {
      "post" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Adds a new projec tetc",
        "operationId" : "addProjectETC",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectETC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectETC"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Updates a projec tetc",
        "operationId" : "updateProjectETC",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectETC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectETC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectETC",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ProjectETC/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Get projec tetcs by projectkey",
        "operationId" : "getsProjectETCsByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectETC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectETC/{SLKey}" : {
      "get" : {
        "tags" : [ "Projec tETCs" ],
        "summary" : "Get projec tetcs by slkey",
        "operationId" : "getsProjectETCsBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectETC"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectFee/" : {
      "get" : {
        "tags" : [ "Project Fees" ],
        "summary" : "Gets all project fees",
        "operationId" : "getsAllProject Fees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectFee"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectFee/{ProjectFee}" : {
      "post" : {
        "tags" : [ "Project Fees" ],
        "summary" : "Adds a new project fee",
        "operationId" : "addProjectFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectFee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Fees" ],
        "summary" : "Updates a project fee",
        "operationId" : "updateProjectFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectFee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectFee/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Project Fees" ],
        "summary" : "Gets project fee by primary key",
        "operationId" : "getsProject FeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectFee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Fees" ],
        "summary" : "Deletes project fee by primary key",
        "operationId" : "deleteProjectFee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRate/" : {
      "get" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Gets all recalc rates",
        "operationId" : "getsAllRecalc Rates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecalcRate"
              }
            }
          }
        }
      }
    },
    "/UTL/RecalcRate/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Get recalc rates by employeekey",
        "operationId" : "getsRecalcRatesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRate/{LRClsKey}" : {
      "get" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Get recalc rates by lrclskey",
        "operationId" : "getsRecalcRatesByLRClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRate/{LRKey}" : {
      "get" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Get recalc rates by lrkey",
        "operationId" : "getsRecalcRatesByLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRate/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Get recalc rates by projectinfokey",
        "operationId" : "getsRecalcRatesByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRate/{RecalcRate}" : {
      "post" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Adds a new recalc rate",
        "operationId" : "addRecalcRate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcRate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRate"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Updates a recalc rate",
        "operationId" : "updateRecalcRate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcRate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RecalcRate",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/RecalcRate/{UserKey}" : {
      "get" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Gets recalc rate by primary key",
        "operationId" : "getsRecalc RateByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRate"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Recalc Rates" ],
        "summary" : "Deletes recalc rate by primary key",
        "operationId" : "deleteRecalcRate",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/SourceCls/" : {
      "get" : {
        "tags" : [ "Source Clses" ],
        "summary" : "Gets all source clses",
        "operationId" : "getsAllSource Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SourceCls"
              }
            }
          }
        }
      }
    },
    "/USR/SourceCls/{SourceCls}" : {
      "post" : {
        "tags" : [ "Source Clses" ],
        "summary" : "Adds a new source cls",
        "operationId" : "addSourceCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SourceCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SourceCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Source Clses" ],
        "summary" : "Updates a source cls",
        "operationId" : "updateSourceCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SourceCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SourceCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SourceCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/SourceCls/{SourceClsKey}" : {
      "get" : {
        "tags" : [ "Source Clses" ],
        "summary" : "Gets source cls by primary key",
        "operationId" : "getsSource ClsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SourceCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Source Clses" ],
        "summary" : "Deletes source cls by primary key",
        "operationId" : "deleteSourceCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SourceClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/SourceCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Source Clses" ],
        "summary" : "Finds source clses by id or name",
        "operationId" : "getsAllSource Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SourceCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/StaffLevel/" : {
      "get" : {
        "tags" : [ "Staff Levels" ],
        "summary" : "Gets all staff levels",
        "operationId" : "getsAllStaff Levels",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StaffLevel"
              }
            }
          }
        }
      }
    },
    "/HR/StaffLevel/{SLKey}" : {
      "get" : {
        "tags" : [ "Staff Levels" ],
        "summary" : "Gets staff level by primary key",
        "operationId" : "getsStaff LevelByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/StaffLevel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Staff Levels" ],
        "summary" : "Deletes staff level by primary key",
        "operationId" : "deleteStaffLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/StaffLevel/{StaffLevel}" : {
      "post" : {
        "tags" : [ "Staff Levels" ],
        "summary" : "Adds a new staff level",
        "operationId" : "addStaffLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StaffLevel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/StaffLevel"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Staff Levels" ],
        "summary" : "Updates a staff level",
        "operationId" : "updateStaffLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StaffLevel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/StaffLevel"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StaffLevel",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/StaffLevel/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Staff Levels" ],
        "summary" : "Finds staff levels by id or name",
        "operationId" : "getsAllStaff Levels",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StaffLevel"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/AccrualLine/" : {
      "get" : {
        "tags" : [ "Accrual Lines" ],
        "summary" : "Gets all accrual lines",
        "operationId" : "getsAllAccrual Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccrualLine"
              }
            }
          }
        }
      }
    },
    "/HR/AccrualLine/{AccrualKey}" : {
      "get" : {
        "tags" : [ "Accrual Lines" ],
        "summary" : "Get accrual lines by accrualkey",
        "operationId" : "getsAccrualLinesByAccrualKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/AccrualLine/{AccrualLine}" : {
      "post" : {
        "tags" : [ "Accrual Lines" ],
        "summary" : "Adds a new accrual line",
        "operationId" : "addAccrualLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Accrual Lines" ],
        "summary" : "Updates a accrual line",
        "operationId" : "updateAccrualLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/AccrualLine/{AccrualLineKey}" : {
      "get" : {
        "tags" : [ "Accrual Lines" ],
        "summary" : "Gets accrual line by primary key",
        "operationId" : "getsAccrual LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Accrual Lines" ],
        "summary" : "Deletes accrual line by primary key",
        "operationId" : "deleteAccrualLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentExp/" : {
      "get" : {
        "tags" : [ "Document Exps" ],
        "summary" : "Gets all document exps",
        "operationId" : "getsAllDocument Exps",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentExp"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentExp/{DocumentExp}" : {
      "post" : {
        "tags" : [ "Document Exps" ],
        "summary" : "Adds a new document exp",
        "operationId" : "addDocumentExp",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentExp"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentExp"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Exps" ],
        "summary" : "Updates a document exp",
        "operationId" : "updateDocumentExp",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentExp"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentExp"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentExp",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentExp/{DocumentKey}/{ExpKey}" : {
      "get" : {
        "tags" : [ "Document Exps" ],
        "summary" : "Gets document exp by primary key",
        "operationId" : "getsDocument ExpByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentExp"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Exps" ],
        "summary" : "Deletes document exp by primary key",
        "operationId" : "deleteDocumentExp",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeEFT/" : {
      "get" : {
        "tags" : [ "Employee EFTs" ],
        "summary" : "Gets all employee efts",
        "operationId" : "getsAllEmployee EFTs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeEFT"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeEFT/{EmployeeEFT}" : {
      "post" : {
        "tags" : [ "Employee EFTs" ],
        "summary" : "Adds a new employee eft",
        "operationId" : "addEmployeeEFT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeEFT"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeEFT"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee EFTs" ],
        "summary" : "Updates a employee eft",
        "operationId" : "updateEmployeeEFT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeEFT"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeEFT"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeEFT",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeEFT/{EmployeeEFTKey}" : {
      "get" : {
        "tags" : [ "Employee EFTs" ],
        "summary" : "Gets employee eft by primary key",
        "operationId" : "getsEmployee EFTByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeEFT"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee EFTs" ],
        "summary" : "Deletes employee eft by primary key",
        "operationId" : "deleteEmployeeEFT",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeEFTKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeEFT/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee EFTs" ],
        "summary" : "Get employee efts by employeekey",
        "operationId" : "getsEmployeeEFTsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeEFT"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeePay/" : {
      "get" : {
        "tags" : [ "Employee Pays" ],
        "summary" : "Gets all employee pays",
        "operationId" : "getsAllEmployee Pays",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeePay"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeePay/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Pays" ],
        "summary" : "Get employee pays by employeekey",
        "operationId" : "getsEmployeePaysByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePay"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeePay/{EmployeePay}" : {
      "post" : {
        "tags" : [ "Employee Pays" ],
        "summary" : "Adds a new employee pay",
        "operationId" : "addEmployeePay",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeePay"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePay"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Pays" ],
        "summary" : "Updates a employee pay",
        "operationId" : "updateEmployeePay",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeePay"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePay"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeePay",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeePay/{MgrEmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Pays" ],
        "summary" : "Get employee pays by mgremployeekey",
        "operationId" : "getsEmployeePaysByMgrEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePay"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "MgrEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeePay/{PayKey}" : {
      "get" : {
        "tags" : [ "Employee Pays" ],
        "summary" : "Gets employee pay by primary key",
        "operationId" : "getsEmployee PayByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePay"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Pays" ],
        "summary" : "Deletes employee pay by primary key",
        "operationId" : "deleteEmployeePay",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Gets all expense lines",
        "operationId" : "getsAllExpense Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseLine"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by acctkey",
        "operationId" : "getsExpenseLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by billingmodclskey",
        "operationId" : "getsExpenseLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by billstatusclskey",
        "operationId" : "getsExpenseLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{ExpenseLine}" : {
      "post" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Adds a new expense line",
        "operationId" : "addExpenseLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Updates a expense line",
        "operationId" : "updateExpenseLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseLine/{ExpLineKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Gets expense line by primary key",
        "operationId" : "getsExpense LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Deletes expense line by primary key",
        "operationId" : "deleteExpenseLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{ExpRevKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by exprevkey",
        "operationId" : "getsExpenseLinesByExpRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by exptypekey",
        "operationId" : "getsExpenseLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by invoicekey",
        "operationId" : "getsExpenseLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by lineclskey",
        "operationId" : "getsExpenseLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by periodid",
        "operationId" : "getsExpenseLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Expense Lines" ],
        "summary" : "Get expense lines by projectkey",
        "operationId" : "getsExpenseLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseTeam/" : {
      "get" : {
        "tags" : [ "Expense Teams" ],
        "summary" : "Gets all expense teams",
        "operationId" : "getsAllExpense Teams",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseTeam"
              }
            }
          }
        }
      }
    },
    "/PM/ExpenseTeam/{ETKey}" : {
      "get" : {
        "tags" : [ "Expense Teams" ],
        "summary" : "Gets expense team by primary key",
        "operationId" : "getsExpense TeamByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseTeam"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Teams" ],
        "summary" : "Deletes expense team by primary key",
        "operationId" : "deleteExpenseTeam",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ETKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseTeam/{ExpenseTeam}" : {
      "post" : {
        "tags" : [ "Expense Teams" ],
        "summary" : "Adds a new expense team",
        "operationId" : "addExpenseTeam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseTeam"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Teams" ],
        "summary" : "Updates a expense team",
        "operationId" : "updateExpenseTeam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseTeam"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseTeam",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ExpenseTeam/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Expense Teams" ],
        "summary" : "Get expense teams by projectkey",
        "operationId" : "getsExpenseTeamsByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseTeam"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseTeam/{VendorKey}" : {
      "get" : {
        "tags" : [ "Expense Teams" ],
        "summary" : "Get expense teams by vendorkey",
        "operationId" : "getsExpenseTeamsByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseTeam"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Gets all expense types",
        "operationId" : "getsAllExpense Types",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseType"
              }
            }
          }
        }
      }
    },
    "/PA/ExpenseType/{BDAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by bdacctinfokey",
        "operationId" : "getsExpenseTypesByBDAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BDAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by billstatusclskey",
        "operationId" : "getsExpenseTypesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{CategoryClsKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by categoryclskey",
        "operationId" : "getsExpenseTypesByCategoryClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CategoryClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{ClrAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by clracctinfokey",
        "operationId" : "getsExpenseTypesByClrAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClrAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{DirectAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by directacctinfokey",
        "operationId" : "getsExpenseTypesByDirectAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DirectAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{ExpenseType}" : {
      "post" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Adds a new expense type",
        "operationId" : "addExpenseType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Updates a expense type",
        "operationId" : "updateExpenseType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseType",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseType/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Gets expense type by primary key",
        "operationId" : "getsExpense TypeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Deletes expense type by primary key",
        "operationId" : "deleteExpenseType",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{OHAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by ohacctinfokey",
        "operationId" : "getsExpenseTypesByOHAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{ReimAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by reimacctinfokey",
        "operationId" : "getsExpenseTypesByReimAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReimAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{RevAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by revacctinfokey",
        "operationId" : "getsExpenseTypesByRevAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Get expense types by statusclskey",
        "operationId" : "getsExpenseTypesByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseType"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseType/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Expense Types" ],
        "summary" : "Finds expense types by id or name",
        "operationId" : "getsAllExpense Types",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseType"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/HolidayLine/" : {
      "get" : {
        "tags" : [ "Holiday Lines" ],
        "summary" : "Gets all holiday lines",
        "operationId" : "getsAllHoliday Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HolidayLine"
              }
            }
          }
        }
      }
    },
    "/HR/HolidayLine/{HolidayKey}" : {
      "get" : {
        "tags" : [ "Holiday Lines" ],
        "summary" : "Get holiday lines by holidaykey",
        "operationId" : "getsHolidayLinesByHolidayKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/HolidayLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "HolidayKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/HolidayLine/{HolidayLine}" : {
      "post" : {
        "tags" : [ "Holiday Lines" ],
        "summary" : "Adds a new holiday line",
        "operationId" : "addHolidayLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HolidayLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/HolidayLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Holiday Lines" ],
        "summary" : "Updates a holiday line",
        "operationId" : "updateHolidayLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HolidayLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/HolidayLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "HolidayLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/HolidayLine/{HolidayLineKey}" : {
      "get" : {
        "tags" : [ "Holiday Lines" ],
        "summary" : "Gets holiday line by primary key",
        "operationId" : "getsHoliday LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/HolidayLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Holiday Lines" ],
        "summary" : "Deletes holiday line by primary key",
        "operationId" : "deleteHolidayLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "HolidayLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Gets all invoice lines",
        "operationId" : "getsAllInvoice Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceLine"
              }
            }
          }
        }
      }
    },
    "/AR/InvoiceLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Get invoice lines by acctkey",
        "operationId" : "getsInvoiceLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/{BilledProjectKey}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Get invoice lines by billedprojectkey",
        "operationId" : "getsInvoiceLinesByBilledProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BilledProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/{InvoiceLine}" : {
      "post" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Adds a new invoice line",
        "operationId" : "addInvoiceLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Updates a invoice line",
        "operationId" : "updateInvoiceLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceLine/{InvoiceLineKey}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Gets invoice line by primary key",
        "operationId" : "getsInvoice LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Deletes invoice line by primary key",
        "operationId" : "deleteInvoiceLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/{InvoiceRevKey}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Get invoice lines by invoicerevkey",
        "operationId" : "getsInvoiceLinesByInvoiceRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Get invoice lines by lineclskey",
        "operationId" : "getsInvoiceLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Get invoice lines by periodid",
        "operationId" : "getsInvoiceLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Get invoice lines by projectkey",
        "operationId" : "getsInvoiceLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceLine/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Invoice Lines" ],
        "summary" : "Get invoice lines by revenueclskey",
        "operationId" : "getsInvoiceLinesByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Gets all journal lines",
        "operationId" : "getsAllJournal Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JournalLine"
              }
            }
          }
        }
      }
    },
    "/GA/JournalLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by acctkey",
        "operationId" : "getsJournalLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by billingmodclskey",
        "operationId" : "getsJournalLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by billstatusclskey",
        "operationId" : "getsJournalLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by exptypekey",
        "operationId" : "getsJournalLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by invoicekey",
        "operationId" : "getsJournalLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{JournalLine}" : {
      "post" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Adds a new journal line",
        "operationId" : "addJournalLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Updates a journal line",
        "operationId" : "updateJournalLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/JournalLine/{JournalLineKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Gets journal line by primary key",
        "operationId" : "getsJournal LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Deletes journal line by primary key",
        "operationId" : "deleteJournalLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{JournalRevKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by journalrevkey",
        "operationId" : "getsJournalLinesByJournalRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by periodid",
        "operationId" : "getsJournalLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by projectkey",
        "operationId" : "getsJournalLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalLine/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Journal Lines" ],
        "summary" : "Get journal lines by revenueclskey",
        "operationId" : "getsJournalLinesByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborBudget/" : {
      "get" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Gets all labor budgets",
        "operationId" : "getsAllLabor Budgets",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborBudget"
              }
            }
          }
        }
      }
    },
    "/PM/LaborBudget/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Get labor budgets by activitykey",
        "operationId" : "getsLaborBudgetsByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborBudget/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Get labor budgets by employeekey",
        "operationId" : "getsLaborBudgetsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborBudget/{LaborBudget}" : {
      "post" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Adds a new labor budget",
        "operationId" : "addLaborBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborBudget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborBudget"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Updates a labor budget",
        "operationId" : "updateLaborBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborBudget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborBudget",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/LaborBudget/{LBKey}" : {
      "get" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Gets labor budget by primary key",
        "operationId" : "getsLabor BudgetByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborBudget"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Deletes labor budget by primary key",
        "operationId" : "deleteLaborBudget",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LBKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborBudget/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Get labor budgets by projectkey",
        "operationId" : "getsLaborBudgetsByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborBudget/{SLKey}" : {
      "get" : {
        "tags" : [ "Labor Budgets" ],
        "summary" : "Get labor budgets by slkey",
        "operationId" : "getsLaborBudgetsBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/PaymentTerm/" : {
      "get" : {
        "tags" : [ "Payment Terms" ],
        "summary" : "Gets all payment terms",
        "operationId" : "getsAllPayment Terms",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PaymentTerm"
              }
            }
          }
        }
      }
    },
    "/AP/PaymentTerm/{PaymentTerm}" : {
      "post" : {
        "tags" : [ "Payment Terms" ],
        "summary" : "Adds a new payment term",
        "operationId" : "addPaymentTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentTerm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PaymentTerm"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Payment Terms" ],
        "summary" : "Updates a payment term",
        "operationId" : "updatePaymentTerm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentTerm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PaymentTerm"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PaymentTerm",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/PaymentTerm/{PaymentTermClsKey}" : {
      "get" : {
        "tags" : [ "Payment Terms" ],
        "summary" : "Get payment terms by paymenttermclskey",
        "operationId" : "getsPaymentTermsByPaymentTermClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PaymentTerm"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PaymentTermClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/PaymentTerm/{PaymentTermKey}" : {
      "get" : {
        "tags" : [ "Payment Terms" ],
        "summary" : "Gets payment term by primary key",
        "operationId" : "getsPayment TermByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PaymentTerm"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Payment Terms" ],
        "summary" : "Deletes payment term by primary key",
        "operationId" : "deletePaymentTerm",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PaymentTermKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/PaymentTerm/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Payment Terms" ],
        "summary" : "Finds payment terms by id or name",
        "operationId" : "getsAllPayment Terms",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PaymentTerm"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/QualityCls/" : {
      "get" : {
        "tags" : [ "Quality Clses" ],
        "summary" : "Gets all quality clses",
        "operationId" : "getsAllQuality Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/QualityCls"
              }
            }
          }
        }
      }
    },
    "/USR/QualityCls/{QualityCls}" : {
      "post" : {
        "tags" : [ "Quality Clses" ],
        "summary" : "Adds a new quality cls",
        "operationId" : "addQualityCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QualityCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/QualityCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Quality Clses" ],
        "summary" : "Updates a quality cls",
        "operationId" : "updateQualityCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QualityCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/QualityCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "QualityCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/QualityCls/{QualityClsKey}" : {
      "get" : {
        "tags" : [ "Quality Clses" ],
        "summary" : "Gets quality cls by primary key",
        "operationId" : "getsQuality ClsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/QualityCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Quality Clses" ],
        "summary" : "Deletes quality cls by primary key",
        "operationId" : "deleteQualityCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "QualityClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/QualityCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Quality Clses" ],
        "summary" : "Finds quality clses by id or name",
        "operationId" : "getsAllQuality Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/QualityCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptLine/" : {
      "get" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Gets all receipt lines",
        "operationId" : "getsAllReceipt Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptLine"
              }
            }
          }
        }
      }
    },
    "/AR/ReceiptLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Get receipt lines by acctkey",
        "operationId" : "getsReceiptLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Get receipt lines by lineclskey",
        "operationId" : "getsReceiptLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Get receipt lines by projectkey",
        "operationId" : "getsReceiptLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptLine/{ReceiptLine}" : {
      "post" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Adds a new receipt line",
        "operationId" : "addReceiptLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Updates a receipt line",
        "operationId" : "updateReceiptLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptLine/{ReceiptLineKey}" : {
      "get" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Gets receipt line by primary key",
        "operationId" : "getsReceipt LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Deletes receipt line by primary key",
        "operationId" : "deleteReceiptLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptLine/{ReceiptRevKey}" : {
      "get" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Get receipt lines by receiptrevkey",
        "operationId" : "getsReceiptLinesByReceiptRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptLine/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Receipt Lines" ],
        "summary" : "Get receipt lines by revenueclskey",
        "operationId" : "getsReceiptLinesByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/Table/" : {
      "get" : {
        "tags" : [ "System Tables" ],
        "summary" : "Gets all system tables",
        "operationId" : "getsAllSystem Tables",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Table"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/Table/{TableKey}" : {
      "get" : {
        "tags" : [ "System Tables" ],
        "summary" : "Gets system table by primary key",
        "operationId" : "getsSystem TableByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Table"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TableKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/Table/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "System Tables" ],
        "summary" : "Finds system tables by id or name",
        "operationId" : "getsAllSystem Tables",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Table"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeComment/" : {
      "get" : {
        "tags" : [ "Time Comments" ],
        "summary" : "Gets all time comments",
        "operationId" : "getsAllTime Comments",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeComment"
              }
            }
          }
        }
      }
    },
    "/HR/TimeComment/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Time Comments" ],
        "summary" : "Get time comments by employeekey",
        "operationId" : "getsTimeCommentsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeComment"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeComment/{TCKey}" : {
      "get" : {
        "tags" : [ "Time Comments" ],
        "summary" : "Gets time comment by primary key",
        "operationId" : "getsTime CommentByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeComment"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Comments" ],
        "summary" : "Deletes time comment by primary key",
        "operationId" : "deleteTimeComment",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TCKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeComment/{TimeComment}" : {
      "post" : {
        "tags" : [ "Time Comments" ],
        "summary" : "Adds a new time comment",
        "operationId" : "addTimeComment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeComment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeComment"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Comments" ],
        "summary" : "Updates a time comment",
        "operationId" : "updateTimeComment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeComment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeComment"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeComment",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VoucherLine/" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Gets all voucher lines",
        "operationId" : "getsAllVoucher Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VoucherLine"
              }
            }
          }
        }
      }
    },
    "/AP/VoucherLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by acctkey",
        "operationId" : "getsVoucherLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by billingmodclskey",
        "operationId" : "getsVoucherLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by billstatusclskey",
        "operationId" : "getsVoucherLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by exptypekey",
        "operationId" : "getsVoucherLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by invoicekey",
        "operationId" : "getsVoucherLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by lineclskey",
        "operationId" : "getsVoucherLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by periodid",
        "operationId" : "getsVoucherLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by projectkey",
        "operationId" : "getsVoucherLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{VoucherLine}" : {
      "post" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Adds a new voucher line",
        "operationId" : "addVoucherLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Updates a voucher line",
        "operationId" : "updateVoucherLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VoucherLine/{VoucherLineKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Gets voucher line by primary key",
        "operationId" : "getsVoucher LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Deletes voucher line by primary key",
        "operationId" : "deleteVoucherLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherLine/{VoucherRevKey}" : {
      "get" : {
        "tags" : [ "Voucher Lines" ],
        "summary" : "Get voucher lines by voucherrevkey",
        "operationId" : "getsVoucherLinesByVoucherRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ActivityRate/" : {
      "get" : {
        "tags" : [ "Activity Rates" ],
        "summary" : "Gets all activity rates",
        "operationId" : "getsAllActivity Rates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityRate"
              }
            }
          }
        }
      }
    },
    "/HR/ActivityRate/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Activity Rates" ],
        "summary" : "Get activity rates by activitykey",
        "operationId" : "getsActivityRatesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ActivityRate/{ActivityRate}" : {
      "post" : {
        "tags" : [ "Activity Rates" ],
        "summary" : "Adds a new activity rate",
        "operationId" : "addActivityRate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityRate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityRate"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Activity Rates" ],
        "summary" : "Updates a activity rate",
        "operationId" : "updateActivityRate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityRate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityRate",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ActivityRate/{ActivityRateKey}" : {
      "get" : {
        "tags" : [ "Activity Rates" ],
        "summary" : "Gets activity rate by primary key",
        "operationId" : "getsActivity RateByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityRate"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity Rates" ],
        "summary" : "Deletes activity rate by primary key",
        "operationId" : "deleteActivityRate",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityRateKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ActivityRate/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Activity Rates" ],
        "summary" : "Get activity rates by centerinfokey",
        "operationId" : "getsActivityRatesByCenterInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityRate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactChild/" : {
      "get" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Gets all contact childs",
        "operationId" : "getsAllContact Childs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContactChild"
              }
            }
          }
        }
      }
    },
    "/CM/ContactChild/{ActivityClsKey}" : {
      "get" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Get contact childs by activityclskey",
        "operationId" : "getsContactChildsByActivityClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactChild"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactChild/{ChildKey}" : {
      "get" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Gets contact child by primary key",
        "operationId" : "getsContact ChildByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactChild"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Deletes contact child by primary key",
        "operationId" : "deleteContactChild",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ChildKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactChild/{ContactChild}" : {
      "post" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Adds a new contact child",
        "operationId" : "addContactChild",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactChild"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactChild"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Updates a contact child",
        "operationId" : "updateContactChild",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactChild"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactChild"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactChild",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/ContactChild/{ContactKey}" : {
      "get" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Get contact childs by contactkey",
        "operationId" : "getsContactChildsByContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactChild"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactChild/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Contact Childs" ],
        "summary" : "Finds contact childs by id or name",
        "operationId" : "getsAllContact Childs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContactChild"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentTime/" : {
      "get" : {
        "tags" : [ "Document Times" ],
        "summary" : "Gets all document times",
        "operationId" : "getsAllDocument Times",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentTime"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentTime/{DocumentKey}/{TimeKey}" : {
      "get" : {
        "tags" : [ "Document Times" ],
        "summary" : "Gets document time by primary key",
        "operationId" : "getsDocument TimeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentTime"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Times" ],
        "summary" : "Deletes document time by primary key",
        "operationId" : "deleteDocumentTime",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentTime/{DocumentTime}" : {
      "post" : {
        "tags" : [ "Document Times" ],
        "summary" : "Adds a new document time",
        "operationId" : "addDocumentTime",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentTime"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentTime"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Times" ],
        "summary" : "Updates a document time",
        "operationId" : "updateDocumentTime",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentTime"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentTime"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentTime",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeWeek/" : {
      "get" : {
        "tags" : [ "Employee Weeks" ],
        "summary" : "Gets all employee weeks",
        "operationId" : "getsAllEmployee Weeks",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeWeek"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeWeek/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Weeks" ],
        "summary" : "Gets employee week by primary key",
        "operationId" : "getsEmployee WeekByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeWeek"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Weeks" ],
        "summary" : "Deletes employee week by primary key",
        "operationId" : "deleteEmployeeWeek",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeWeek/{EmployeeWeek}" : {
      "post" : {
        "tags" : [ "Employee Weeks" ],
        "summary" : "Adds a new employee week",
        "operationId" : "addEmployeeWeek",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeWeek"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeWeek"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Weeks" ],
        "summary" : "Updates a employee week",
        "operationId" : "updateEmployeeWeek",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeWeek"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeWeek"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeWeek",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseAudit/" : {
      "get" : {
        "tags" : [ "Expense Audits" ],
        "summary" : "Gets all expense audits",
        "operationId" : "getsAllExpense Audits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseAudit"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseAudit/{ExpAuditKey}" : {
      "get" : {
        "tags" : [ "Expense Audits" ],
        "summary" : "Gets expense audit by primary key",
        "operationId" : "getsExpense AuditByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseAudit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Audits" ],
        "summary" : "Deletes expense audit by primary key",
        "operationId" : "deleteExpenseAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpAuditKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseAudit/{ExpenseAudit}" : {
      "post" : {
        "tags" : [ "Expense Audits" ],
        "summary" : "Adds a new expense audit",
        "operationId" : "addExpenseAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseAudit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Audits" ],
        "summary" : "Updates a expense audit",
        "operationId" : "updateExpenseAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseAudit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseAudit/{ExpLineKey}" : {
      "get" : {
        "tags" : [ "Expense Audits" ],
        "summary" : "Get expense audits by explinekey",
        "operationId" : "getsExpenseAuditsByExpLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseAudit/{ExpRevKey}" : {
      "get" : {
        "tags" : [ "Expense Audits" ],
        "summary" : "Get expense audits by exprevkey",
        "operationId" : "getsExpenseAuditsByExpRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseGroup/" : {
      "get" : {
        "tags" : [ "Expense Groups" ],
        "summary" : "Gets all expense groups",
        "operationId" : "getsAllExpense Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseGroup"
              }
            }
          }
        }
      }
    },
    "/PA/ExpenseGroup/{ExpenseGroup}" : {
      "post" : {
        "tags" : [ "Expense Groups" ],
        "summary" : "Adds a new expense group",
        "operationId" : "addExpenseGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroup"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Groups" ],
        "summary" : "Updates a expense group",
        "operationId" : "updateExpenseGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseGroup",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseGroup/{ExpGroupKey}" : {
      "get" : {
        "tags" : [ "Expense Groups" ],
        "summary" : "Gets expense group by primary key",
        "operationId" : "getsExpense GroupByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroup"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Groups" ],
        "summary" : "Deletes expense group by primary key",
        "operationId" : "deleteExpenseGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseGroup/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Expense Groups" ],
        "summary" : "Finds expense groups by id or name",
        "operationId" : "getsAllExpense Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseGroup"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceAudit/" : {
      "get" : {
        "tags" : [ "Invoice Audits" ],
        "summary" : "Gets all invoice audits",
        "operationId" : "getsAllInvoice Audits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceAudit"
              }
            }
          }
        }
      }
    },
    "/AR/InvoiceAudit/{InvoiceAudit}" : {
      "post" : {
        "tags" : [ "Invoice Audits" ],
        "summary" : "Adds a new invoice audit",
        "operationId" : "addInvoiceAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceAudit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice Audits" ],
        "summary" : "Updates a invoice audit",
        "operationId" : "updateInvoiceAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceAudit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceAudit/{InvoiceAuditKey}" : {
      "get" : {
        "tags" : [ "Invoice Audits" ],
        "summary" : "Gets invoice audit by primary key",
        "operationId" : "getsInvoice AuditByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceAudit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice Audits" ],
        "summary" : "Deletes invoice audit by primary key",
        "operationId" : "deleteInvoiceAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceAuditKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceAudit/{InvoiceLineKey}" : {
      "get" : {
        "tags" : [ "Invoice Audits" ],
        "summary" : "Get invoice audits by invoicelinekey",
        "operationId" : "getsInvoiceAuditsByInvoiceLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceAudit/{InvoiceRevKey}" : {
      "get" : {
        "tags" : [ "Invoice Audits" ],
        "summary" : "Get invoice audits by invoicerevkey",
        "operationId" : "getsInvoiceAuditsByInvoiceRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceGroup/" : {
      "get" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Gets all invoice groups",
        "operationId" : "getsAllInvoice Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceGroup"
              }
            }
          }
        }
      }
    },
    "/AR/InvoiceGroup/{BaseProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Get invoice groups by baseprojectinfokey",
        "operationId" : "getsInvoiceGroupsByBaseProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BaseProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceGroup/{BaseProjectKey}" : {
      "get" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Get invoice groups by baseprojectkey",
        "operationId" : "getsInvoiceGroupsByBaseProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BaseProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceGroup/{InvoiceGroup}" : {
      "post" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Adds a new invoice group",
        "operationId" : "addInvoiceGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroup"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Updates a invoice group",
        "operationId" : "updateInvoiceGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceGroup",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceGroup/{InvoiceGroupKey}" : {
      "get" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Gets invoice group by primary key",
        "operationId" : "getsInvoice GroupByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroup"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Deletes invoice group by primary key",
        "operationId" : "deleteInvoiceGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceGroup/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Invoice Groups" ],
        "summary" : "Finds invoice groups by id or name",
        "operationId" : "getsAllInvoice Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceGroup"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/JournalAudit/" : {
      "get" : {
        "tags" : [ "Journal Audits" ],
        "summary" : "Gets all journal audits",
        "operationId" : "getsAllJournal Audits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JournalAudit"
              }
            }
          }
        }
      }
    },
    "/GA/JournalAudit/{JournalAudit}" : {
      "post" : {
        "tags" : [ "Journal Audits" ],
        "summary" : "Adds a new journal audit",
        "operationId" : "addJournalAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalAudit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Journal Audits" ],
        "summary" : "Updates a journal audit",
        "operationId" : "updateJournalAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalAudit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/JournalAudit/{JournalAuditKey}" : {
      "get" : {
        "tags" : [ "Journal Audits" ],
        "summary" : "Gets journal audit by primary key",
        "operationId" : "getsJournal AuditByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalAudit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Journal Audits" ],
        "summary" : "Deletes journal audit by primary key",
        "operationId" : "deleteJournalAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalAuditKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalAudit/{JournalLineKey}" : {
      "get" : {
        "tags" : [ "Journal Audits" ],
        "summary" : "Get journal audits by journallinekey",
        "operationId" : "getsJournalAuditsByJournalLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalAudit/{JournalRevKey}" : {
      "get" : {
        "tags" : [ "Journal Audits" ],
        "summary" : "Get journal audits by journalrevkey",
        "operationId" : "getsJournalAuditsByJournalRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborTeamSL/" : {
      "get" : {
        "tags" : [ "Labor Team SLs" ],
        "summary" : "Gets all labor team sls",
        "operationId" : "getsAllLabor Team SLs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborTeamSL"
              }
            }
          }
        }
      }
    },
    "/PM/LaborTeamSL/{LaborTeamSL}" : {
      "post" : {
        "tags" : [ "Labor Team SLs" ],
        "summary" : "Adds a new labor team sl",
        "operationId" : "addLaborTeamSL",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborTeamSL"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeamSL"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Team SLs" ],
        "summary" : "Updates a labor team sl",
        "operationId" : "updateLaborTeamSL",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborTeamSL"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeamSL"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborTeamSL",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/LaborTeamSL/{LTKey}/{SLKey}" : {
      "get" : {
        "tags" : [ "Labor Team SLs" ],
        "summary" : "Gets labor team sl by primary key",
        "operationId" : "getsLabor Team SLByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborTeamSL"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Team SLs" ],
        "summary" : "Deletes labor team sl by primary key",
        "operationId" : "deleteLaborTeamSL",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LTKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/OverheadLine/" : {
      "get" : {
        "tags" : [ "Overhead Lines" ],
        "summary" : "Gets all overhead lines",
        "operationId" : "getsAllOverhead Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OverheadLine"
              }
            }
          }
        }
      }
    },
    "/GA/OverheadLine/{OHKey}" : {
      "get" : {
        "tags" : [ "Overhead Lines" ],
        "summary" : "Get overhead lines by ohkey",
        "operationId" : "getsOverheadLinesByOHKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/OverheadLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/OverheadLine/{OHLineKey}" : {
      "get" : {
        "tags" : [ "Overhead Lines" ],
        "summary" : "Gets overhead line by primary key",
        "operationId" : "getsOverhead LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/OverheadLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Overhead Lines" ],
        "summary" : "Deletes overhead line by primary key",
        "operationId" : "deleteOverheadLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/OverheadLine/{OverheadLine}" : {
      "post" : {
        "tags" : [ "Overhead Lines" ],
        "summary" : "Adds a new overhead line",
        "operationId" : "addOverheadLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OverheadLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/OverheadLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Overhead Lines" ],
        "summary" : "Updates a overhead line",
        "operationId" : "updateOverheadLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OverheadLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/OverheadLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OverheadLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/OverheadLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Overhead Lines" ],
        "summary" : "Get overhead lines by projectkey",
        "operationId" : "getsOverheadLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/OverheadLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Gets all profit centers",
        "operationId" : "getsAllProfit Centers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProfitCenter"
              }
            }
          }
        }
      }
    },
    "/GA/ProfitCenter/{AddressKey}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by addresskey",
        "operationId" : "getsProfitCentersByAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{Center1Key}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by center1key",
        "operationId" : "getsProfitCentersByCenter1Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Center1Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{Center2Key}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by center2key",
        "operationId" : "getsProfitCentersByCenter2Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Center2Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{Center3Key}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by center3key",
        "operationId" : "getsProfitCentersByCenter3Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Center3Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{Center4Key}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by center4key",
        "operationId" : "getsProfitCentersByCenter4Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Center4Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{Center5Key}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by center5key",
        "operationId" : "getsProfitCentersByCenter5Key",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Center5Key",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by centerinfokey",
        "operationId" : "getsProfitCentersByCenterInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{CenterKey}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Gets profit center by primary key",
        "operationId" : "getsProfit CenterByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Deletes profit center by primary key",
        "operationId" : "deleteProfitCenter",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/{ProfitCenter}" : {
      "post" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Adds a new profit center",
        "operationId" : "addProfitCenter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProfitCenter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Updates a profit center",
        "operationId" : "updateProfitCenter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProfitCenter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProfitCenter",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/ProfitCenter/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Get profit centers by statusclskey",
        "operationId" : "getsProfitCentersByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenter"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenter/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Profit Centers" ],
        "summary" : "Finds profit centers by id or name",
        "operationId" : "getsAllProfit Centers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProfitCenter"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectLimit/" : {
      "get" : {
        "tags" : [ "Project Limits" ],
        "summary" : "Gets all project limits",
        "operationId" : "getsAllProject Limits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectLimit"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectLimit/{LimitKey}" : {
      "get" : {
        "tags" : [ "Project Limits" ],
        "summary" : "Gets project limit by primary key",
        "operationId" : "getsProject LimitByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectLimit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Limits" ],
        "summary" : "Deletes project limit by primary key",
        "operationId" : "deleteProjectLimit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LimitKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectLimit/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Project Limits" ],
        "summary" : "Get project limits by projectkey",
        "operationId" : "getsProjectLimitsByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectLimit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectLimit/{ProjectLimit}" : {
      "post" : {
        "tags" : [ "Project Limits" ],
        "summary" : "Adds a new project limit",
        "operationId" : "addProjectLimit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectLimit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectLimit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Limits" ],
        "summary" : "Updates a project limit",
        "operationId" : "updateProjectLimit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectLimit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectLimit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectLimit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptAudit/" : {
      "get" : {
        "tags" : [ "Receipt Audits" ],
        "summary" : "Gets all receipt audits",
        "operationId" : "getsAllReceipt Audits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptAudit"
              }
            }
          }
        }
      }
    },
    "/AR/ReceiptAudit/{ReceiptAudit}" : {
      "post" : {
        "tags" : [ "Receipt Audits" ],
        "summary" : "Adds a new receipt audit",
        "operationId" : "addReceiptAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptAudit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Receipt Audits" ],
        "summary" : "Updates a receipt audit",
        "operationId" : "updateReceiptAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptAudit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptAudit/{ReceiptAuditKey}" : {
      "get" : {
        "tags" : [ "Receipt Audits" ],
        "summary" : "Gets receipt audit by primary key",
        "operationId" : "getsReceipt AuditByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptAudit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Receipt Audits" ],
        "summary" : "Deletes receipt audit by primary key",
        "operationId" : "deleteReceiptAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptAuditKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptAudit/{ReceiptLineKey}" : {
      "get" : {
        "tags" : [ "Receipt Audits" ],
        "summary" : "Get receipt audits by receiptlinekey",
        "operationId" : "getsReceiptAuditsByReceiptLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptAudit/{ReceiptRevKey}" : {
      "get" : {
        "tags" : [ "Receipt Audits" ],
        "summary" : "Get receipt audits by receiptrevkey",
        "operationId" : "getsReceiptAuditsByReceiptRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptCash/" : {
      "get" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Gets all receipt cashes",
        "operationId" : "getsAllReceipt Cashes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptCash"
              }
            }
          }
        }
      }
    },
    "/AR/ReceiptCash/{AcctKey}" : {
      "get" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Get receipt cashes by acctkey",
        "operationId" : "getsReceiptCashesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptCash/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Get receipt cashes by lineclskey",
        "operationId" : "getsReceiptCashesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptCash/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Get receipt cashes by projectkey",
        "operationId" : "getsReceiptCashesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptCash/{ReceiptCash}" : {
      "post" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Adds a new receipt cash",
        "operationId" : "addReceiptCash",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptCash"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCash"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Updates a receipt cash",
        "operationId" : "updateReceiptCash",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptCash"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptCash",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptCash/{ReceiptCashKey}" : {
      "get" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Gets receipt cash by primary key",
        "operationId" : "getsReceipt CashByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCash"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Deletes receipt cash by primary key",
        "operationId" : "deleteReceiptCash",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptCashKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptCash/{ReceiptKey}" : {
      "get" : {
        "tags" : [ "Receipt Cashes" ],
        "summary" : "Get receipt cashes by receiptkey",
        "operationId" : "getsReceiptCashesByReceiptKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCash"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/RPT/ReportDesign/" : {
      "get" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Gets all report designs",
        "operationId" : "getsAllReport Designs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReportDesign"
              }
            }
          }
        }
      }
    },
    "/RPT/ReportDesign/{DesignKey}" : {
      "get" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Gets report design by primary key",
        "operationId" : "getsReport DesignByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReportDesign"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Deletes report design by primary key",
        "operationId" : "deleteReportDesign",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/RPT/ReportDesign/{ReportDesign}" : {
      "post" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Adds a new report design",
        "operationId" : "addReportDesign",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportDesign"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReportDesign"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Updates a report design",
        "operationId" : "updateReportDesign",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportDesign"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReportDesign"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReportDesign",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/RPT/ReportDesign/{RptClsKey}" : {
      "get" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Get report designs by rptclskey",
        "operationId" : "getsReportDesignsByRptClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReportDesign"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RptClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/RPT/ReportDesign/{TemplateKey}" : {
      "get" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Get report designs by templatekey",
        "operationId" : "getsReportDesignsByTemplateKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReportDesign"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TemplateKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/RPT/ReportDesign/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Report Designs" ],
        "summary" : "Finds report designs by id or name",
        "operationId" : "getsAllReport Designs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReportDesign"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYSTEM/Column/" : {
      "get" : {
        "tags" : [ "System Columns" ],
        "summary" : "Gets all system columns",
        "operationId" : "getsAllSystem Columns",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Column"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/Column/{ColumnKey}" : {
      "get" : {
        "tags" : [ "System Columns" ],
        "summary" : "Gets system column by primary key",
        "operationId" : "getsSystem ColumnByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Column"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ColumnKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/Column/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "System Columns" ],
        "summary" : "Finds system columns by id or name",
        "operationId" : "getsAllSystem Columns",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Column"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYSTEM/Module/" : {
      "get" : {
        "tags" : [ "System Modules" ],
        "summary" : "Gets all system modules",
        "operationId" : "getsAllSystem Modules",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Module"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/Module/{ModuleKey}" : {
      "get" : {
        "tags" : [ "System Modules" ],
        "summary" : "Gets system module by primary key",
        "operationId" : "getsSystem ModuleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Module"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ModuleKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/Module/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "System Modules" ],
        "summary" : "Finds system modules by id or name",
        "operationId" : "getsAllSystem Modules",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Module"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYSTEM/Screen/" : {
      "get" : {
        "tags" : [ "System Screens" ],
        "summary" : "Gets all system screens",
        "operationId" : "getsAllSystem Screens",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Screen"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/Screen/{ScreenKey}" : {
      "get" : {
        "tags" : [ "System Screens" ],
        "summary" : "Gets system screen by primary key",
        "operationId" : "getsSystem ScreenByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Screen"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ScreenKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/Screen/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "System Screens" ],
        "summary" : "Finds system screens by id or name",
        "operationId" : "getsAllSystem Screens",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Screen"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeApprover/" : {
      "get" : {
        "tags" : [ "Time Approvers" ],
        "summary" : "Gets all time approvers",
        "operationId" : "getsAllTime Approvers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeApprover"
              }
            }
          }
        }
      }
    },
    "/HR/TimeApprover/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Time Approvers" ],
        "summary" : "Get time approvers by employeekey",
        "operationId" : "getsTimeApproversByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeApprover"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeApprover/{TAEmployeeKey}" : {
      "get" : {
        "tags" : [ "Time Approvers" ],
        "summary" : "Get time approvers by taemployeekey",
        "operationId" : "getsTimeApproversByTAEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeApprover"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TAEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeApprover/{TAKey}" : {
      "get" : {
        "tags" : [ "Time Approvers" ],
        "summary" : "Gets time approver by primary key",
        "operationId" : "getsTime ApproverByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeApprover"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Approvers" ],
        "summary" : "Deletes time approver by primary key",
        "operationId" : "deleteTimeApprover",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TAKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeApprover/{TimeApprover}" : {
      "post" : {
        "tags" : [ "Time Approvers" ],
        "summary" : "Adds a new time approver",
        "operationId" : "addTimeApprover",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeApprover"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeApprover"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Approvers" ],
        "summary" : "Updates a time approver",
        "operationId" : "updateTimeApprover",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeApprover"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeApprover"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeApprover",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeCalendar/" : {
      "get" : {
        "tags" : [ "Time Calendars" ],
        "summary" : "Gets all time calendars",
        "operationId" : "getsAllTime Calendars",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeCalendar"
              }
            }
          }
        }
      }
    },
    "/HR/TimeCalendar/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Time Calendars" ],
        "summary" : "Get time calendars by centerinfokey",
        "operationId" : "getsTimeCalendarsByCenterInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCalendar"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeCalendar/{TimeCalendar}" : {
      "post" : {
        "tags" : [ "Time Calendars" ],
        "summary" : "Adds a new time calendar",
        "operationId" : "addTimeCalendar",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeCalendar"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCalendar"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Calendars" ],
        "summary" : "Updates a time calendar",
        "operationId" : "updateTimeCalendar",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeCalendar"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCalendar"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeCalendar",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeCalendar/{TSCalendarKey}" : {
      "get" : {
        "tags" : [ "Time Calendars" ],
        "summary" : "Gets time calendar by primary key",
        "operationId" : "getsTime CalendarByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCalendar"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Calendars" ],
        "summary" : "Deletes time calendar by primary key",
        "operationId" : "deleteTimeCalendar",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSCalendarKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeCalendar/{TSClsKey}" : {
      "get" : {
        "tags" : [ "Time Calendars" ],
        "summary" : "Get time calendars by tsclskey",
        "operationId" : "getsTimeCalendarsByTSClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCalendar"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistory/" : {
      "get" : {
        "tags" : [ "Time Histories" ],
        "summary" : "Gets all time histories",
        "operationId" : "getsAllTime Histories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeHistory"
              }
            }
          }
        }
      }
    },
    "/HR/TimeHistory/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Time Histories" ],
        "summary" : "Get time histories by employeekey",
        "operationId" : "getsTimeHistoriesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistory/{TimeHistory}" : {
      "post" : {
        "tags" : [ "Time Histories" ],
        "summary" : "Adds a new time history",
        "operationId" : "addTimeHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistory"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Histories" ],
        "summary" : "Updates a time history",
        "operationId" : "updateTimeHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeHistory",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeHistory/{TimeHistoryKey}" : {
      "get" : {
        "tags" : [ "Time Histories" ],
        "summary" : "Gets time history by primary key",
        "operationId" : "getsTime HistoryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistory"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Histories" ],
        "summary" : "Deletes time history by primary key",
        "operationId" : "deleteTimeHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistory/{TSCalendarKey}" : {
      "get" : {
        "tags" : [ "Time Histories" ],
        "summary" : "Get time histories by tscalendarkey",
        "operationId" : "getsTimeHistoriesByTSCalendarKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSCalendarKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherAudit/" : {
      "get" : {
        "tags" : [ "Voucher Audits" ],
        "summary" : "Gets all voucher audits",
        "operationId" : "getsAllVoucher Audits",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VoucherAudit"
              }
            }
          }
        }
      }
    },
    "/AP/VoucherAudit/{VoucherAudit}" : {
      "post" : {
        "tags" : [ "Voucher Audits" ],
        "summary" : "Adds a new voucher audit",
        "operationId" : "addVoucherAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherAudit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Voucher Audits" ],
        "summary" : "Updates a voucher audit",
        "operationId" : "updateVoucherAudit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherAudit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherAudit",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VoucherAudit/{VoucherAuditKey}" : {
      "get" : {
        "tags" : [ "Voucher Audits" ],
        "summary" : "Gets voucher audit by primary key",
        "operationId" : "getsVoucher AuditByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherAudit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Voucher Audits" ],
        "summary" : "Deletes voucher audit by primary key",
        "operationId" : "deleteVoucherAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherAuditKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherAudit/{VoucherLineKey}" : {
      "get" : {
        "tags" : [ "Voucher Audits" ],
        "summary" : "Get voucher audits by voucherlinekey",
        "operationId" : "getsVoucherAuditsByVoucherLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherAudit/{VoucherRevKey}" : {
      "get" : {
        "tags" : [ "Voucher Audits" ],
        "summary" : "Get voucher audits by voucherrevkey",
        "operationId" : "getsVoucherAuditsByVoucherRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherAudit"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ARDefaultLine/" : {
      "get" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Gets all ar defaultlines",
        "operationId" : "getsAllAR DefaultLines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ARDefaultLine"
              }
            }
          }
        }
      }
    },
    "/SS/ARDefaultLine/{ARAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Get ar defaultlines by aracctinfokey",
        "operationId" : "getsARDefaultLinesByARAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefaultLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ARDefaultLine/{ARDefaultLine}" : {
      "post" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Adds a new ar defaultline",
        "operationId" : "addARDefaultLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ARDefaultLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefaultLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Updates a ar defaultline",
        "operationId" : "updateARDefaultLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ARDefaultLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefaultLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARDefaultLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/ARDefaultLine/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Gets ar defaultline by primary key",
        "operationId" : "getsAR DefaultLineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefaultLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Deletes ar defaultline by primary key",
        "operationId" : "deleteARDefaultLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ARDefaultLine/{RetainageAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Get ar defaultlines by retainageacctinfokey",
        "operationId" : "getsARDefaultLinesByRetainageAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefaultLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RetainageAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ARDefaultLine/{RevAcctInfoKey}" : {
      "get" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Get ar defaultlines by revacctinfokey",
        "operationId" : "getsARDefaultLinesByRevAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefaultLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/ARDefaultLine/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "AR DefaultLines" ],
        "summary" : "Get ar defaultlines by revenueclskey",
        "operationId" : "getsARDefaultLinesByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARDefaultLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ActivityGroup/" : {
      "get" : {
        "tags" : [ "Activity Groups" ],
        "summary" : "Gets all activity groups",
        "operationId" : "getsAllActivity Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityGroup"
              }
            }
          }
        }
      }
    },
    "/PA/ActivityGroup/{ActGroupKey}" : {
      "get" : {
        "tags" : [ "Activity Groups" ],
        "summary" : "Gets activity group by primary key",
        "operationId" : "getsActivity GroupByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroup"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity Groups" ],
        "summary" : "Deletes activity group by primary key",
        "operationId" : "deleteActivityGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ActivityGroup/{ActivityGroup}" : {
      "post" : {
        "tags" : [ "Activity Groups" ],
        "summary" : "Adds a new activity group",
        "operationId" : "addActivityGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroup"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Activity Groups" ],
        "summary" : "Updates a activity group",
        "operationId" : "updateActivityGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityGroup",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ActivityGroup/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Activity Groups" ],
        "summary" : "Finds activity groups by id or name",
        "operationId" : "getsAllActivity Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityGroup"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/BI/AdjustmentFee/" : {
      "get" : {
        "tags" : [ "Adjustment Fees" ],
        "summary" : "Gets all adjustment fees",
        "operationId" : "getsAllAdjustment Fees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AdjustmentFee"
              }
            }
          }
        }
      }
    },
    "/BI/AdjustmentFee/{AdjFeeKey}" : {
      "get" : {
        "tags" : [ "Adjustment Fees" ],
        "summary" : "Gets adjustment fee by primary key",
        "operationId" : "getsAdjustment FeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentFee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Adjustment Fees" ],
        "summary" : "Deletes adjustment fee by primary key",
        "operationId" : "deleteAdjustmentFee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjFeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentFee/{AdjProjectKey}" : {
      "get" : {
        "tags" : [ "Adjustment Fees" ],
        "summary" : "Get adjustment fees by adjprojectkey",
        "operationId" : "getsAdjustmentFeesByAdjProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentFee/{AdjustmentFee}" : {
      "post" : {
        "tags" : [ "Adjustment Fees" ],
        "summary" : "Adds a new adjustment fee",
        "operationId" : "addAdjustmentFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdjustmentFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentFee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Adjustment Fees" ],
        "summary" : "Updates a adjustment fee",
        "operationId" : "updateAdjustmentFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdjustmentFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjustmentFee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/BI/AdjustmentFee/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Adjustment Fees" ],
        "summary" : "Get adjustment fees by projectkey",
        "operationId" : "getsAdjustmentFeesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistory/" : {
      "get" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Gets all check histories",
        "operationId" : "getsAllCheck Histories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckHistory"
              }
            }
          }
        }
      }
    },
    "/AP/CheckHistory/{BankAcctKey}" : {
      "get" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Get check histories by bankacctkey",
        "operationId" : "getsCheckHistoriesByBankAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistory/{CheckClsKey}" : {
      "get" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Get check histories by checkclskey",
        "operationId" : "getsCheckHistoriesByCheckClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistory/{CheckHistory}" : {
      "post" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Adds a new check history",
        "operationId" : "addCheckHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Updates a check history",
        "operationId" : "updateCheckHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckHistory",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CheckHistory/{CheckHistoryKey}" : {
      "get" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Gets check history by primary key",
        "operationId" : "getsCheck HistoryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Deletes check history by primary key",
        "operationId" : "deleteCheckHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistory/{ClientKey}" : {
      "get" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Get check histories by clientkey",
        "operationId" : "getsCheckHistoriesByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistory/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Get check histories by employeekey",
        "operationId" : "getsCheckHistoriesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistory/{VendorKey}" : {
      "get" : {
        "tags" : [ "Check Histories" ],
        "summary" : "Get check histories by vendorkey",
        "operationId" : "getsCheckHistoriesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckRev/" : {
      "get" : {
        "tags" : [ "Check Revisions" ],
        "summary" : "Gets all check revisions",
        "operationId" : "getsAllCheck Revisions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckRev"
              }
            }
          }
        }
      }
    },
    "/AP/CheckRev/{CheckKey}" : {
      "get" : {
        "tags" : [ "Check Revisions" ],
        "summary" : "Get check revisions by checkkey",
        "operationId" : "getsCheckRevisionsByCheckKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckRev/{CheckRev}" : {
      "post" : {
        "tags" : [ "Check Revisions" ],
        "summary" : "Adds a new check revision",
        "operationId" : "addCheckRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Check Revisions" ],
        "summary" : "Updates a check revision",
        "operationId" : "updateCheckRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CheckRev/{CheckRevKey}" : {
      "get" : {
        "tags" : [ "Check Revisions" ],
        "summary" : "Gets check revision by primary key",
        "operationId" : "getsCheck RevisionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Check Revisions" ],
        "summary" : "Deletes check revision by primary key",
        "operationId" : "deleteCheckRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckRev/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Check Revisions" ],
        "summary" : "Get check revisions by periodkey",
        "operationId" : "getsCheckRevisionsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Gets all client billings",
        "operationId" : "getsAllClient Billings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClientBilling"
              }
            }
          }
        }
      }
    },
    "/AR/ClientBilling/{ARStatementClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by arstatementclskey",
        "operationId" : "getsClientBillingsByARStatementClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARStatementClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{BillCycleClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by billcycleclskey",
        "operationId" : "getsClientBillingsByBillCycleClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillCycleClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{BillLRKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by billlrkey",
        "operationId" : "getsClientBillingsByBillLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by billstatusclskey",
        "operationId" : "getsClientBillingsByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{BTDClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by btdclskey",
        "operationId" : "getsClientBillingsByBTDClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BTDClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{ClientBilling}" : {
      "post" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Adds a new client billing",
        "operationId" : "addClientBilling",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClientBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Updates a client billing",
        "operationId" : "updateClientBilling",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClientBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientBilling",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ClientBilling/{ClientKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Gets client billing by primary key",
        "operationId" : "getsClient BillingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Deletes client billing by primary key",
        "operationId" : "deleteClientBilling",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{CnsDetailClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by cnsdetailclskey",
        "operationId" : "getsClientBillingsByCnsDetailClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CnsDetailClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{CnsEMKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by cnsemkey",
        "operationId" : "getsClientBillingsByCnsEMKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CnsEMKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{CostLRKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by costlrkey",
        "operationId" : "getsClientBillingsByCostLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CostLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{EMKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by emkey",
        "operationId" : "getsClientBillingsByEMKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{ExpDetailClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by expdetailclskey",
        "operationId" : "getsClientBillingsByExpDetailClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpDetailClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{FeeClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by feeclskey",
        "operationId" : "getsClientBillingsByFeeClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{InvCnsDesignKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by invcnsdesignkey",
        "operationId" : "getsClientBillingsByInvCnsDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvCnsDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{InvDesignKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by invdesignkey",
        "operationId" : "getsClientBillingsByInvDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{InvExpDesignKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by invexpdesignkey",
        "operationId" : "getsClientBillingsByInvExpDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvExpDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{LaborSort1ClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by laborsort1clskey",
        "operationId" : "getsClientBillingsByLaborSort1ClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSort1ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{LaborSort2ClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by laborsort2clskey",
        "operationId" : "getsClientBillingsByLaborSort2ClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSort2ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{LaborSort3ClsKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by laborsort3clskey",
        "operationId" : "getsClientBillingsByLaborSort3ClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSort3ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{OverrideBillLRKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by overridebilllrkey",
        "operationId" : "getsClientBillingsByOverrideBillLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OverrideBillLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ClientBilling/{PayLRKey}" : {
      "get" : {
        "tags" : [ "Client Billings" ],
        "summary" : "Get client billings by paylrkey",
        "operationId" : "getsClientBillingsByPayLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/CompanyOffice/" : {
      "get" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Gets all company offices",
        "operationId" : "getsAllCompany Offices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CompanyOffice"
              }
            }
          }
        }
      }
    },
    "/CM/CompanyOffice/{AddressKey}" : {
      "get" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Get company offices by addresskey",
        "operationId" : "getsCompanyOfficesByAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CompanyOffice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/CompanyOffice/{CompanyKey}" : {
      "get" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Get company offices by companykey",
        "operationId" : "getsCompanyOfficesByCompanyKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CompanyOffice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CompanyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/CompanyOffice/{CompanyOffice}" : {
      "post" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Adds a new company office",
        "operationId" : "addCompanyOffice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CompanyOffice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CompanyOffice"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Updates a company office",
        "operationId" : "updateCompanyOffice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CompanyOffice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CompanyOffice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CompanyOffice",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/CompanyOffice/{OfficeKey}" : {
      "get" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Gets company office by primary key",
        "operationId" : "getsCompany OfficeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CompanyOffice"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Deletes company office by primary key",
        "operationId" : "deleteCompanyOffice",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OfficeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/CompanyOffice/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Company Offices" ],
        "summary" : "Finds company offices by id or name",
        "operationId" : "getsAllCompany Offices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CompanyOffice"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/ContactMarket/" : {
      "get" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Gets all contact markets",
        "operationId" : "getsAllContact Markets",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContactMarket"
              }
            }
          }
        }
      }
    },
    "/CM/ContactMarket/{ContactKey}" : {
      "get" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Get contact markets by contactkey",
        "operationId" : "getsContactMarketsByContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactMarket/{ContactMarket}" : {
      "post" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Adds a new contact market",
        "operationId" : "addContactMarket",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactMarket"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Updates a contact market",
        "operationId" : "updateContactMarket",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactMarket"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactMarket",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/ContactMarket/{EventClsKey}" : {
      "get" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Get contact markets by eventclskey",
        "operationId" : "getsContactMarketsByEventClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EventClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactMarket/{GiftClsKey}" : {
      "get" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Get contact markets by giftclskey",
        "operationId" : "getsContactMarketsByGiftClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GiftClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactMarket/{MarketKey}" : {
      "get" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Gets contact market by primary key",
        "operationId" : "getsContact MarketByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Deletes contact market by primary key",
        "operationId" : "deleteContactMarket",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "MarketKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactMarket/{ProgramClsKey}" : {
      "get" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Get contact markets by programclskey",
        "operationId" : "getsContactMarketsByProgramClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProgramClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ContactMarket/{RelationClsKey}" : {
      "get" : {
        "tags" : [ "Contact Markets" ],
        "summary" : "Get contact markets by relationclskey",
        "operationId" : "getsContactMarketsByRelationClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ContactMarket"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RelationClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentCheck/" : {
      "get" : {
        "tags" : [ "Document Checks" ],
        "summary" : "Gets all document checks",
        "operationId" : "getsAllDocument Checks",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentCheck"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentCheck/{CheckKey}/{DocumentKey}" : {
      "get" : {
        "tags" : [ "Document Checks" ],
        "summary" : "Gets document check by primary key",
        "operationId" : "getsDocument CheckByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentCheck"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Checks" ],
        "summary" : "Deletes document check by primary key",
        "operationId" : "deleteDocumentCheck",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentCheck/{DocumentCheck}" : {
      "post" : {
        "tags" : [ "Document Checks" ],
        "summary" : "Adds a new document check",
        "operationId" : "addDocumentCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentCheck"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentCheck"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Checks" ],
        "summary" : "Updates a document check",
        "operationId" : "updateDocumentCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentCheck"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentCheck"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentCheck",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ExpenseBudget/" : {
      "get" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Gets all expense budgets",
        "operationId" : "getsAllExpense Budgets",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseBudget"
              }
            }
          }
        }
      }
    },
    "/PM/ExpenseBudget/{EBKey}" : {
      "get" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Gets expense budget by primary key",
        "operationId" : "getsExpense BudgetByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseBudget"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Deletes expense budget by primary key",
        "operationId" : "deleteExpenseBudget",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EBKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseBudget/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Get expense budgets by employeekey",
        "operationId" : "getsExpenseBudgetsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseBudget/{ExpenseBudget}" : {
      "post" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Adds a new expense budget",
        "operationId" : "addExpenseBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseBudget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseBudget"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Updates a expense budget",
        "operationId" : "updateExpenseBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseBudget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseBudget",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ExpenseBudget/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Get expense budgets by exptypekey",
        "operationId" : "getsExpenseBudgetsByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseBudget/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Get expense budgets by projectkey",
        "operationId" : "getsExpenseBudgetsByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseBudget/{VendorKey}" : {
      "get" : {
        "tags" : [ "Expense Budgets" ],
        "summary" : "Get expense budgets by vendorkey",
        "operationId" : "getsExpenseBudgetsByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/INV/InvoiceDesign/" : {
      "get" : {
        "tags" : [ "Invoice Designs" ],
        "summary" : "Gets all invoice designs",
        "operationId" : "getsAllInvoice Designs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceDesign"
              }
            }
          }
        }
      }
    },
    "/INV/InvoiceDesign/{DesignKey}" : {
      "get" : {
        "tags" : [ "Invoice Designs" ],
        "summary" : "Gets invoice design by primary key",
        "operationId" : "getsInvoice DesignByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceDesign"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice Designs" ],
        "summary" : "Deletes invoice design by primary key",
        "operationId" : "deleteInvoiceDesign",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/INV/InvoiceDesign/{InvoiceDesign}" : {
      "post" : {
        "tags" : [ "Invoice Designs" ],
        "summary" : "Adds a new invoice design",
        "operationId" : "addInvoiceDesign",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceDesign"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceDesign"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice Designs" ],
        "summary" : "Updates a invoice design",
        "operationId" : "updateInvoiceDesign",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceDesign"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceDesign"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceDesign",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/INV/InvoiceDesign/{TemplateKey}" : {
      "get" : {
        "tags" : [ "Invoice Designs" ],
        "summary" : "Get invoice designs by templatekey",
        "operationId" : "getsInvoiceDesignsByTemplateKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceDesign"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TemplateKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/INV/InvoiceDesign/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Invoice Designs" ],
        "summary" : "Finds invoice designs by id or name",
        "operationId" : "getsAllInvoice Designs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceDesign"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/InvoicingLine/" : {
      "get" : {
        "tags" : [ "Invoicing Lines" ],
        "summary" : "Gets all invoicing lines",
        "operationId" : "getsAllInvoicing Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoicingLine"
              }
            }
          }
        }
      }
    },
    "/IN/InvoicingLine/{BillLineClsKey}/{LineKey}/{ProjectInfoKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Invoicing Lines" ],
        "summary" : "Gets invoicing line by primary key",
        "operationId" : "getsInvoicing LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoicing Lines" ],
        "summary" : "Deletes invoicing line by primary key",
        "operationId" : "deleteInvoicingLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BillLineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/InvoicingLine/{InvoicingLine}" : {
      "post" : {
        "tags" : [ "Invoicing Lines" ],
        "summary" : "Adds a new invoicing line",
        "operationId" : "addInvoicingLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoicing Lines" ],
        "summary" : "Updates a invoicing line",
        "operationId" : "updateInvoicingLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoicingLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/InvoicingLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Invoicing Lines" ],
        "summary" : "Get invoicing lines by projectkey",
        "operationId" : "getsInvoicingLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/InvoicingLine/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Invoicing Lines" ],
        "summary" : "Get invoicing lines by revenueclskey",
        "operationId" : "getsInvoicingLinesByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateRev/" : {
      "get" : {
        "tags" : [ "Labor Rate Revs" ],
        "summary" : "Gets all labor rate revs",
        "operationId" : "getsAllLabor Rate Revs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborRateRev"
              }
            }
          }
        }
      }
    },
    "/PA/LaborRateRev/{LaborRateRev}" : {
      "post" : {
        "tags" : [ "Labor Rate Revs" ],
        "summary" : "Adds a new labor rate rev",
        "operationId" : "addLaborRateRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Rate Revs" ],
        "summary" : "Updates a labor rate rev",
        "operationId" : "updateLaborRateRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborRateRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborRateRev/{LRKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Revs" ],
        "summary" : "Get labor rate revs by lrkey",
        "operationId" : "getsLaborRateRevsByLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateRev/{LRRevKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Revs" ],
        "summary" : "Gets labor rate rev by primary key",
        "operationId" : "getsLabor Rate RevByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Rate Revs" ],
        "summary" : "Deletes labor rate rev by primary key",
        "operationId" : "deleteLaborRateRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborSchedule/" : {
      "get" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Gets all labor schedules",
        "operationId" : "getsAllLabor Schedules",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborSchedule"
              }
            }
          }
        }
      }
    },
    "/PM/LaborSchedule/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Get labor schedules by activitykey",
        "operationId" : "getsLaborSchedulesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborSchedule/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Get labor schedules by employeekey",
        "operationId" : "getsLaborSchedulesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborSchedule/{LaborSchedule}" : {
      "post" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Adds a new labor schedule",
        "operationId" : "addLaborSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborSchedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSchedule"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Updates a labor schedule",
        "operationId" : "updateLaborSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborSchedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSchedule",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/LaborSchedule/{LSKey}" : {
      "get" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Gets labor schedule by primary key",
        "operationId" : "getsLabor ScheduleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSchedule"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Deletes labor schedule by primary key",
        "operationId" : "deleteLaborSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LSKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborSchedule/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Get labor schedules by projectkey",
        "operationId" : "getsLaborSchedulesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/LaborSchedule/{SLKey}" : {
      "get" : {
        "tags" : [ "Labor Schedules" ],
        "summary" : "Get labor schedules by slkey",
        "operationId" : "getsLaborSchedulesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectBudget/" : {
      "get" : {
        "tags" : [ "Project Budgets" ],
        "summary" : "Gets all project budgets",
        "operationId" : "getsAllProject Budgets",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectBudget"
              }
            }
          }
        }
      }
    },
    "/PM/ProjectBudget/{ProjectBudget}" : {
      "post" : {
        "tags" : [ "Project Budgets" ],
        "summary" : "Adds a new project budget",
        "operationId" : "addProjectBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectBudget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBudget"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Budgets" ],
        "summary" : "Updates a project budget",
        "operationId" : "updateProjectBudget",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectBudget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBudget"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectBudget",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ProjectBudget/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Project Budgets" ],
        "summary" : "Gets project budget by primary key",
        "operationId" : "getsProject BudgetByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBudget"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Budgets" ],
        "summary" : "Deletes project budget by primary key",
        "operationId" : "deleteProjectBudget",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/Version/" : {
      "get" : {
        "tags" : [ "System Versions" ],
        "summary" : "Gets all system versions",
        "operationId" : "getsAllSystem Versions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Version"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/Version/{VersionKey}" : {
      "get" : {
        "tags" : [ "System Versions" ],
        "summary" : "Gets system version by primary key",
        "operationId" : "getsSystem VersionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Version"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VersionKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/TSFormatLine/" : {
      "get" : {
        "tags" : [ "TS Format Lines" ],
        "summary" : "Gets all ts format lines",
        "operationId" : "getsAllTS Format Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSFormatLine"
              }
            }
          }
        }
      }
    },
    "/SS/TSFormatLine/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "TS Format Lines" ],
        "summary" : "Gets ts format line by primary key",
        "operationId" : "getsTS Format LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormatLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TS Format Lines" ],
        "summary" : "Deletes ts format line by primary key",
        "operationId" : "deleteTSFormatLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/TSFormatLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "TS Format Lines" ],
        "summary" : "Get ts format lines by projectkey",
        "operationId" : "getsTSFormatLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormatLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/TSFormatLine/{TSFormatLine}" : {
      "post" : {
        "tags" : [ "TS Format Lines" ],
        "summary" : "Adds a new ts format line",
        "operationId" : "addTSFormatLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSFormatLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormatLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TS Format Lines" ],
        "summary" : "Updates a ts format line",
        "operationId" : "updateTSFormatLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSFormatLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormatLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSFormatLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeRejection/" : {
      "get" : {
        "tags" : [ "Time Rejections" ],
        "summary" : "Gets all time rejections",
        "operationId" : "getsAllTime Rejections",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeRejection"
              }
            }
          }
        }
      }
    },
    "/HR/TimeRejection/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Time Rejections" ],
        "summary" : "Get time rejections by employeekey",
        "operationId" : "getsTimeRejectionsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRejection"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeRejection/{TimeKey}" : {
      "get" : {
        "tags" : [ "Time Rejections" ],
        "summary" : "Get time rejections by timekey",
        "operationId" : "getsTimeRejectionsByTimeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRejection"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeRejection/{TimeRejection}" : {
      "post" : {
        "tags" : [ "Time Rejections" ],
        "summary" : "Adds a new time rejection",
        "operationId" : "addTimeRejection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeRejection"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRejection"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Rejections" ],
        "summary" : "Updates a time rejection",
        "operationId" : "updateTimeRejection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeRejection"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRejection"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeRejection",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeRejection/{TRKey}" : {
      "get" : {
        "tags" : [ "Time Rejections" ],
        "summary" : "Gets time rejection by primary key",
        "operationId" : "getsTime RejectionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeRejection"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Rejections" ],
        "summary" : "Deletes time rejection by primary key",
        "operationId" : "deleteTimeRejection",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAccount/" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Gets all vendor accounts",
        "operationId" : "getsAllVendor Accounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorAccount"
              }
            }
          }
        }
      }
    },
    "/AP/VendorAccount/{_1099ClsKey}" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Get vendor accounts by 1099clskey",
        "operationId" : "getsVendorAccountsBy1099ClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "_1099ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAccount/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Get vendor accounts by exptypekey",
        "operationId" : "getsVendorAccountsByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAccount/{OHAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Get vendor accounts by ohacctinfokey",
        "operationId" : "getsVendorAccountsByOHAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAccount/{PaymentTermKey}" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Get vendor accounts by paymenttermkey",
        "operationId" : "getsVendorAccountsByPaymentTermKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PaymentTermKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAccount/{RegAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Get vendor accounts by regacctinfokey",
        "operationId" : "getsVendorAccountsByRegAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RegAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAccount/{VendorAccount}" : {
      "post" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Adds a new vendor account",
        "operationId" : "addVendorAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Updates a vendor account",
        "operationId" : "updateVendorAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorAccount",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VendorAccount/{VendorClsKey}" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Get vendor accounts by vendorclskey",
        "operationId" : "getsVendorAccountsByVendorClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAccount/{VendorKey}" : {
      "get" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Gets vendor account by primary key",
        "operationId" : "getsVendor AccountByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAccount"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Vendor Accounts" ],
        "summary" : "Deletes vendor account by primary key",
        "operationId" : "deleteVendorAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/AccountDefault/" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Gets all account defaults",
        "operationId" : "getsAllAccount Defaults",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountDefault"
              }
            }
          }
        }
      }
    },
    "/SS/AccountDefault/{AccountDefault}" : {
      "post" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Adds a new account default",
        "operationId" : "addAccountDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Updates a account default",
        "operationId" : "updateAccountDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccountDefault",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/AccountDefault/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Gets account default by primary key",
        "operationId" : "getsAccount DefaultByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Deletes account default by primary key",
        "operationId" : "deleteAccountDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/AccountDefault/{DLAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Get account defaults by dlacctinfokey",
        "operationId" : "getsAccountDefaultsByDLAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DLAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/AccountDefault/{DLOwnerAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Get account defaults by dlowneracctinfokey",
        "operationId" : "getsAccountDefaultsByDLOwnerAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DLOwnerAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/AccountDefault/{OHAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Get account defaults by ohacctinfokey",
        "operationId" : "getsAccountDefaultsByOHAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/AccountDefault/{OHOwnerAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Get account defaults by ohowneracctinfokey",
        "operationId" : "getsAccountDefaultsByOHOwnerAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHOwnerAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/AccountDefault/{PNLAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Get account defaults by pnlacctinfokey",
        "operationId" : "getsAccountDefaultsByPNLAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PNLAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/AccountDefault/{REAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Account Defaults" ],
        "summary" : "Get account defaults by reacctinfokey",
        "operationId" : "getsAccountDefaultsByREAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "REAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentLine/" : {
      "get" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Gets all adjustment lines",
        "operationId" : "getsAllAdjustment Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AdjustmentLine"
              }
            }
          }
        }
      }
    },
    "/BI/AdjustmentLine/{AdjLineKey}" : {
      "get" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Gets adjustment line by primary key",
        "operationId" : "getsAdjustment LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Deletes adjustment line by primary key",
        "operationId" : "deleteAdjustmentLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentLine/{AdjProjectKey}" : {
      "get" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Get adjustment lines by adjprojectkey",
        "operationId" : "getsAdjustmentLinesByAdjProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentLine/{AdjustmentLine}" : {
      "post" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Adds a new adjustment line",
        "operationId" : "addAdjustmentLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdjustmentLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Updates a adjustment line",
        "operationId" : "updateAdjustmentLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdjustmentLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjustmentLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/BI/AdjustmentLine/{BillLineClsKey}" : {
      "get" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Get adjustment lines by billlineclskey",
        "operationId" : "getsAdjustmentLinesByBillLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillLineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Adjustment Lines" ],
        "summary" : "Get adjustment lines by projectkey",
        "operationId" : "getsAdjustmentLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeAutoCheck/" : {
      "get" : {
        "tags" : [ "Automatic Checks" ],
        "summary" : "Gets all automatic checks",
        "operationId" : "getsAllAutomatic Checks",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeAutoCheck"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeAutoCheck/{BankAcctKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Automatic Checks" ],
        "summary" : "Gets automatic check by primary key",
        "operationId" : "getsAutomatic CheckByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheck"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Automatic Checks" ],
        "summary" : "Deletes automatic check by primary key",
        "operationId" : "deleteEmployeeAutoCheck",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeAutoCheck/{EmployeeAutoCheck}" : {
      "post" : {
        "tags" : [ "Automatic Checks" ],
        "summary" : "Adds a new automatic check",
        "operationId" : "addEmployeeAutoCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAutoCheck"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheck"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Automatic Checks" ],
        "summary" : "Updates a automatic check",
        "operationId" : "updateEmployeeAutoCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAutoCheck"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheck"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeAutoCheck",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentClient/" : {
      "get" : {
        "tags" : [ "Document Clients" ],
        "summary" : "Gets all document clients",
        "operationId" : "getsAllDocument Clients",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentClient"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentClient/{ClientKey}/{DocumentKey}" : {
      "get" : {
        "tags" : [ "Document Clients" ],
        "summary" : "Gets document client by primary key",
        "operationId" : "getsDocument ClientByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentClient"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Clients" ],
        "summary" : "Deletes document client by primary key",
        "operationId" : "deleteDocumentClient",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentClient/{DocumentClient}" : {
      "post" : {
        "tags" : [ "Document Clients" ],
        "summary" : "Adds a new document client",
        "operationId" : "addDocumentClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentClient"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Clients" ],
        "summary" : "Updates a document client",
        "operationId" : "updateDocumentClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentClient"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentClient",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentVendor/" : {
      "get" : {
        "tags" : [ "Document Vendors" ],
        "summary" : "Gets all document vendors",
        "operationId" : "getsAllDocument Vendors",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentVendor"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentVendor/{DocumentKey}/{VendorKey}" : {
      "get" : {
        "tags" : [ "Document Vendors" ],
        "summary" : "Gets document vendor by primary key",
        "operationId" : "getsDocument VendorByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentVendor"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Vendors" ],
        "summary" : "Deletes document vendor by primary key",
        "operationId" : "deleteDocumentVendor",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentVendor/{DocumentVendor}" : {
      "post" : {
        "tags" : [ "Document Vendors" ],
        "summary" : "Adds a new document vendor",
        "operationId" : "addDocumentVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentVendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentVendor"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Vendors" ],
        "summary" : "Updates a document vendor",
        "operationId" : "updateDocumentVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentVendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentVendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentVendor",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/EmployeeClient/" : {
      "get" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Gets all employee clients",
        "operationId" : "getsAllEmployee Clients",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeClient"
              }
            }
          }
        }
      }
    },
    "/CM/EmployeeClient/{ClientKey}" : {
      "get" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Get employee clients by clientkey",
        "operationId" : "getsEmployeeClientsByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeClient"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeClient/{ClientRoleClsKey}" : {
      "get" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Get employee clients by clientroleclskey",
        "operationId" : "getsEmployeeClientsByClientRoleClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeClient"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientRoleClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeClient/{EmployeeClient}" : {
      "post" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Adds a new employee client",
        "operationId" : "addEmployeeClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeClient"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Updates a employee client",
        "operationId" : "updateEmployeeClient",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeClient"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeClient",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/EmployeeClient/{EmployeeClientKey}" : {
      "get" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Gets employee client by primary key",
        "operationId" : "getsEmployee ClientByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeClient"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Deletes employee client by primary key",
        "operationId" : "deleteEmployeeClient",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeClient/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Clients" ],
        "summary" : "Get employee clients by employeekey",
        "operationId" : "getsEmployeeClientsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeClient"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeVendor/" : {
      "get" : {
        "tags" : [ "Employee Vendors" ],
        "summary" : "Gets all employee vendors",
        "operationId" : "getsAllEmployee Vendors",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeVendor"
              }
            }
          }
        }
      }
    },
    "/CM/EmployeeVendor/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Vendors" ],
        "summary" : "Get employee vendors by employeekey",
        "operationId" : "getsEmployeeVendorsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeVendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeVendor/{EmployeeVendor}" : {
      "post" : {
        "tags" : [ "Employee Vendors" ],
        "summary" : "Adds a new employee vendor",
        "operationId" : "addEmployeeVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeVendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeVendor"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Vendors" ],
        "summary" : "Updates a employee vendor",
        "operationId" : "updateEmployeeVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeVendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeVendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeVendor",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/EmployeeVendor/{EmployeeVendorKey}" : {
      "get" : {
        "tags" : [ "Employee Vendors" ],
        "summary" : "Gets employee vendor by primary key",
        "operationId" : "getsEmployee VendorByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeVendor"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Vendors" ],
        "summary" : "Deletes employee vendor by primary key",
        "operationId" : "deleteEmployeeVendor",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeVendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeVendor/{VendorKey}" : {
      "get" : {
        "tags" : [ "Employee Vendors" ],
        "summary" : "Get employee vendors by vendorkey",
        "operationId" : "getsEmployeeVendorsByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeVendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseComment/" : {
      "get" : {
        "tags" : [ "Expense Comments" ],
        "summary" : "Gets all expense comments",
        "operationId" : "getsAllExpense Comments",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseComment"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseComment/{ECKey}" : {
      "get" : {
        "tags" : [ "Expense Comments" ],
        "summary" : "Gets expense comment by primary key",
        "operationId" : "getsExpense CommentByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseComment"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Comments" ],
        "summary" : "Deletes expense comment by primary key",
        "operationId" : "deleteExpenseComment",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ECKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseComment/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Expense Comments" ],
        "summary" : "Get expense comments by employeekey",
        "operationId" : "getsExpenseCommentsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseComment"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseComment/{ExpenseComment}" : {
      "post" : {
        "tags" : [ "Expense Comments" ],
        "summary" : "Adds a new expense comment",
        "operationId" : "addExpenseComment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseComment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseComment"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Comments" ],
        "summary" : "Updates a expense comment",
        "operationId" : "updateExpenseComment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseComment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseComment"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseComment",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborRateLine/" : {
      "get" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Gets all labor rate lines",
        "operationId" : "getsAllLabor Rate Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborRateLine"
              }
            }
          }
        }
      }
    },
    "/PA/LaborRateLine/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Get labor rate lines by activitykey",
        "operationId" : "getsLaborRateLinesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateLine/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Get labor rate lines by employeekey",
        "operationId" : "getsLaborRateLinesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateLine/{LaborRateLine}" : {
      "post" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Adds a new labor rate line",
        "operationId" : "addLaborRateLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Updates a labor rate line",
        "operationId" : "updateLaborRateLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborRateLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborRateLine/{LRLineKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Gets labor rate line by primary key",
        "operationId" : "getsLabor Rate LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Deletes labor rate line by primary key",
        "operationId" : "deleteLaborRateLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateLine/{LRRevKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Get labor rate lines by lrrevkey",
        "operationId" : "getsLaborRateLinesByLRRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateLine/{SLKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Lines" ],
        "summary" : "Get labor rate lines by slkey",
        "operationId" : "getsLaborRateLinesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectAddFee/" : {
      "get" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Gets all project add fees",
        "operationId" : "getsAllProject Add Fees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectAddFee"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectAddFee/{AddFeeClsKey}" : {
      "get" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Get project add fees by addfeeclskey",
        "operationId" : "getsProjectAddFeesByAddFeeClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddFeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectAddFee/{AddFeeKey}" : {
      "get" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Get project add fees by addfeekey",
        "operationId" : "getsProjectAddFeesByAddFeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddFeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectAddFee/{ProjectAddFee}" : {
      "post" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Adds a new project add fee",
        "operationId" : "addProjectAddFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectAddFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Updates a project add fee",
        "operationId" : "updateProjectAddFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectAddFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectAddFee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectAddFee/{ProjectAddonKey}" : {
      "get" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Gets project add fee by primary key",
        "operationId" : "getsProject Add FeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Deletes project add fee by primary key",
        "operationId" : "deleteProjectAddFee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectAddonKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectAddFee/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Get project add fees by projectinfokey",
        "operationId" : "getsProjectAddFeesByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectAddFee/{RevAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Get project add fees by revacctinfokey",
        "operationId" : "getsProjectAddFeesByRevAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectAddFee/{TaxAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Add Fees" ],
        "summary" : "Get project add fees by taxacctinfokey",
        "operationId" : "getsProjectAddFeesByTaxAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectAddFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TaxAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Gets all project billings",
        "operationId" : "getsAllProject Billings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectBilling"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectBilling/{ARStatementClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by arstatementclskey",
        "operationId" : "getsProjectBillingsByARStatementClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARStatementClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{BillCycleClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by billcycleclskey",
        "operationId" : "getsProjectBillingsByBillCycleClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillCycleClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{BillLRKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by billlrkey",
        "operationId" : "getsProjectBillingsByBillLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by billstatusclskey",
        "operationId" : "getsProjectBillingsByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{BTDClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by btdclskey",
        "operationId" : "getsProjectBillingsByBTDClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BTDClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{CnsDetailClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by cnsdetailclskey",
        "operationId" : "getsProjectBillingsByCnsDetailClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CnsDetailClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{CnsEMKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by cnsemkey",
        "operationId" : "getsProjectBillingsByCnsEMKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CnsEMKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{EMKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by emkey",
        "operationId" : "getsProjectBillingsByEMKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{ExpDetailClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by expdetailclskey",
        "operationId" : "getsProjectBillingsByExpDetailClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpDetailClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{FeeClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by feeclskey",
        "operationId" : "getsProjectBillingsByFeeClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{InvCnsDesignKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by invcnsdesignkey",
        "operationId" : "getsProjectBillingsByInvCnsDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvCnsDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{InvDesignKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by invdesignkey",
        "operationId" : "getsProjectBillingsByInvDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{InvExpDesignKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by invexpdesignkey",
        "operationId" : "getsProjectBillingsByInvExpDesignKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvExpDesignKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{LaborSort1ClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by laborsort1clskey",
        "operationId" : "getsProjectBillingsByLaborSort1ClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSort1ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{LaborSort2ClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by laborsort2clskey",
        "operationId" : "getsProjectBillingsByLaborSort2ClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSort2ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{LaborSort3ClsKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by laborsort3clskey",
        "operationId" : "getsProjectBillingsByLaborSort3ClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSort3ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{OverrideBillLRKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Get project billings by overridebilllrkey",
        "operationId" : "getsProjectBillingsByOverrideBillLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OverrideBillLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectBilling/{ProjectBilling}" : {
      "post" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Adds a new project billing",
        "operationId" : "addProjectBilling",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Updates a project billing",
        "operationId" : "updateProjectBilling",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectBilling",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectBilling/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Gets project billing by primary key",
        "operationId" : "getsProject BillingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectBilling"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Billings" ],
        "summary" : "Deletes project billing by primary key",
        "operationId" : "deleteProjectBilling",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpense/" : {
      "get" : {
        "tags" : [ "Project Expenses" ],
        "summary" : "Gets all project expenses",
        "operationId" : "getsAllProject Expenses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectExpense"
              }
            }
          }
        }
      }
    },
    "/PM/ProjectExpense/{PEKey}" : {
      "get" : {
        "tags" : [ "Project Expenses" ],
        "summary" : "Gets project expense by primary key",
        "operationId" : "getsProject ExpenseByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpense"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Expenses" ],
        "summary" : "Deletes project expense by primary key",
        "operationId" : "deleteProjectExpense",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PEKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpense/{ProjectExpense}" : {
      "post" : {
        "tags" : [ "Project Expenses" ],
        "summary" : "Adds a new project expense",
        "operationId" : "addProjectExpense",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectExpense"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpense"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Expenses" ],
        "summary" : "Updates a project expense",
        "operationId" : "updateProjectExpense",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectExpense"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpense"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectExpense",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ProjectExpense/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Project Expenses" ],
        "summary" : "Finds project expenses by id or name",
        "operationId" : "getsAllProject Expenses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectExpense"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/RPT/ReportTemplate/" : {
      "get" : {
        "tags" : [ "Report Templates" ],
        "summary" : "Gets all report templates",
        "operationId" : "getsAllReport Templates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReportTemplate"
              }
            }
          }
        }
      }
    },
    "/RPT/ReportTemplate/{RptClsKey}" : {
      "get" : {
        "tags" : [ "Report Templates" ],
        "summary" : "Get report templates by rptclskey",
        "operationId" : "getsReportTemplatesByRptClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReportTemplate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RptClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/RPT/ReportTemplate/{TemplateKey}" : {
      "get" : {
        "tags" : [ "Report Templates" ],
        "summary" : "Gets report template by primary key",
        "operationId" : "getsReport TemplateByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReportTemplate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TemplateKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/RPT/ReportTemplate/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Report Templates" ],
        "summary" : "Finds report templates by id or name",
        "operationId" : "getsAllReport Templates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReportTemplate"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/RevenueDefault/" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Gets all revenue defaults",
        "operationId" : "getsAllRevenue Defaults",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RevenueDefault"
              }
            }
          }
        }
      }
    },
    "/SS/RevenueDefault/{ARAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by aracctinfokey",
        "operationId" : "getsRevenueDefaultsByARAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Gets revenue default by primary key",
        "operationId" : "getsRevenue DefaultByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Deletes revenue default by primary key",
        "operationId" : "deleteRevenueDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{DCnsAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by dcnsacctinfokey",
        "operationId" : "getsRevenueDefaultsByDCnsAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DCnsAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{DEAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by deacctinfokey",
        "operationId" : "getsRevenueDefaultsByDEAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DEAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{FeeAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by feeacctinfokey",
        "operationId" : "getsRevenueDefaultsByFeeAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FeeAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{InterestAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by interestacctinfokey",
        "operationId" : "getsRevenueDefaultsByInterestAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InterestAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{LaborAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by laboracctinfokey",
        "operationId" : "getsRevenueDefaultsByLaborAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{OFeeAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by ofeeacctinfokey",
        "operationId" : "getsRevenueDefaultsByOFeeAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OFeeAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{RCnsAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by rcnsacctinfokey",
        "operationId" : "getsRevenueDefaultsByRCnsAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RCnsAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{RetainageAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by retainageacctinfokey",
        "operationId" : "getsRevenueDefaultsByRetainageAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RetainageAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{RetainerAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by retaineracctinfokey",
        "operationId" : "getsRevenueDefaultsByRetainerAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RetainerAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{RevenueDefault}" : {
      "post" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Adds a new revenue default",
        "operationId" : "addRevenueDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RevenueDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Updates a revenue default",
        "operationId" : "updateRevenueDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RevenueDefault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueDefault",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/RevenueDefault/{RExpAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by rexpacctinfokey",
        "operationId" : "getsRevenueDefaultsByRExpAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RExpAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/RevenueDefault/{TaxAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Revenue Defaults" ],
        "summary" : "Get revenue defaults by taxacctinfokey",
        "operationId" : "getsRevenueDefaultsByTaxAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueDefault"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TaxAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/TransactionCls/" : {
      "get" : {
        "tags" : [ "TransactionClses" ],
        "summary" : "Gets all transactionclses",
        "operationId" : "getsAllTransactionClses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TransactionCls"
              }
            }
          }
        }
      }
    },
    "/SYS/TransactionCls/{TransClsKey}" : {
      "get" : {
        "tags" : [ "TransactionClses" ],
        "summary" : "Gets transactioncls by primary key",
        "operationId" : "getsTransactionClsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TransactionCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TransClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/TransactionCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "TransactionClses" ],
        "summary" : "Finds transactionclses by id or name",
        "operationId" : "getsAllTransactionClses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TransactionCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/AccrualEmployee/" : {
      "get" : {
        "tags" : [ "Accrual Employees" ],
        "summary" : "Gets all accrual employees",
        "operationId" : "getsAllAccrual Employees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccrualEmployee"
              }
            }
          }
        }
      }
    },
    "/HR/AccrualEmployee/{AccrualEmployee}" : {
      "post" : {
        "tags" : [ "Accrual Employees" ],
        "summary" : "Adds a new accrual employee",
        "operationId" : "addAccrualEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualEmployee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Accrual Employees" ],
        "summary" : "Updates a accrual employee",
        "operationId" : "updateAccrualEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualEmployee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualEmployee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/AccrualEmployee/{AccrualKey}/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Accrual Employees" ],
        "summary" : "Gets accrual employee by primary key",
        "operationId" : "getsAccrual EmployeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualEmployee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Accrual Employees" ],
        "summary" : "Deletes accrual employee by primary key",
        "operationId" : "deleteAccrualEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/AccrualHistory/" : {
      "get" : {
        "tags" : [ "Accrual Histories" ],
        "summary" : "Gets all accrual histories",
        "operationId" : "getsAllAccrual Histories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccrualHistory"
              }
            }
          }
        }
      }
    },
    "/HR/AccrualHistory/{AccrualHistory}" : {
      "post" : {
        "tags" : [ "Accrual Histories" ],
        "summary" : "Adds a new accrual history",
        "operationId" : "addAccrualHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistory"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Accrual Histories" ],
        "summary" : "Updates a accrual history",
        "operationId" : "updateAccrualHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualHistory",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/AccrualHistory/{AccrualKey}" : {
      "get" : {
        "tags" : [ "Accrual Histories" ],
        "summary" : "Get accrual histories by accrualkey",
        "operationId" : "getsAccrualHistoriesByAccrualKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/AccrualHistory/{AHKey}" : {
      "get" : {
        "tags" : [ "Accrual Histories" ],
        "summary" : "Gets accrual history by primary key",
        "operationId" : "getsAccrual HistoryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistory"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Accrual Histories" ],
        "summary" : "Deletes accrual history by primary key",
        "operationId" : "deleteAccrualHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AHKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/ActivityContact/" : {
      "get" : {
        "tags" : [ "Activity Contacts" ],
        "summary" : "Gets all activity contacts",
        "operationId" : "getsAllActivity Contacts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityContact"
              }
            }
          }
        }
      }
    },
    "/CM/ActivityContact/{ActivityContact}" : {
      "post" : {
        "tags" : [ "Activity Contacts" ],
        "summary" : "Adds a new activity contact",
        "operationId" : "addActivityContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityContact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Activity Contacts" ],
        "summary" : "Updates a activity contact",
        "operationId" : "updateActivityContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityContact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityContact",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/ActivityContact/{ActivityKey}/{ContactKey}" : {
      "get" : {
        "tags" : [ "Activity Contacts" ],
        "summary" : "Gets activity contact by primary key",
        "operationId" : "getsActivity ContactByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityContact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity Contacts" ],
        "summary" : "Deletes activity contact by primary key",
        "operationId" : "deleteActivityContact",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentInvoice/" : {
      "get" : {
        "tags" : [ "Document Invoices" ],
        "summary" : "Gets all document invoices",
        "operationId" : "getsAllDocument Invoices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentInvoice"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentInvoice/{DocumentInvoice}" : {
      "post" : {
        "tags" : [ "Document Invoices" ],
        "summary" : "Adds a new document invoice",
        "operationId" : "addDocumentInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentInvoice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentInvoice"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Invoices" ],
        "summary" : "Updates a document invoice",
        "operationId" : "updateDocumentInvoice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentInvoice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentInvoice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentInvoice",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentInvoice/{DocumentKey}/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Document Invoices" ],
        "summary" : "Gets document invoice by primary key",
        "operationId" : "getsDocument InvoiceByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentInvoice"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Invoices" ],
        "summary" : "Deletes document invoice by primary key",
        "operationId" : "deleteDocumentInvoice",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentJournal/" : {
      "get" : {
        "tags" : [ "Document Journals" ],
        "summary" : "Gets all document journals",
        "operationId" : "getsAllDocument Journals",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentJournal"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentJournal/{DocumentJournal}" : {
      "post" : {
        "tags" : [ "Document Journals" ],
        "summary" : "Adds a new document journal",
        "operationId" : "addDocumentJournal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentJournal"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentJournal"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Journals" ],
        "summary" : "Updates a document journal",
        "operationId" : "updateDocumentJournal",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentJournal"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentJournal"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentJournal",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentJournal/{DocumentKey}/{JournalKey}" : {
      "get" : {
        "tags" : [ "Document Journals" ],
        "summary" : "Gets document journal by primary key",
        "operationId" : "getsDocument JournalByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentJournal"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Journals" ],
        "summary" : "Deletes document journal by primary key",
        "operationId" : "deleteDocumentJournal",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentReceipt/" : {
      "get" : {
        "tags" : [ "Document Receipts" ],
        "summary" : "Gets all document receipts",
        "operationId" : "getsAllDocument Receipts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentReceipt"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentReceipt/{DocumentKey}/{ReceiptKey}" : {
      "get" : {
        "tags" : [ "Document Receipts" ],
        "summary" : "Gets document receipt by primary key",
        "operationId" : "getsDocument ReceiptByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentReceipt"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Receipts" ],
        "summary" : "Deletes document receipt by primary key",
        "operationId" : "deleteDocumentReceipt",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentReceipt/{DocumentReceipt}" : {
      "post" : {
        "tags" : [ "Document Receipts" ],
        "summary" : "Adds a new document receipt",
        "operationId" : "addDocumentReceipt",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentReceipt"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentReceipt"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Receipts" ],
        "summary" : "Updates a document receipt",
        "operationId" : "updateDocumentReceipt",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentReceipt"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentReceipt"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentReceipt",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentVoucher/" : {
      "get" : {
        "tags" : [ "Document Vouchers" ],
        "summary" : "Gets all document vouchers",
        "operationId" : "getsAllDocument Vouchers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentVoucher"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentVoucher/{DocumentKey}/{VoucherKey}" : {
      "get" : {
        "tags" : [ "Document Vouchers" ],
        "summary" : "Gets document voucher by primary key",
        "operationId" : "getsDocument VoucherByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentVoucher"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Vouchers" ],
        "summary" : "Deletes document voucher by primary key",
        "operationId" : "deleteDocumentVoucher",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentVoucher/{DocumentVoucher}" : {
      "post" : {
        "tags" : [ "Document Vouchers" ],
        "summary" : "Adds a new document voucher",
        "operationId" : "addDocumentVoucher",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentVoucher"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentVoucher"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Vouchers" ],
        "summary" : "Updates a document voucher",
        "operationId" : "updateDocumentVoucher",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentVoucher"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentVoucher"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentVoucher",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeAccount/" : {
      "get" : {
        "tags" : [ "Employee Accounts" ],
        "summary" : "Gets all employee accounts",
        "operationId" : "getsAllEmployee Accounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeAccount"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeAccount/{EmployeeAccount}" : {
      "post" : {
        "tags" : [ "Employee Accounts" ],
        "summary" : "Adds a new employee account",
        "operationId" : "addEmployeeAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAccount"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Accounts" ],
        "summary" : "Updates a employee account",
        "operationId" : "updateEmployeeAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeAccount",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeAccount/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Accounts" ],
        "summary" : "Gets employee account by primary key",
        "operationId" : "getsEmployee AccountByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAccount"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Accounts" ],
        "summary" : "Deletes employee account by primary key",
        "operationId" : "deleteEmployeeAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeAccount/{SalaryClsKey}" : {
      "get" : {
        "tags" : [ "Employee Accounts" ],
        "summary" : "Get employee accounts by salaryclskey",
        "operationId" : "getsEmployeeAccountsBySalaryClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SalaryClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeContact/" : {
      "get" : {
        "tags" : [ "Employee Contacts" ],
        "summary" : "Gets all employee contacts",
        "operationId" : "getsAllEmployee Contacts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeContact"
              }
            }
          }
        }
      }
    },
    "/CM/EmployeeContact/{ContactKey}" : {
      "get" : {
        "tags" : [ "Employee Contacts" ],
        "summary" : "Get employee contacts by contactkey",
        "operationId" : "getsEmployeeContactsByContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeContact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeContact/{EmployeeContact}" : {
      "post" : {
        "tags" : [ "Employee Contacts" ],
        "summary" : "Adds a new employee contact",
        "operationId" : "addEmployeeContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeContact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Contacts" ],
        "summary" : "Updates a employee contact",
        "operationId" : "updateEmployeeContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeContact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeContact",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/CM/EmployeeContact/{EmployeeContactKey}" : {
      "get" : {
        "tags" : [ "Employee Contacts" ],
        "summary" : "Gets employee contact by primary key",
        "operationId" : "getsEmployee ContactByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeContact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Contacts" ],
        "summary" : "Deletes employee contact by primary key",
        "operationId" : "deleteEmployeeContact",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/CM/EmployeeContact/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Contacts" ],
        "summary" : "Get employee contacts by employeekey",
        "operationId" : "getsEmployeeContactsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeContact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeePicture/" : {
      "get" : {
        "tags" : [ "Employee Pictures" ],
        "summary" : "Gets all employee pictures",
        "operationId" : "getsAllEmployee Pictures",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeePicture"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeePicture/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Pictures" ],
        "summary" : "Gets employee picture by primary key",
        "operationId" : "getsEmployee PictureByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePicture"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Pictures" ],
        "summary" : "Deletes employee picture by primary key",
        "operationId" : "deleteEmployeePicture",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeePicture/{EmployeePicture}" : {
      "post" : {
        "tags" : [ "Employee Pictures" ],
        "summary" : "Adds a new employee picture",
        "operationId" : "addEmployeePicture",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeePicture"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePicture"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Pictures" ],
        "summary" : "Updates a employee picture",
        "operationId" : "updateEmployeePicture",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeePicture"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeePicture"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeePicture",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseApprover/" : {
      "get" : {
        "tags" : [ "Expense Approvers" ],
        "summary" : "Gets all expense approvers",
        "operationId" : "getsAllExpense Approvers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseApprover"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseApprover/{EAEmployeeKey}" : {
      "get" : {
        "tags" : [ "Expense Approvers" ],
        "summary" : "Get expense approvers by eaemployeekey",
        "operationId" : "getsExpenseApproversByEAEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseApprover"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EAEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseApprover/{EAKey}" : {
      "get" : {
        "tags" : [ "Expense Approvers" ],
        "summary" : "Gets expense approver by primary key",
        "operationId" : "getsExpense ApproverByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseApprover"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Approvers" ],
        "summary" : "Deletes expense approver by primary key",
        "operationId" : "deleteExpenseApprover",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EAKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseApprover/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Expense Approvers" ],
        "summary" : "Get expense approvers by employeekey",
        "operationId" : "getsExpenseApproversByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseApprover"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseApprover/{ExpenseApprover}" : {
      "post" : {
        "tags" : [ "Expense Approvers" ],
        "summary" : "Adds a new expense approver",
        "operationId" : "addExpenseApprover",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseApprover"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseApprover"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Approvers" ],
        "summary" : "Updates a expense approver",
        "operationId" : "updateExpenseApprover",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseApprover"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseApprover"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseApprover",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseHistory/" : {
      "get" : {
        "tags" : [ "Expense Histories" ],
        "summary" : "Gets all expense histories",
        "operationId" : "getsAllExpense Histories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseHistory"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseHistory/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Expense Histories" ],
        "summary" : "Get expense histories by employeekey",
        "operationId" : "getsExpenseHistoriesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistory/{ESAcctKey}" : {
      "get" : {
        "tags" : [ "Expense Histories" ],
        "summary" : "Get expense histories by esacctkey",
        "operationId" : "getsExpenseHistoriesByESAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ESAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistory/{ExpenseHistory}" : {
      "post" : {
        "tags" : [ "Expense Histories" ],
        "summary" : "Adds a new expense history",
        "operationId" : "addExpenseHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistory"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Histories" ],
        "summary" : "Updates a expense history",
        "operationId" : "updateExpenseHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseHistory",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseHistory/{ExpHistoryKey}" : {
      "get" : {
        "tags" : [ "Expense Histories" ],
        "summary" : "Gets expense history by primary key",
        "operationId" : "getsExpense HistoryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistory"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Histories" ],
        "summary" : "Deletes expense history by primary key",
        "operationId" : "deleteExpenseHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseSchedule/" : {
      "get" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Gets all expense schedules",
        "operationId" : "getsAllExpense Schedules",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseSchedule"
              }
            }
          }
        }
      }
    },
    "/PM/ExpenseSchedule/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Get expense schedules by employeekey",
        "operationId" : "getsExpenseSchedulesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseSchedule/{ESKey}" : {
      "get" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Gets expense schedule by primary key",
        "operationId" : "getsExpense ScheduleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseSchedule"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Deletes expense schedule by primary key",
        "operationId" : "deleteExpenseSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ESKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseSchedule/{ExpenseSchedule}" : {
      "post" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Adds a new expense schedule",
        "operationId" : "addExpenseSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseSchedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseSchedule"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Updates a expense schedule",
        "operationId" : "updateExpenseSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseSchedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseSchedule",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ExpenseSchedule/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Get expense schedules by exptypekey",
        "operationId" : "getsExpenseSchedulesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseSchedule/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Get expense schedules by projectkey",
        "operationId" : "getsExpenseSchedulesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ExpenseSchedule/{VendorKey}" : {
      "get" : {
        "tags" : [ "Expense Schedules" ],
        "summary" : "Get expense schedules by vendorkey",
        "operationId" : "getsExpenseSchedulesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistory/" : {
      "get" : {
        "tags" : [ "Invoice Histories" ],
        "summary" : "Gets all invoice histories",
        "operationId" : "getsAllInvoice Histories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceHistory"
              }
            }
          }
        }
      }
    },
    "/AR/InvoiceHistory/{ARAcctKey}" : {
      "get" : {
        "tags" : [ "Invoice Histories" ],
        "summary" : "Get invoice histories by aracctkey",
        "operationId" : "getsInvoiceHistoriesByARAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistory/{ClientKey}" : {
      "get" : {
        "tags" : [ "Invoice Histories" ],
        "summary" : "Get invoice histories by clientkey",
        "operationId" : "getsInvoiceHistoriesByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistory/{InvoiceHistory}" : {
      "post" : {
        "tags" : [ "Invoice Histories" ],
        "summary" : "Adds a new invoice history",
        "operationId" : "addInvoiceHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistory"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice Histories" ],
        "summary" : "Updates a invoice history",
        "operationId" : "updateInvoiceHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceHistory",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceHistory/{InvoiceHistoryKey}" : {
      "get" : {
        "tags" : [ "Invoice Histories" ],
        "summary" : "Gets invoice history by primary key",
        "operationId" : "getsInvoice HistoryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistory"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice Histories" ],
        "summary" : "Deletes invoice history by primary key",
        "operationId" : "deleteInvoiceHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceRev/" : {
      "get" : {
        "tags" : [ "Invoice Revisions" ],
        "summary" : "Gets all invoice revisions",
        "operationId" : "getsAllInvoice Revisions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceRev"
              }
            }
          }
        }
      }
    },
    "/AR/InvoiceRev/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Invoice Revisions" ],
        "summary" : "Get invoice revisions by invoicekey",
        "operationId" : "getsInvoiceRevisionsByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceRev/{InvoiceRev}" : {
      "post" : {
        "tags" : [ "Invoice Revisions" ],
        "summary" : "Adds a new invoice revision",
        "operationId" : "addInvoiceRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice Revisions" ],
        "summary" : "Updates a invoice revision",
        "operationId" : "updateInvoiceRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceRev/{InvoiceRevKey}" : {
      "get" : {
        "tags" : [ "Invoice Revisions" ],
        "summary" : "Gets invoice revision by primary key",
        "operationId" : "getsInvoice RevisionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice Revisions" ],
        "summary" : "Deletes invoice revision by primary key",
        "operationId" : "deleteInvoiceRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceRev/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Invoice Revisions" ],
        "summary" : "Get invoice revisions by periodkey",
        "operationId" : "getsInvoiceRevisionsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/INV/InvoiceTemplate/" : {
      "get" : {
        "tags" : [ "Invoice Templates" ],
        "summary" : "Gets all invoice templates",
        "operationId" : "getsAllInvoice Templates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceTemplate"
              }
            }
          }
        }
      }
    },
    "/INV/InvoiceTemplate/{TemplateKey}" : {
      "get" : {
        "tags" : [ "Invoice Templates" ],
        "summary" : "Gets invoice template by primary key",
        "operationId" : "getsInvoice TemplateByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceTemplate"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TemplateKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/INV/InvoiceTemplate/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Invoice Templates" ],
        "summary" : "Finds invoice templates by id or name",
        "operationId" : "getsAllInvoice Templates",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceTemplate"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/JournalRev/" : {
      "get" : {
        "tags" : [ "Journal Revisions" ],
        "summary" : "Gets all journal revisions",
        "operationId" : "getsAllJournal Revisions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JournalRev"
              }
            }
          }
        }
      }
    },
    "/GA/JournalRev/{JournalKey}" : {
      "get" : {
        "tags" : [ "Journal Revisions" ],
        "summary" : "Get journal revisions by journalkey",
        "operationId" : "getsJournalRevisionsByJournalKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalRev/{JournalRev}" : {
      "post" : {
        "tags" : [ "Journal Revisions" ],
        "summary" : "Adds a new journal revision",
        "operationId" : "addJournalRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Journal Revisions" ],
        "summary" : "Updates a journal revision",
        "operationId" : "updateJournalRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/JournalRev/{JournalRevKey}" : {
      "get" : {
        "tags" : [ "Journal Revisions" ],
        "summary" : "Gets journal revision by primary key",
        "operationId" : "getsJournal RevisionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Journal Revisions" ],
        "summary" : "Deletes journal revision by primary key",
        "operationId" : "deleteJournalRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/JournalRev/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Journal Revisions" ],
        "summary" : "Get journal revisions by periodkey",
        "operationId" : "getsJournalRevisionsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborGroupLine/" : {
      "get" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Gets all labor group lines",
        "operationId" : "getsAllLabor Group Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborGroupLine"
              }
            }
          }
        }
      }
    },
    "/PA/LaborGroupLine/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Get labor group lines by employeekey",
        "operationId" : "getsLaborGroupLinesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborGroupLine/{LaborGroupKey}" : {
      "get" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Get labor group lines by laborgroupkey",
        "operationId" : "getsLaborGroupLinesByLaborGroupKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborGroupLine/{LaborGroupLine}" : {
      "post" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Adds a new labor group line",
        "operationId" : "addLaborGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroupLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Updates a labor group line",
        "operationId" : "updateLaborGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborGroupLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborGroupLine/{LGLineKey}" : {
      "get" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Gets labor group line by primary key",
        "operationId" : "getsLabor Group LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroupLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Deletes labor group line by primary key",
        "operationId" : "deleteLaborGroupLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LGLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborGroupLine/{SLKey}" : {
      "get" : {
        "tags" : [ "Labor Group Lines" ],
        "summary" : "Get labor group lines by slkey",
        "operationId" : "getsLaborGroupLinesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/PasswordSetting/" : {
      "get" : {
        "tags" : [ "Password Settings" ],
        "summary" : "Gets all password settings",
        "operationId" : "getsAllPassword Settings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PasswordSetting"
              }
            }
          }
        }
      }
    },
    "/SC/PasswordSetting/{AlphaNumClsKey}" : {
      "get" : {
        "tags" : [ "Password Settings" ],
        "summary" : "Get password settings by alphanumclskey",
        "operationId" : "getsPasswordSettingsByAlphaNumClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PasswordSetting"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AlphaNumClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SC/PasswordSetting/{PasswordSetting}" : {
      "post" : {
        "tags" : [ "Password Settings" ],
        "summary" : "Adds a new password setting",
        "operationId" : "addPasswordSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PasswordSetting"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Password Settings" ],
        "summary" : "Updates a password setting",
        "operationId" : "updatePasswordSetting",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PasswordSetting"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PasswordSetting",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SC/PasswordSetting/{SettingKey}" : {
      "get" : {
        "tags" : [ "Password Settings" ],
        "summary" : "Gets password setting by primary key",
        "operationId" : "getsPassword SettingByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PasswordSetting"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Password Settings" ],
        "summary" : "Deletes password setting by primary key",
        "operationId" : "deletePasswordSetting",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SettingKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRateLine/" : {
      "get" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Gets all recalc rate lines",
        "operationId" : "getsAllRecalc Rate Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecalcRateLine"
              }
            }
          }
        }
      }
    },
    "/UTL/RecalcRateLine/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Get recalc rate lines by activitykey",
        "operationId" : "getsRecalcRateLinesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRateLine/{BillLineClsKey}/{LineKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Gets recalc rate line by primary key",
        "operationId" : "getsRecalc Rate LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRateLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Deletes recalc rate line by primary key",
        "operationId" : "deleteRecalcRateLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BillLineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRateLine/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Get recalc rate lines by employeekey",
        "operationId" : "getsRecalcRateLinesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRateLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Get recalc rate lines by projectkey",
        "operationId" : "getsRecalcRateLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcRateLine/{RecalcRateLine}" : {
      "post" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Adds a new recalc rate line",
        "operationId" : "addRecalcRateLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcRateLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRateLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Updates a recalc rate line",
        "operationId" : "updateRecalcRateLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcRateLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RecalcRateLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/RecalcRateLine/{SLKey}" : {
      "get" : {
        "tags" : [ "Recalc Rate Lines" ],
        "summary" : "Get recalc rate lines by slkey",
        "operationId" : "getsRecalcRateLinesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcRateLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistory/" : {
      "get" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Gets all receipt histories",
        "operationId" : "getsAllReceipt Histories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptHistory"
              }
            }
          }
        }
      }
    },
    "/AR/ReceiptHistory/{BankAcctKey}" : {
      "get" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Get receipt histories by bankacctkey",
        "operationId" : "getsReceiptHistoriesByBankAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistory/{ClientKey}" : {
      "get" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Get receipt histories by clientkey",
        "operationId" : "getsReceiptHistoriesByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistory/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Get receipt histories by employeekey",
        "operationId" : "getsReceiptHistoriesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistory/{ReceiptClsKey}" : {
      "get" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Get receipt histories by receiptclskey",
        "operationId" : "getsReceiptHistoriesByReceiptClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistory/{ReceiptHistory}" : {
      "post" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Adds a new receipt history",
        "operationId" : "addReceiptHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Updates a receipt history",
        "operationId" : "updateReceiptHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptHistory",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptHistory/{ReceiptHistoryKey}" : {
      "get" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Gets receipt history by primary key",
        "operationId" : "getsReceipt HistoryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Deletes receipt history by primary key",
        "operationId" : "deleteReceiptHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistory/{VendorKey}" : {
      "get" : {
        "tags" : [ "Receipt Histories" ],
        "summary" : "Get receipt histories by vendorkey",
        "operationId" : "getsReceiptHistoriesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptRev/" : {
      "get" : {
        "tags" : [ "Receipt Revisions" ],
        "summary" : "Gets all receipt revisions",
        "operationId" : "getsAllReceipt Revisions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptRev"
              }
            }
          }
        }
      }
    },
    "/AR/ReceiptRev/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Receipt Revisions" ],
        "summary" : "Get receipt revisions by periodkey",
        "operationId" : "getsReceiptRevisionsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptRev/{ReceiptKey}" : {
      "get" : {
        "tags" : [ "Receipt Revisions" ],
        "summary" : "Get receipt revisions by receiptkey",
        "operationId" : "getsReceiptRevisionsByReceiptKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptRev/{ReceiptRev}" : {
      "post" : {
        "tags" : [ "Receipt Revisions" ],
        "summary" : "Adds a new receipt revision",
        "operationId" : "addReceiptRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Receipt Revisions" ],
        "summary" : "Updates a receipt revision",
        "operationId" : "updateReceiptRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptRev/{ReceiptRevKey}" : {
      "get" : {
        "tags" : [ "Receipt Revisions" ],
        "summary" : "Gets receipt revision by primary key",
        "operationId" : "getsReceipt RevisionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Receipt Revisions" ],
        "summary" : "Deletes receipt revision by primary key",
        "operationId" : "deleteReceiptRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeCommentTag/" : {
      "get" : {
        "tags" : [ "Time Comment Tags" ],
        "summary" : "Gets all time comment tags",
        "operationId" : "getsAllTime Comment Tags",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeCommentTag"
              }
            }
          }
        }
      }
    },
    "/HR/TimeCommentTag/{TagKey}/{TCKey}" : {
      "get" : {
        "tags" : [ "Time Comment Tags" ],
        "summary" : "Gets time comment tag by primary key",
        "operationId" : "getsTime Comment TagByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCommentTag"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Comment Tags" ],
        "summary" : "Deletes time comment tag by primary key",
        "operationId" : "deleteTimeCommentTag",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TCKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "TagKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeCommentTag/{TimeCommentTag}" : {
      "post" : {
        "tags" : [ "Time Comment Tags" ],
        "summary" : "Adds a new time comment tag",
        "operationId" : "addTimeCommentTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeCommentTag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCommentTag"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Comment Tags" ],
        "summary" : "Updates a time comment tag",
        "operationId" : "updateTimeCommentTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeCommentTag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeCommentTag"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeCommentTag",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeLineChange/" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Gets all time line changes",
        "operationId" : "getsAllTime Line Changes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeLineChange"
              }
            }
          }
        }
      }
    },
    "/HR/TimeLineChange/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Get time line changes by activitykey",
        "operationId" : "getsTimeLineChangesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Get time line changes by billstatusclskey",
        "operationId" : "getsTimeLineChangesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{ChangeNum}/{TimeLineKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Gets time line change by primary key",
        "operationId" : "getsTime Line ChangeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Deletes time line change by primary key",
        "operationId" : "deleteTimeLineChange",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ChangeNum",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "TimeLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{EmployeeCenterKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Get time line changes by employeecenterkey",
        "operationId" : "getsTimeLineChangesByEmployeeCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeCenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{OTClsKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Get time line changes by otclskey",
        "operationId" : "getsTimeLineChangesByOTClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OTClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{ProjectCenterKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Get time line changes by projectcenterkey",
        "operationId" : "getsTimeLineChangesByProjectCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectCenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Get time line changes by projectkey",
        "operationId" : "getsTimeLineChangesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{SLKey}" : {
      "get" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Get time line changes by slkey",
        "operationId" : "getsTimeLineChangesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineChange/{TimeLineChange}" : {
      "post" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Adds a new time line change",
        "operationId" : "addTimeLineChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeLineChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Line Changes" ],
        "summary" : "Updates a time line change",
        "operationId" : "updateTimeLineChange",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeLineChange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineChange"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeLineChange",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VendorInsurance/" : {
      "get" : {
        "tags" : [ "Vendor Insurances" ],
        "summary" : "Gets all vendor insurances",
        "operationId" : "getsAllVendor Insurances",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorInsurance"
              }
            }
          }
        }
      }
    },
    "/AP/VendorInsurance/{InsuranceClsKey}" : {
      "get" : {
        "tags" : [ "Vendor Insurances" ],
        "summary" : "Get vendor insurances by insuranceclskey",
        "operationId" : "getsVendorInsurancesByInsuranceClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorInsurance"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InsuranceClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorInsurance/{VendorInsurance}" : {
      "post" : {
        "tags" : [ "Vendor Insurances" ],
        "summary" : "Adds a new vendor insurance",
        "operationId" : "addVendorInsurance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorInsurance"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorInsurance"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Vendor Insurances" ],
        "summary" : "Updates a vendor insurance",
        "operationId" : "updateVendorInsurance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorInsurance"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorInsurance"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorInsurance",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VendorInsurance/{VendorKey}" : {
      "get" : {
        "tags" : [ "Vendor Insurances" ],
        "summary" : "Gets vendor insurance by primary key",
        "operationId" : "getsVendor InsuranceByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorInsurance"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Vendor Insurances" ],
        "summary" : "Deletes vendor insurance by primary key",
        "operationId" : "deleteVendorInsurance",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistory/" : {
      "get" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Gets all voucher histories",
        "operationId" : "getsAllVoucher Histories",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VoucherHistory"
              }
            }
          }
        }
      }
    },
    "/AP/VoucherHistory/{APAcctKey}" : {
      "get" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Get voucher histories by apacctkey",
        "operationId" : "getsVoucherHistoriesByAPAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "APAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistory/{PaymentTermKey}" : {
      "get" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Get voucher histories by paymenttermkey",
        "operationId" : "getsVoucherHistoriesByPaymentTermKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PaymentTermKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistory/{VendorKey}" : {
      "get" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Get voucher histories by vendorkey",
        "operationId" : "getsVoucherHistoriesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistory/{VoucherHistory}" : {
      "post" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Adds a new voucher history",
        "operationId" : "addVoucherHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistory"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Updates a voucher history",
        "operationId" : "updateVoucherHistory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherHistory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistory"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherHistory",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VoucherHistory/{VoucherHistoryKey}" : {
      "get" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Gets voucher history by primary key",
        "operationId" : "getsVoucher HistoryByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistory"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Voucher Histories" ],
        "summary" : "Deletes voucher history by primary key",
        "operationId" : "deleteVoucherHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherRev/" : {
      "get" : {
        "tags" : [ "Voucher Revisions" ],
        "summary" : "Gets all voucher revisions",
        "operationId" : "getsAllVoucher Revisions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VoucherRev"
              }
            }
          }
        }
      }
    },
    "/AP/VoucherRev/{PeriodKey}" : {
      "get" : {
        "tags" : [ "Voucher Revisions" ],
        "summary" : "Get voucher revisions by periodkey",
        "operationId" : "getsVoucherRevisionsByPeriodKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherRev/{VoucherKey}" : {
      "get" : {
        "tags" : [ "Voucher Revisions" ],
        "summary" : "Get voucher revisions by voucherkey",
        "operationId" : "getsVoucherRevisionsByVoucherKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherRev/{VoucherRev}" : {
      "post" : {
        "tags" : [ "Voucher Revisions" ],
        "summary" : "Adds a new voucher revision",
        "operationId" : "addVoucherRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Voucher Revisions" ],
        "summary" : "Updates a voucher revision",
        "operationId" : "updateVoucherRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VoucherRev/{VoucherRevKey}" : {
      "get" : {
        "tags" : [ "Voucher Revisions" ],
        "summary" : "Gets voucher revision by primary key",
        "operationId" : "getsVoucher RevisionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Voucher Revisions" ],
        "summary" : "Deletes voucher revision by primary key",
        "operationId" : "deleteVoucherRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentEmployee/" : {
      "get" : {
        "tags" : [ "Document Employees" ],
        "summary" : "Gets all document employees",
        "operationId" : "getsAllDocument Employees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentEmployee"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentEmployee/{DocumentEmployee}" : {
      "post" : {
        "tags" : [ "Document Employees" ],
        "summary" : "Adds a new document employee",
        "operationId" : "addDocumentEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentEmployee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Employees" ],
        "summary" : "Updates a document employee",
        "operationId" : "updateDocumentEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentEmployee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentEmployee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentEmployee/{DocumentKey}/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Document Employees" ],
        "summary" : "Gets document employee by primary key",
        "operationId" : "getsDocument EmployeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentEmployee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Employees" ],
        "summary" : "Deletes document employee by primary key",
        "operationId" : "deleteDocumentEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/EMCls/" : {
      "get" : {
        "tags" : [ "EM Classifications" ],
        "summary" : "Gets all em classifications",
        "operationId" : "getsAllEM Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EMCls"
              }
            }
          }
        }
      }
    },
    "/SYS/EMCls/{EMClsKey}" : {
      "get" : {
        "tags" : [ "EM Classifications" ],
        "summary" : "Gets em classification by primary key",
        "operationId" : "getsEM ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EMCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/EMCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "EM Classifications" ],
        "summary" : "Finds em classifications by id or name",
        "operationId" : "getsAllEM Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EMCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmergencyContact/" : {
      "get" : {
        "tags" : [ "Emergency Contacts" ],
        "summary" : "Gets all emergency contacts",
        "operationId" : "getsAllEmergency Contacts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmergencyContact"
              }
            }
          }
        }
      }
    },
    "/HR/EmergencyContact/{ECKey}" : {
      "get" : {
        "tags" : [ "Emergency Contacts" ],
        "summary" : "Gets emergency contact by primary key",
        "operationId" : "getsEmergency ContactByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmergencyContact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Emergency Contacts" ],
        "summary" : "Deletes emergency contact by primary key",
        "operationId" : "deleteEmergencyContact",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ECKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmergencyContact/{EmergencyContact}" : {
      "post" : {
        "tags" : [ "Emergency Contacts" ],
        "summary" : "Adds a new emergency contact",
        "operationId" : "addEmergencyContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmergencyContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmergencyContact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Emergency Contacts" ],
        "summary" : "Updates a emergency contact",
        "operationId" : "updateEmergencyContact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmergencyContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmergencyContact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmergencyContact",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmergencyContact/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Emergency Contacts" ],
        "summary" : "Get emergency contacts by employeekey",
        "operationId" : "getsEmergencyContactsByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmergencyContact"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeSchedule/" : {
      "get" : {
        "tags" : [ "Employee Schedules" ],
        "summary" : "Gets all employee schedules",
        "operationId" : "getsAllEmployee Schedules",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeSchedule"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeSchedule/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Employee Schedules" ],
        "summary" : "Gets employee schedule by primary key",
        "operationId" : "getsEmployee ScheduleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeSchedule"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee Schedules" ],
        "summary" : "Deletes employee schedule by primary key",
        "operationId" : "deleteEmployeeSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeSchedule/{EmployeeSchedule}" : {
      "post" : {
        "tags" : [ "Employee Schedules" ],
        "summary" : "Adds a new employee schedule",
        "operationId" : "addEmployeeSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeSchedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeSchedule"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Employee Schedules" ],
        "summary" : "Updates a employee schedule",
        "operationId" : "updateEmployeeSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeSchedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeSchedule"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeSchedule",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/InvoicingProject/" : {
      "get" : {
        "tags" : [ "Invoicing Projects" ],
        "summary" : "Gets all invoicing projects",
        "operationId" : "getsAllInvoicing Projects",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoicingProject"
              }
            }
          }
        }
      }
    },
    "/IN/InvoicingProject/{InvoicingProject}" : {
      "post" : {
        "tags" : [ "Invoicing Projects" ],
        "summary" : "Adds a new invoicing project",
        "operationId" : "addInvoicingProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingProject"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProject"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoicing Projects" ],
        "summary" : "Updates a invoicing project",
        "operationId" : "updateInvoicingProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingProject"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProject"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoicingProject",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/InvoicingProject/{ProjectInfoKey}/{ProjectKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Invoicing Projects" ],
        "summary" : "Gets invoicing project by primary key",
        "operationId" : "getsInvoicing ProjectByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProject"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoicing Projects" ],
        "summary" : "Deletes invoicing project by primary key",
        "operationId" : "deleteInvoicingProject",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/LRCls/" : {
      "get" : {
        "tags" : [ "LR Classifications" ],
        "summary" : "Gets all lr classifications",
        "operationId" : "getsAllLR Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LRCls"
              }
            }
          }
        }
      }
    },
    "/SYS/LRCls/{LRClsKey}" : {
      "get" : {
        "tags" : [ "LR Classifications" ],
        "summary" : "Gets lr classification by primary key",
        "operationId" : "getsLR ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LRCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/LRCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "LR Classifications" ],
        "summary" : "Finds lr classifications by id or name",
        "operationId" : "getsAllLR Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LRCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/OTCls/" : {
      "get" : {
        "tags" : [ "OT Classifications" ],
        "summary" : "Gets all ot classifications",
        "operationId" : "getsAllOT Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OTCls"
              }
            }
          }
        }
      }
    },
    "/SYS/OTCls/{OTClsKey}" : {
      "get" : {
        "tags" : [ "OT Classifications" ],
        "summary" : "Gets ot classification by primary key",
        "operationId" : "getsOT ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/OTCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OTClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/OTCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "OT Classifications" ],
        "summary" : "Finds ot classifications by id or name",
        "operationId" : "getsAllOT Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OTCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYSTEM/Permission/" : {
      "get" : {
        "tags" : [ "System Permissions" ],
        "summary" : "Gets all system permissions",
        "operationId" : "getsAllSystem Permissions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Permission"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/Permission/{PermissionKey}" : {
      "get" : {
        "tags" : [ "System Permissions" ],
        "summary" : "Gets system permission by primary key",
        "operationId" : "getsSystem PermissionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Permission"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PermissionKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/Permission/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "System Permissions" ],
        "summary" : "Finds system permissions by id or name",
        "operationId" : "getsAllSystem Permissions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Permission"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/TSCls/" : {
      "get" : {
        "tags" : [ "TS Classifications" ],
        "summary" : "Gets all ts classifications",
        "operationId" : "getsAllTS Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSCls"
              }
            }
          }
        }
      }
    },
    "/SYS/TSCls/{TSClsKey}" : {
      "get" : {
        "tags" : [ "TS Classifications" ],
        "summary" : "Gets ts classification by primary key",
        "operationId" : "getsTS ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/TSCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "TS Classifications" ],
        "summary" : "Finds ts classifications by id or name",
        "operationId" : "getsAllTS Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeHistoryLine/" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Gets all time history lines",
        "operationId" : "getsAllTime History Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeHistoryLine"
              }
            }
          }
        }
      }
    },
    "/HR/TimeHistoryLine/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by activitykey",
        "operationId" : "getsTimeHistoryLinesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by billingmodclskey",
        "operationId" : "getsTimeHistoryLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by billstatusclskey",
        "operationId" : "getsTimeHistoryLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{EmployeeCenterKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by employeecenterkey",
        "operationId" : "getsTimeHistoryLinesByEmployeeCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeCenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by invoicekey",
        "operationId" : "getsTimeHistoryLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{OTClsKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by otclskey",
        "operationId" : "getsTimeHistoryLinesByOTClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OTClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{ProjectCenterKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by projectcenterkey",
        "operationId" : "getsTimeHistoryLinesByProjectCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectCenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by projectkey",
        "operationId" : "getsTimeHistoryLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{SLKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by slkey",
        "operationId" : "getsTimeHistoryLinesBySLKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{TimeHistoryKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Get time history lines by timehistorykey",
        "operationId" : "getsTimeHistoryLinesByTimeHistoryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeHistoryLine/{TimeHistoryLine}" : {
      "post" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Adds a new time history line",
        "operationId" : "addTimeHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Updates a time history line",
        "operationId" : "updateTimeHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeHistoryLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeHistoryLine/{TimeHistoryLineKey}" : {
      "get" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Gets time history line by primary key",
        "operationId" : "getsTime History LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeHistoryLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time History Lines" ],
        "summary" : "Deletes time history line by primary key",
        "operationId" : "deleteTimeHistoryLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeHistoryLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentProject/" : {
      "get" : {
        "tags" : [ "Adjustment Projects" ],
        "summary" : "Gets all adjustment projects",
        "operationId" : "getsAllAdjustment Projects",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AdjustmentProject"
              }
            }
          }
        }
      }
    },
    "/BI/AdjustmentProject/{AdjKey}" : {
      "get" : {
        "tags" : [ "Adjustment Projects" ],
        "summary" : "Get adjustment projects by adjkey",
        "operationId" : "getsAdjustmentProjectsByAdjKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentProject"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentProject/{AdjProjectKey}" : {
      "get" : {
        "tags" : [ "Adjustment Projects" ],
        "summary" : "Gets adjustment project by primary key",
        "operationId" : "getsAdjustment ProjectByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentProject"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Adjustment Projects" ],
        "summary" : "Deletes adjustment project by primary key",
        "operationId" : "deleteAdjustmentProject",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/BI/AdjustmentProject/{AdjustmentProject}" : {
      "post" : {
        "tags" : [ "Adjustment Projects" ],
        "summary" : "Adds a new adjustment project",
        "operationId" : "addAdjustmentProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdjustmentProject"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentProject"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Adjustment Projects" ],
        "summary" : "Updates a adjustment project",
        "operationId" : "updateAdjustmentProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdjustmentProject"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentProject"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AdjustmentProject",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/BI/AdjustmentProject/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Adjustment Projects" ],
        "summary" : "Get adjustment projects by projectinfokey",
        "operationId" : "getsAdjustmentProjectsByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentProject"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BTDCls/" : {
      "get" : {
        "tags" : [ "BTD Classifications" ],
        "summary" : "Gets all btd classifications",
        "operationId" : "getsAllBTD Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BTDCls"
              }
            }
          }
        }
      }
    },
    "/SYS/BTDCls/{BTDClsKey}" : {
      "get" : {
        "tags" : [ "BTD Classifications" ],
        "summary" : "Gets btd classification by primary key",
        "operationId" : "getsBTD ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BTDCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BTDClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BTDCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "BTD Classifications" ],
        "summary" : "Finds btd classifications by id or name",
        "operationId" : "getsAllBTD Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BTDCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentActivity/" : {
      "get" : {
        "tags" : [ "Document Activities" ],
        "summary" : "Gets all document activities",
        "operationId" : "getsAllDocument Activities",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentActivity"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentActivity/{ActivityKey}/{DocumentKey}" : {
      "get" : {
        "tags" : [ "Document Activities" ],
        "summary" : "Gets document activity by primary key",
        "operationId" : "getsDocument ActivityByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentActivity"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Activities" ],
        "summary" : "Deletes document activity by primary key",
        "operationId" : "deleteDocumentActivity",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentActivity/{DocumentActivity}" : {
      "post" : {
        "tags" : [ "Document Activities" ],
        "summary" : "Adds a new document activity",
        "operationId" : "addDocumentActivity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentActivity"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentActivity"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Activities" ],
        "summary" : "Updates a document activity",
        "operationId" : "updateDocumentActivity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentActivity"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentActivity"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentActivity",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseGroupLine/" : {
      "get" : {
        "tags" : [ "Expense Group Lines" ],
        "summary" : "Gets all expense group lines",
        "operationId" : "getsAllExpense Group Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseGroupLine"
              }
            }
          }
        }
      }
    },
    "/PA/ExpenseGroupLine/{ExpenseGroupLine}" : {
      "post" : {
        "tags" : [ "Expense Group Lines" ],
        "summary" : "Adds a new expense group line",
        "operationId" : "addExpenseGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroupLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Group Lines" ],
        "summary" : "Updates a expense group line",
        "operationId" : "updateExpenseGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseGroupLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseGroupLine/{ExpGroupKey}" : {
      "get" : {
        "tags" : [ "Expense Group Lines" ],
        "summary" : "Get expense group lines by expgroupkey",
        "operationId" : "getsExpenseGroupLinesByExpGroupKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseGroupLine/{ExpGroupLineKey}" : {
      "get" : {
        "tags" : [ "Expense Group Lines" ],
        "summary" : "Gets expense group line by primary key",
        "operationId" : "getsExpense Group LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroupLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Group Lines" ],
        "summary" : "Deletes expense group line by primary key",
        "operationId" : "deleteExpenseGroupLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpGroupLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseGroupLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Expense Group Lines" ],
        "summary" : "Get expense group lines by exptypekey",
        "operationId" : "getsExpenseGroupLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplier/" : {
      "get" : {
        "tags" : [ "Expense Multipliers" ],
        "summary" : "Gets all expense multipliers",
        "operationId" : "getsAllExpense Multipliers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseMultiplier"
              }
            }
          }
        }
      }
    },
    "/PA/ExpenseMultiplier/{EMClsKey}" : {
      "get" : {
        "tags" : [ "Expense Multipliers" ],
        "summary" : "Get expense multipliers by emclskey",
        "operationId" : "getsExpenseMultipliersByEMClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplier"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplier/{EMKey}" : {
      "get" : {
        "tags" : [ "Expense Multipliers" ],
        "summary" : "Gets expense multiplier by primary key",
        "operationId" : "getsExpense MultiplierByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplier"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Multipliers" ],
        "summary" : "Deletes expense multiplier by primary key",
        "operationId" : "deleteExpenseMultiplier",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplier/{ExpenseMultiplier}" : {
      "post" : {
        "tags" : [ "Expense Multipliers" ],
        "summary" : "Adds a new expense multiplier",
        "operationId" : "addExpenseMultiplier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseMultiplier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplier"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Multipliers" ],
        "summary" : "Updates a expense multiplier",
        "operationId" : "updateExpenseMultiplier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseMultiplier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplier"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseMultiplier",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseMultiplier/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Expense Multipliers" ],
        "summary" : "Finds expense multipliers by id or name",
        "operationId" : "getsAllExpense Multipliers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseMultiplier"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/FeeCls/" : {
      "get" : {
        "tags" : [ "Fee Classifications" ],
        "summary" : "Gets all fee classifications",
        "operationId" : "getsAllFee Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeeCls"
              }
            }
          }
        }
      }
    },
    "/SYS/FeeCls/{FeeClsKey}" : {
      "get" : {
        "tags" : [ "Fee Classifications" ],
        "summary" : "Gets fee classification by primary key",
        "operationId" : "getsFee ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/FeeCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/FeeCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Fee Classifications" ],
        "summary" : "Finds fee classifications by id or name",
        "operationId" : "getsAllFee Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FeeCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceGroupLine/" : {
      "get" : {
        "tags" : [ "Invoice Group Lines" ],
        "summary" : "Gets all invoice group lines",
        "operationId" : "getsAllInvoice Group Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceGroupLine"
              }
            }
          }
        }
      }
    },
    "/AR/InvoiceGroupLine/{InvoiceGroupKey}" : {
      "get" : {
        "tags" : [ "Invoice Group Lines" ],
        "summary" : "Get invoice group lines by invoicegroupkey",
        "operationId" : "getsInvoiceGroupLinesByInvoiceGroupKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceGroupLine/{InvoiceGroupLine}" : {
      "post" : {
        "tags" : [ "Invoice Group Lines" ],
        "summary" : "Adds a new invoice group line",
        "operationId" : "addInvoiceGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroupLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice Group Lines" ],
        "summary" : "Updates a invoice group line",
        "operationId" : "updateInvoiceGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceGroupLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceGroupLine/{InvoiceGroupLineKey}" : {
      "get" : {
        "tags" : [ "Invoice Group Lines" ],
        "summary" : "Gets invoice group line by primary key",
        "operationId" : "getsInvoice Group LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroupLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice Group Lines" ],
        "summary" : "Deletes invoice group line by primary key",
        "operationId" : "deleteInvoiceGroupLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceGroupLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceGroupLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Invoice Group Lines" ],
        "summary" : "Get invoice group lines by projectkey",
        "operationId" : "getsInvoiceGroupLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/JournalEntryCls/" : {
      "get" : {
        "tags" : [ "Journal Entry Clses" ],
        "summary" : "Gets all journal entry clses",
        "operationId" : "getsAllJournal Entry Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JournalEntryCls"
              }
            }
          }
        }
      }
    },
    "/USR/JournalEntryCls/{JEClsKey}" : {
      "get" : {
        "tags" : [ "Journal Entry Clses" ],
        "summary" : "Gets journal entry cls by primary key",
        "operationId" : "getsJournal Entry ClsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalEntryCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Journal Entry Clses" ],
        "summary" : "Deletes journal entry cls by primary key",
        "operationId" : "deleteJournalEntryCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JEClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/JournalEntryCls/{JournalEntryCls}" : {
      "post" : {
        "tags" : [ "Journal Entry Clses" ],
        "summary" : "Adds a new journal entry cls",
        "operationId" : "addJournalEntryCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalEntryCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalEntryCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Journal Entry Clses" ],
        "summary" : "Updates a journal entry cls",
        "operationId" : "updateJournalEntryCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JournalEntryCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalEntryCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalEntryCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/JournalEntryCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Journal Entry Clses" ],
        "summary" : "Finds journal entry clses by id or name",
        "operationId" : "getsAllJournal Entry Clses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JournalEntryCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/RptCls/" : {
      "get" : {
        "tags" : [ "Rpt Classifications" ],
        "summary" : "Gets all rpt classifications",
        "operationId" : "getsAllRpt Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RptCls"
              }
            }
          }
        }
      }
    },
    "/SYS/RptCls/{RptClsKey}" : {
      "get" : {
        "tags" : [ "Rpt Classifications" ],
        "summary" : "Gets rpt classification by primary key",
        "operationId" : "getsRpt ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RptCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RptClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/RptCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Rpt Classifications" ],
        "summary" : "Finds rpt classifications by id or name",
        "operationId" : "getsAllRpt Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RptCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SS/TSFormatEmployee/" : {
      "get" : {
        "tags" : [ "TS Format Employees" ],
        "summary" : "Gets all ts format employees",
        "operationId" : "getsAllTS Format Employees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSFormatEmployee"
              }
            }
          }
        }
      }
    },
    "/SS/TSFormatEmployee/{CenterInfoKey}/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "TS Format Employees" ],
        "summary" : "Gets ts format employee by primary key",
        "operationId" : "getsTS Format EmployeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormatEmployee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TS Format Employees" ],
        "summary" : "Deletes ts format employee by primary key",
        "operationId" : "deleteTSFormatEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SS/TSFormatEmployee/{TSFormatEmployee}" : {
      "post" : {
        "tags" : [ "TS Format Employees" ],
        "summary" : "Adds a new ts format employee",
        "operationId" : "addTSFormatEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSFormatEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormatEmployee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TS Format Employees" ],
        "summary" : "Updates a ts format employee",
        "operationId" : "updateTSFormatEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSFormatEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSFormatEmployee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSFormatEmployee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/1099Cls/" : {
      "get" : {
        "tags" : [ "1099 Classifications" ],
        "summary" : "Gets all 1099 classifications",
        "operationId" : "getsAll1099 Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/1099Cls"
              }
            }
          }
        }
      }
    },
    "/SYS/1099Cls/{1099ClsKey}" : {
      "get" : {
        "tags" : [ "1099 Classifications" ],
        "summary" : "Gets 1099 classification by primary key",
        "operationId" : "gets1099 ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/1099Cls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "1099ClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/1099Cls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "1099 Classifications" ],
        "summary" : "Finds 1099 classifications by id or name",
        "operationId" : "getsAll1099 Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/1099Cls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/AccountInfo/" : {
      "get" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Gets all account informations",
        "operationId" : "getsAllAccount Informations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountInfo"
              }
            }
          }
        }
      }
    },
    "/GA/AccountInfo/{AccountClsKey}" : {
      "get" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Get account informations by accountclskey",
        "operationId" : "getsAccountInformationsByAccountClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccountClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/AccountInfo/{AccountInfo}" : {
      "post" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Adds a new account information",
        "operationId" : "addAccountInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Updates a account information",
        "operationId" : "updateAccountInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccountInfo",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/AccountInfo/{AcctInfoKey}" : {
      "get" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Gets account information by primary key",
        "operationId" : "getsAccount InformationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Deletes account information by primary key",
        "operationId" : "deleteAccountInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/AccountInfo/{FinancialClsKey}" : {
      "get" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Get account informations by financialclskey",
        "operationId" : "getsAccountInformationsByFinancialClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FinancialClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/AccountInfo/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Get account informations by revenueclskey",
        "operationId" : "getsAccountInformationsByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/AccountInfo/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Get account informations by statusclskey",
        "operationId" : "getsAccountInformationsByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/AccountInfo/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Account Informations" ],
        "summary" : "Finds account informations by id or name",
        "operationId" : "getsAllAccount Informations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountInfo"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ActivityGroupLine/" : {
      "get" : {
        "tags" : [ "Activity Group Lines" ],
        "summary" : "Gets all activity group lines",
        "operationId" : "getsAllActivity Group Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityGroupLine"
              }
            }
          }
        }
      }
    },
    "/PA/ActivityGroupLine/{ActGroupKey}" : {
      "get" : {
        "tags" : [ "Activity Group Lines" ],
        "summary" : "Get activity group lines by actgroupkey",
        "operationId" : "getsActivityGroupLinesByActGroupKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ActivityGroupLine/{ActGroupLineKey}" : {
      "get" : {
        "tags" : [ "Activity Group Lines" ],
        "summary" : "Gets activity group line by primary key",
        "operationId" : "getsActivity Group LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroupLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity Group Lines" ],
        "summary" : "Deletes activity group line by primary key",
        "operationId" : "deleteActivityGroupLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActGroupLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ActivityGroupLine/{ActivityGroupLine}" : {
      "post" : {
        "tags" : [ "Activity Group Lines" ],
        "summary" : "Adds a new activity group line",
        "operationId" : "addActivityGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroupLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Activity Group Lines" ],
        "summary" : "Updates a activity group line",
        "operationId" : "updateActivityGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityGroupLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ActivityGroupLine/{ActivityKey}" : {
      "get" : {
        "tags" : [ "Activity Group Lines" ],
        "summary" : "Get activity group lines by activitykey",
        "operationId" : "getsActivityGroupLinesByActivityKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/ChangeBillStatus/" : {
      "get" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Gets all change bill statuses",
        "operationId" : "getsAllChange Bill Statuses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ChangeBillStatus"
              }
            }
          }
        }
      }
    },
    "/UTL/ChangeBillStatus/{ChangeBillStatus}" : {
      "post" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Adds a new change bill status",
        "operationId" : "addChangeBillStatus",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeBillStatus"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Updates a change bill status",
        "operationId" : "updateChangeBillStatus",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeBillStatus"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatus"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ChangeBillStatus",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/ChangeBillStatus/{FromBillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Get change bill statuses by frombillstatusclskey",
        "operationId" : "getsChangeBillStatusesByFromBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatus"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FromBillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/ChangeBillStatus/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Get change bill statuses by projectinfokey",
        "operationId" : "getsChangeBillStatusesByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatus"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/ChangeBillStatus/{ToBillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Get change bill statuses by tobillstatusclskey",
        "operationId" : "getsChangeBillStatusesByToBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatus"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ToBillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/ChangeBillStatus/{UserKey}" : {
      "get" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Gets change bill status by primary key",
        "operationId" : "getsChange Bill StatusByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Change Bill Statuses" ],
        "summary" : "Deletes change bill status by primary key",
        "operationId" : "deleteChangeBillStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Gets all check  history lines",
        "operationId" : "getsAllCheck  History Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckHistoryLine"
              }
            }
          }
        }
      }
    },
    "/AP/CheckHistoryLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by acctkey",
        "operationId" : "getsCheckHistoryLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by billingmodclskey",
        "operationId" : "getsCheckHistoryLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by billstatusclskey",
        "operationId" : "getsCheckHistoryLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{CheckHistoryKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by checkhistorykey",
        "operationId" : "getsCheckHistoryLinesByCheckHistoryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{CheckHistoryLine}" : {
      "post" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Adds a new check  history line",
        "operationId" : "addCheckHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Updates a check  history line",
        "operationId" : "updateCheckHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckHistoryLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/CheckHistoryLine/{CheckHistoryLineKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Gets check  history line by primary key",
        "operationId" : "getsCheck  History LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Deletes check  history line by primary key",
        "operationId" : "deleteCheckHistoryLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckHistoryLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by exptypekey",
        "operationId" : "getsCheckHistoryLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by invoicekey",
        "operationId" : "getsCheckHistoryLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by lineclskey",
        "operationId" : "getsCheckHistoryLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by periodid",
        "operationId" : "getsCheckHistoryLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/CheckHistoryLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Check  History Lines" ],
        "summary" : "Get check  history lines by projectkey",
        "operationId" : "getsCheckHistoryLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseCommentTag/" : {
      "get" : {
        "tags" : [ "Expense Comment Tags" ],
        "summary" : "Gets all expense comment tags",
        "operationId" : "getsAllExpense Comment Tags",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseCommentTag"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseCommentTag/{ECKey}/{TagKey}" : {
      "get" : {
        "tags" : [ "Expense Comment Tags" ],
        "summary" : "Gets expense comment tag by primary key",
        "operationId" : "getsExpense Comment TagByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseCommentTag"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Comment Tags" ],
        "summary" : "Deletes expense comment tag by primary key",
        "operationId" : "deleteExpenseCommentTag",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ECKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "TagKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseCommentTag/{ExpenseCommentTag}" : {
      "post" : {
        "tags" : [ "Expense Comment Tags" ],
        "summary" : "Adds a new expense comment tag",
        "operationId" : "addExpenseCommentTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseCommentTag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseCommentTag"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Comment Tags" ],
        "summary" : "Updates a expense comment tag",
        "operationId" : "updateExpenseCommentTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseCommentTag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseCommentTag"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseCommentTag",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/GiftCls/" : {
      "get" : {
        "tags" : [ "Gift Classifications" ],
        "summary" : "Gets all gift classifications",
        "operationId" : "getsAllGift Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GiftCls"
              }
            }
          }
        }
      }
    },
    "/USR/GiftCls/{GiftCls}" : {
      "post" : {
        "tags" : [ "Gift Classifications" ],
        "summary" : "Adds a new gift classification",
        "operationId" : "addGiftCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GiftCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GiftCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Gift Classifications" ],
        "summary" : "Updates a gift classification",
        "operationId" : "updateGiftCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GiftCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GiftCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GiftCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/GiftCls/{GiftClsKey}" : {
      "get" : {
        "tags" : [ "Gift Classifications" ],
        "summary" : "Gets gift classification by primary key",
        "operationId" : "getsGift ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GiftCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Gift Classifications" ],
        "summary" : "Deletes gift classification by primary key",
        "operationId" : "deleteGiftCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GiftClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/GiftCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Gift Classifications" ],
        "summary" : "Finds gift classifications by id or name",
        "operationId" : "getsAllGift Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GiftCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/LaborPostingGroup/" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Gets all labor posting groups",
        "operationId" : "getsAllLabor Posting Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborPostingGroup"
              }
            }
          }
        }
      }
    },
    "/HR/LaborPostingGroup/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Get labor posting groups by centerinfokey",
        "operationId" : "getsLaborPostingGroupsByCenterInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/LaborPostingGroup/{DLAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Get labor posting groups by dlacctinfokey",
        "operationId" : "getsLaborPostingGroupsByDLAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DLAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/LaborPostingGroup/{DLOwnerAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Get labor posting groups by dlowneracctinfokey",
        "operationId" : "getsLaborPostingGroupsByDLOwnerAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DLOwnerAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/LaborPostingGroup/{LaborPostingGroup}" : {
      "post" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Adds a new labor posting group",
        "operationId" : "addLaborPostingGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborPostingGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Updates a labor posting group",
        "operationId" : "updateLaborPostingGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborPostingGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborPostingGroup",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/LaborPostingGroup/{LPGroupKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Gets labor posting group by primary key",
        "operationId" : "getsLabor Posting GroupByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Deletes labor posting group by primary key",
        "operationId" : "deleteLaborPostingGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LPGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/LaborPostingGroup/{OHAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Get labor posting groups by ohacctinfokey",
        "operationId" : "getsLaborPostingGroupsByOHAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/LaborPostingGroup/{OHOwnerAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Get labor posting groups by ohowneracctinfokey",
        "operationId" : "getsLaborPostingGroupsByOHOwnerAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroup"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHOwnerAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/LaborPostingGroup/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Labor Posting Groups" ],
        "summary" : "Finds labor posting groups by id or name",
        "operationId" : "getsAllLabor Posting Groups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborPostingGroup"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/LineCls/" : {
      "get" : {
        "tags" : [ "Line Classifications" ],
        "summary" : "Gets all line classifications",
        "operationId" : "getsAllLine Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LineCls"
              }
            }
          }
        }
      }
    },
    "/SYS/LineCls/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Line Classifications" ],
        "summary" : "Gets line classification by primary key",
        "operationId" : "getsLine ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LineCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/LineCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Line Classifications" ],
        "summary" : "Finds line classifications by id or name",
        "operationId" : "getsAllLine Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LineCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectInfo/" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Gets all project informations",
        "operationId" : "getsAllProject Informations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectInfo"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectInfo/{ActGroupKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by actgroupkey",
        "operationId" : "getsProjectInformationsByActGroupKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{BillAddressKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by billaddresskey",
        "operationId" : "getsProjectInformationsByBillAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillAddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{BillContactKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by billcontactkey",
        "operationId" : "getsProjectInformationsByBillContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{BillCycleClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by billcycleclskey",
        "operationId" : "getsProjectInformationsByBillCycleClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillCycleClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{BillEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by billemployeekey",
        "operationId" : "getsProjectInformationsByBillEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{BillTermKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by billtermkey",
        "operationId" : "getsProjectInformationsByBillTermKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillTermKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{CenterKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by centerkey",
        "operationId" : "getsProjectInformationsByCenterKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ClientKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by clientkey",
        "operationId" : "getsProjectInformationsByClientKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ContactKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by contactkey",
        "operationId" : "getsProjectInformationsByContactKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ContactKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ExpBudgetMsgClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by expbudgetmsgclskey",
        "operationId" : "getsProjectInformationsByExpBudgetMsgClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpBudgetMsgClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ExpGroupKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by expgroupkey",
        "operationId" : "getsProjectInformationsByExpGroupKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{FeeClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by feeclskey",
        "operationId" : "getsProjectInformationsByFeeClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{LaborBudgetMsgClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by laborbudgetmsgclskey",
        "operationId" : "getsProjectInformationsByLaborBudgetMsgClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborBudgetMsgClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{MarketClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by marketclskey",
        "operationId" : "getsProjectInformationsByMarketClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "MarketClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{MktgEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by mktgemployeekey",
        "operationId" : "getsProjectInformationsByMktgEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "MktgEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{PAEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by paemployeekey",
        "operationId" : "getsProjectInformationsByPAEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PAEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{PayAddressKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by payaddresskey",
        "operationId" : "getsProjectInformationsByPayAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayAddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{PayEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by payemployeekey",
        "operationId" : "getsProjectInformationsByPayEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{PayOfficeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by payofficekey",
        "operationId" : "getsProjectInformationsByPayOfficeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayOfficeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{PMEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by pmemployeekey",
        "operationId" : "getsProjectInformationsByPMEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PMEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{PrinEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by prinemployeekey",
        "operationId" : "getsProjectInformationsByPrinEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PrinEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ProjectClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by projectclskey",
        "operationId" : "getsProjectInformationsByProjectClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ProjectCurrencyKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by projectcurrencykey",
        "operationId" : "getsProjectInformationsByProjectCurrencyKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectCurrencyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ProjectInfo}" : {
      "post" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Adds a new project information",
        "operationId" : "addProjectInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Updates a project information",
        "operationId" : "updateProjectInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfo",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectInfo/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Gets project information by primary key",
        "operationId" : "getsProject InformationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Deletes project information by primary key",
        "operationId" : "deleteProjectInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{ProjectStatusClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by projectstatusclskey",
        "operationId" : "getsProjectInformationsByProjectStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{QualityClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by qualityclskey",
        "operationId" : "getsProjectInformationsByQualityClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "QualityClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{RetainageClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by retainageclskey",
        "operationId" : "getsProjectInformationsByRetainageClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RetainageClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{SaleEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by saleemployeekey",
        "operationId" : "getsProjectInformationsBySaleEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SaleEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{SourceClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by sourceclskey",
        "operationId" : "getsProjectInformationsBySourceClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SourceClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{StageClsKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by stageclskey",
        "operationId" : "getsProjectInformationsByStageClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StageClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfo/{SupEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Informations" ],
        "summary" : "Get project informations by supemployeekey",
        "operationId" : "getsProjectInformationsBySupEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SupEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/RateCls/" : {
      "get" : {
        "tags" : [ "Rate Classifications" ],
        "summary" : "Gets all rate classifications",
        "operationId" : "getsAllRate Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RateCls"
              }
            }
          }
        }
      }
    },
    "/SYS/RateCls/{RateClsKey}" : {
      "get" : {
        "tags" : [ "Rate Classifications" ],
        "summary" : "Gets rate classification by primary key",
        "operationId" : "getsRate ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RateCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RateClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/RateCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Rate Classifications" ],
        "summary" : "Finds rate classifications by id or name",
        "operationId" : "getsAllRate Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RateCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeLineRejection/" : {
      "get" : {
        "tags" : [ "Time Line Rejections" ],
        "summary" : "Gets all time line rejections",
        "operationId" : "getsAllTime Line Rejections",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeLineRejection"
              }
            }
          }
        }
      }
    },
    "/HR/TimeLineRejection/{TimeLineKey}" : {
      "get" : {
        "tags" : [ "Time Line Rejections" ],
        "summary" : "Get time line rejections by timelinekey",
        "operationId" : "getsTimeLineRejectionsByTimeLineKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineRejection"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/TimeLineRejection/{TimeLineRejection}" : {
      "post" : {
        "tags" : [ "Time Line Rejections" ],
        "summary" : "Adds a new time line rejection",
        "operationId" : "addTimeLineRejection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeLineRejection"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineRejection"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Time Line Rejections" ],
        "summary" : "Updates a time line rejection",
        "operationId" : "updateTimeLineRejection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeLineRejection"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineRejection"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TimeLineRejection",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/TimeLineRejection/{TLRKey}" : {
      "get" : {
        "tags" : [ "Time Line Rejections" ],
        "summary" : "Gets time line rejection by primary key",
        "operationId" : "getsTime Line RejectionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TimeLineRejection"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Time Line Rejections" ],
        "summary" : "Deletes time line rejection by primary key",
        "operationId" : "deleteTimeLineRejection",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/AccrualHistoryLine/" : {
      "get" : {
        "tags" : [ "Accrual History Lines" ],
        "summary" : "Gets all accrual history lines",
        "operationId" : "getsAllAccrual History Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccrualHistoryLine"
              }
            }
          }
        }
      }
    },
    "/HR/AccrualHistoryLine/{AccrualHistoryLine}" : {
      "post" : {
        "tags" : [ "Accrual History Lines" ],
        "summary" : "Adds a new accrual history line",
        "operationId" : "addAccrualHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistoryLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Accrual History Lines" ],
        "summary" : "Updates a accrual history line",
        "operationId" : "updateAccrualHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccrualHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccrualHistoryLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/AccrualHistoryLine/{AHKey}" : {
      "get" : {
        "tags" : [ "Accrual History Lines" ],
        "summary" : "Get accrual history lines by ahkey",
        "operationId" : "getsAccrualHistoryLinesByAHKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AHKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/AccrualHistoryLine/{AHLineKey}" : {
      "get" : {
        "tags" : [ "Accrual History Lines" ],
        "summary" : "Gets accrual history line by primary key",
        "operationId" : "getsAccrual History LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistoryLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Accrual History Lines" ],
        "summary" : "Deletes accrual history line by primary key",
        "operationId" : "deleteAccrualHistoryLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AHLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/AccrualHistoryLine/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Accrual History Lines" ],
        "summary" : "Get accrual history lines by employeekey",
        "operationId" : "getsAccrualHistoryLinesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccrualHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAutoCheckPost/" : {
      "get" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Gets all automatic check posts",
        "operationId" : "getsAllAutomatic Check Posts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorAutoCheckPost"
              }
            }
          }
        }
      }
    },
    "/AP/VendorAutoCheckPost/{AcctKey}/{BankAcctKey}/{UserKey}/{VendorKey}/{VoucherID}" : {
      "get" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Gets automatic check post by primary key",
        "operationId" : "getsAutomatic Check PostByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheckPost"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Deletes automatic check post by primary key",
        "operationId" : "deleteVendorAutoCheckPost",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "VoucherID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAutoCheckPost/{VendorAutoCheckPost}" : {
      "post" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Adds a new automatic check post",
        "operationId" : "addVendorAutoCheckPost",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAutoCheckPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheckPost"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Updates a automatic check post",
        "operationId" : "updateVendorAutoCheckPost",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAutoCheckPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheckPost"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorAutoCheckPost",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeAutoCheckPost/" : {
      "get" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Gets all automatic check posts",
        "operationId" : "getsAllAutomatic Check Posts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeAutoCheckPost"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeAutoCheckPost/{AcctKey}/{BankAcctKey}/{EmployeeKey}/{ExpID}/{UserKey}" : {
      "get" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Gets automatic check post by primary key",
        "operationId" : "getsAutomatic Check PostByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheckPost"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Deletes automatic check post by primary key",
        "operationId" : "deleteEmployeeAutoCheckPost",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeAutoCheckPost/{EmployeeAutoCheckPost}" : {
      "post" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Adds a new automatic check post",
        "operationId" : "addEmployeeAutoCheckPost",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAutoCheckPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheckPost"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Automatic Check Posts" ],
        "summary" : "Updates a automatic check post",
        "operationId" : "updateEmployeeAutoCheckPost",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAutoCheckPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheckPost"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeAutoCheckPost",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/CheckCls/" : {
      "get" : {
        "tags" : [ "Check Classifications" ],
        "summary" : "Gets all check classifications",
        "operationId" : "getsAllCheck Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckCls"
              }
            }
          }
        }
      }
    },
    "/SYS/CheckCls/{CheckClsKey}" : {
      "get" : {
        "tags" : [ "Check Classifications" ],
        "summary" : "Gets check classification by primary key",
        "operationId" : "getsCheck ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CheckCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/CheckCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Check Classifications" ],
        "summary" : "Finds check classifications by id or name",
        "operationId" : "getsAllCheck Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CheckCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/EventCls/" : {
      "get" : {
        "tags" : [ "Event Classifications" ],
        "summary" : "Gets all event classifications",
        "operationId" : "getsAllEvent Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EventCls"
              }
            }
          }
        }
      }
    },
    "/USR/EventCls/{EventCls}" : {
      "post" : {
        "tags" : [ "Event Classifications" ],
        "summary" : "Adds a new event classification",
        "operationId" : "addEventCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EventCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EventCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Event Classifications" ],
        "summary" : "Updates a event classification",
        "operationId" : "updateEventCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EventCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EventCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EventCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/EventCls/{EventClsKey}" : {
      "get" : {
        "tags" : [ "Event Classifications" ],
        "summary" : "Gets event classification by primary key",
        "operationId" : "getsEvent ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EventCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Event Classifications" ],
        "summary" : "Deletes event classification by primary key",
        "operationId" : "deleteEventCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EventClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/EventCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Event Classifications" ],
        "summary" : "Finds event classifications by id or name",
        "operationId" : "getsAllEvent Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EventCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseHistoryLine/" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Gets all expense history lines",
        "operationId" : "getsAllExpense History Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseHistoryLine"
              }
            }
          }
        }
      }
    },
    "/HR/ExpenseHistoryLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by acctkey",
        "operationId" : "getsExpenseHistoryLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by billingmodclskey",
        "operationId" : "getsExpenseHistoryLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by billstatusclskey",
        "operationId" : "getsExpenseHistoryLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{ExpenseHistoryLine}" : {
      "post" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Adds a new expense history line",
        "operationId" : "addExpenseHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Updates a expense history line",
        "operationId" : "updateExpenseHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseHistoryLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/ExpenseHistoryLine/{ExpHistoryKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by exphistorykey",
        "operationId" : "getsExpenseHistoryLinesByExpHistoryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{ExpHistoryLineKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Gets expense history line by primary key",
        "operationId" : "getsExpense History LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Deletes expense history line by primary key",
        "operationId" : "deleteExpenseHistoryLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpHistoryLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by exptypekey",
        "operationId" : "getsExpenseHistoryLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by invoicekey",
        "operationId" : "getsExpenseHistoryLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by lineclskey",
        "operationId" : "getsExpenseHistoryLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/ExpenseHistoryLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Expense History Lines" ],
        "summary" : "Get expense history lines by projectkey",
        "operationId" : "getsExpenseHistoryLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Gets all invoice history lines",
        "operationId" : "getsAllInvoice History Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoiceHistoryLine"
              }
            }
          }
        }
      }
    },
    "/AR/InvoiceHistoryLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Get invoice history lines by acctkey",
        "operationId" : "getsInvoiceHistoryLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/{BilledProjectKey}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Get invoice history lines by billedprojectkey",
        "operationId" : "getsInvoiceHistoryLinesByBilledProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BilledProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/{InvoiceHistoryKey}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Get invoice history lines by invoicehistorykey",
        "operationId" : "getsInvoiceHistoryLinesByInvoiceHistoryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/{InvoiceHistoryLine}" : {
      "post" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Adds a new invoice history line",
        "operationId" : "addInvoiceHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Updates a invoice history line",
        "operationId" : "updateInvoiceHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoiceHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceHistoryLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/InvoiceHistoryLine/{InvoiceHistoryLineKey}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Gets invoice history line by primary key",
        "operationId" : "getsInvoice History LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Deletes invoice history line by primary key",
        "operationId" : "deleteInvoiceHistoryLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceHistoryLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Get invoice history lines by lineclskey",
        "operationId" : "getsInvoiceHistoryLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Get invoice history lines by periodid",
        "operationId" : "getsInvoiceHistoryLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Get invoice history lines by projectkey",
        "operationId" : "getsInvoiceHistoryLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/InvoiceHistoryLine/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Invoice History Lines" ],
        "summary" : "Get invoice history lines by revenueclskey",
        "operationId" : "getsInvoiceHistoryLinesByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoiceHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectCO/" : {
      "get" : {
        "tags" : [ "Project Change Orders" ],
        "summary" : "Gets all project change orders",
        "operationId" : "getsAllProject Change Orders",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectCO"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectCO/{COKey}" : {
      "get" : {
        "tags" : [ "Project Change Orders" ],
        "summary" : "Gets project change order by primary key",
        "operationId" : "getsProject Change OrderByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Change Orders" ],
        "summary" : "Deletes project change order by primary key",
        "operationId" : "deleteProjectCO",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "COKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectCO/{ProjectCO}" : {
      "post" : {
        "tags" : [ "Project Change Orders" ],
        "summary" : "Adds a new project change order",
        "operationId" : "addProjectCO",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectCO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Change Orders" ],
        "summary" : "Updates a project change order",
        "operationId" : "updateProjectCO",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectCO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCO"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectCO",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectCO/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Project Change Orders" ],
        "summary" : "Get project change orders by projectinfokey",
        "operationId" : "getsProjectChangeOrdersByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCO"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpenseLine/" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Gets all project expense lines",
        "operationId" : "getsAllProject Expense Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectExpenseLine"
              }
            }
          }
        }
      }
    },
    "/PM/ProjectExpenseLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Get project expense lines by billingmodclskey",
        "operationId" : "getsProjectExpenseLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpenseLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Get project expense lines by billstatusclskey",
        "operationId" : "getsProjectExpenseLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpenseLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Get project expense lines by exptypekey",
        "operationId" : "getsProjectExpenseLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpenseLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Get project expense lines by invoicekey",
        "operationId" : "getsProjectExpenseLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpenseLine/{PEKey}" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Get project expense lines by pekey",
        "operationId" : "getsProjectExpenseLinesByPEKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PEKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpenseLine/{PELineKey}" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Gets project expense line by primary key",
        "operationId" : "getsProject Expense LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Deletes project expense line by primary key",
        "operationId" : "deleteProjectExpenseLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PELineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PM/ProjectExpenseLine/{ProjectExpenseLine}" : {
      "post" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Adds a new project expense line",
        "operationId" : "addProjectExpenseLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectExpenseLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Updates a project expense line",
        "operationId" : "updateProjectExpenseLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectExpenseLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectExpenseLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PM/ProjectExpenseLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Project Expense Lines" ],
        "summary" : "Get project expense lines by projectkey",
        "operationId" : "getsProjectExpenseLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectExpenseLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistoryLine/" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Gets all receipt history lines",
        "operationId" : "getsAllReceipt History Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptHistoryLine"
              }
            }
          }
        }
      }
    },
    "/AR/ReceiptHistoryLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Get receipt history lines by acctkey",
        "operationId" : "getsReceiptHistoryLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistoryLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Get receipt history lines by lineclskey",
        "operationId" : "getsReceiptHistoryLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistoryLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Get receipt history lines by periodid",
        "operationId" : "getsReceiptHistoryLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistoryLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Get receipt history lines by projectkey",
        "operationId" : "getsReceiptHistoryLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistoryLine/{ReceiptHistoryKey}" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Get receipt history lines by receipthistorykey",
        "operationId" : "getsReceiptHistoryLinesByReceiptHistoryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistoryLine/{ReceiptHistoryLine}" : {
      "post" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Adds a new receipt history line",
        "operationId" : "addReceiptHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Updates a receipt history line",
        "operationId" : "updateReceiptHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReceiptHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptHistoryLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AR/ReceiptHistoryLine/{ReceiptHistoryLineKey}" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Gets receipt history line by primary key",
        "operationId" : "getsReceipt History LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Deletes receipt history line by primary key",
        "operationId" : "deleteReceiptHistoryLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptHistoryLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AR/ReceiptHistoryLine/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Receipt History Lines" ],
        "summary" : "Get receipt history lines by revenueclskey",
        "operationId" : "getsReceiptHistoryLinesByRevenueClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/ExceptionLog/" : {
      "get" : {
        "tags" : [ "System Exception Logs" ],
        "summary" : "Gets all system exception logs",
        "operationId" : "getsAllSystem Exception Logs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExceptionLog"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/ExceptionLog/{LogKey}" : {
      "get" : {
        "tags" : [ "System Exception Logs" ],
        "summary" : "Gets system exception log by primary key",
        "operationId" : "getsSystem Exception LogByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExceptionLog"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LogKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYSTEM/SearchColumn/" : {
      "get" : {
        "tags" : [ "System Search Columns" ],
        "summary" : "Gets all system search columns",
        "operationId" : "getsAllSystem Search Columns",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SearchColumn"
              }
            }
          }
        }
      }
    },
    "/SYSTEM/SearchColumn/{ColumnName}/{SearchClsKey}" : {
      "get" : {
        "tags" : [ "System Search Columns" ],
        "summary" : "Gets system search column by primary key",
        "operationId" : "getsSystem Search ColumnByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SearchColumn"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ColumnName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "SearchClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Gets all voucher history lines",
        "operationId" : "getsAllVoucher History Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VoucherHistoryLine"
              }
            }
          }
        }
      }
    },
    "/AP/VoucherHistoryLine/{AcctKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by acctkey",
        "operationId" : "getsVoucherHistoryLinesByAcctKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by billingmodclskey",
        "operationId" : "getsVoucherHistoryLinesByBillingModClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by billstatusclskey",
        "operationId" : "getsVoucherHistoryLinesByBillStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by exptypekey",
        "operationId" : "getsVoucherHistoryLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{InvoiceKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by invoicekey",
        "operationId" : "getsVoucherHistoryLinesByInvoiceKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoiceKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{LineClsKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by lineclskey",
        "operationId" : "getsVoucherHistoryLinesByLineClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{PeriodID}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by periodid",
        "operationId" : "getsVoucherHistoryLinesByPeriodID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodID",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by projectkey",
        "operationId" : "getsVoucherHistoryLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{VoucherHistoryKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Get voucher history lines by voucherhistorykey",
        "operationId" : "getsVoucherHistoryLinesByVoucherHistoryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherHistoryKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VoucherHistoryLine/{VoucherHistoryLine}" : {
      "post" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Adds a new voucher history line",
        "operationId" : "addVoucherHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Updates a voucher history line",
        "operationId" : "updateVoucherHistoryLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoucherHistoryLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherHistoryLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VoucherHistoryLine/{VoucherHistoryLineKey}" : {
      "get" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Gets voucher history line by primary key",
        "operationId" : "getsVoucher History LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VoucherHistoryLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Voucher History Lines" ],
        "summary" : "Deletes voucher history line by primary key",
        "operationId" : "deleteVoucherHistoryLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VoucherHistoryLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/ClientCls/" : {
      "get" : {
        "tags" : [ "Client Classifications" ],
        "summary" : "Gets all client classifications",
        "operationId" : "getsAllClient Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClientCls"
              }
            }
          }
        }
      }
    },
    "/USR/ClientCls/{ClientCls}" : {
      "post" : {
        "tags" : [ "Client Classifications" ],
        "summary" : "Adds a new client classification",
        "operationId" : "addClientCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClientCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Client Classifications" ],
        "summary" : "Updates a client classification",
        "operationId" : "updateClientCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClientCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/ClientCls/{ClientClsKey}" : {
      "get" : {
        "tags" : [ "Client Classifications" ],
        "summary" : "Gets client classification by primary key",
        "operationId" : "getsClient ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Client Classifications" ],
        "summary" : "Deletes client classification by primary key",
        "operationId" : "deleteClientCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/ClientCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Client Classifications" ],
        "summary" : "Finds client classifications by id or name",
        "operationId" : "getsAllClient Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClientCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentEmployeePay/" : {
      "get" : {
        "tags" : [ "Document Employee Pays" ],
        "summary" : "Gets all document employee pays",
        "operationId" : "getsAllDocument Employee Pays",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentEmployeePay"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentEmployeePay/{DocumentEmployeePay}" : {
      "post" : {
        "tags" : [ "Document Employee Pays" ],
        "summary" : "Adds a new document employee pay",
        "operationId" : "addDocumentEmployeePay",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentEmployeePay"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentEmployeePay"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Employee Pays" ],
        "summary" : "Updates a document employee pay",
        "operationId" : "updateDocumentEmployeePay",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentEmployeePay"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentEmployeePay"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentEmployeePay",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentEmployeePay/{DocumentKey}/{PayKey}" : {
      "get" : {
        "tags" : [ "Document Employee Pays" ],
        "summary" : "Gets document employee pay by primary key",
        "operationId" : "getsDocument Employee PayByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentEmployeePay"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Employee Pays" ],
        "summary" : "Deletes document employee pay by primary key",
        "operationId" : "deleteDocumentEmployeePay",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/DM/DocumentExpLine/" : {
      "get" : {
        "tags" : [ "Document Expense Lines" ],
        "summary" : "Gets all document expense lines",
        "operationId" : "getsAllDocument Expense Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentExpLine"
              }
            }
          }
        }
      }
    },
    "/DM/DocumentExpLine/{DocumentExpLine}" : {
      "post" : {
        "tags" : [ "Document Expense Lines" ],
        "summary" : "Adds a new document expense line",
        "operationId" : "addDocumentExpLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentExpLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentExpLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Document Expense Lines" ],
        "summary" : "Updates a document expense line",
        "operationId" : "updateDocumentExpLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentExpLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentExpLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DocumentExpLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/DM/DocumentExpLine/{DocumentKey}/{ExpLineKey}" : {
      "get" : {
        "tags" : [ "Document Expense Lines" ],
        "summary" : "Gets document expense line by primary key",
        "operationId" : "getsDocument Expense LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/DocumentExpLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Document Expense Lines" ],
        "summary" : "Deletes document expense line by primary key",
        "operationId" : "deleteDocumentExpLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "DocumentKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/EthnicCls/" : {
      "get" : {
        "tags" : [ "Ethnic Classifications" ],
        "summary" : "Gets all ethnic classifications",
        "operationId" : "getsAllEthnic Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EthnicCls"
              }
            }
          }
        }
      }
    },
    "/SYS/EthnicCls/{EthnicClsKey}" : {
      "get" : {
        "tags" : [ "Ethnic Classifications" ],
        "summary" : "Gets ethnic classification by primary key",
        "operationId" : "getsEthnic ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EthnicCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EthnicClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/EthnicCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Ethnic Classifications" ],
        "summary" : "Finds ethnic classifications by id or name",
        "operationId" : "getsAllEthnic Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EthnicCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/GenderCls/" : {
      "get" : {
        "tags" : [ "Gender Classifications" ],
        "summary" : "Gets all gender classifications",
        "operationId" : "getsAllGender Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GenderCls"
              }
            }
          }
        }
      }
    },
    "/SYS/GenderCls/{GenderClsKey}" : {
      "get" : {
        "tags" : [ "Gender Classifications" ],
        "summary" : "Gets gender classification by primary key",
        "operationId" : "getsGender ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/GenderCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "GenderClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/GenderCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Gender Classifications" ],
        "summary" : "Finds gender classifications by id or name",
        "operationId" : "getsAllGender Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GenderCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/InvoicingProjectFee/" : {
      "get" : {
        "tags" : [ "Invoicing Project Fees" ],
        "summary" : "Gets all invoicing project fees",
        "operationId" : "getsAllInvoicing Project Fees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoicingProjectFee"
              }
            }
          }
        }
      }
    },
    "/IN/InvoicingProjectFee/{InvoicingProjectFee}" : {
      "post" : {
        "tags" : [ "Invoicing Project Fees" ],
        "summary" : "Adds a new invoicing project fee",
        "operationId" : "addInvoicingProjectFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingProjectFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProjectFee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoicing Project Fees" ],
        "summary" : "Updates a invoicing project fee",
        "operationId" : "updateInvoicingProjectFee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingProjectFee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProjectFee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoicingProjectFee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/IN/InvoicingProjectFee/{ProjectInfoKey}/{ProjectKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Invoicing Project Fees" ],
        "summary" : "Gets invoicing project fee by primary key",
        "operationId" : "getsInvoicing Project FeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProjectFee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoicing Project Fees" ],
        "summary" : "Deletes invoicing project fee by primary key",
        "operationId" : "deleteInvoicingProjectFee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/MarketCls/" : {
      "get" : {
        "tags" : [ "Market Classifications" ],
        "summary" : "Gets all market classifications",
        "operationId" : "getsAllMarket Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MarketCls"
              }
            }
          }
        }
      }
    },
    "/USR/MarketCls/{MarketCls}" : {
      "post" : {
        "tags" : [ "Market Classifications" ],
        "summary" : "Adds a new market classification",
        "operationId" : "addMarketCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MarketCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/MarketCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Market Classifications" ],
        "summary" : "Updates a market classification",
        "operationId" : "updateMarketCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MarketCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/MarketCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "MarketCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/MarketCls/{MarketClsKey}" : {
      "get" : {
        "tags" : [ "Market Classifications" ],
        "summary" : "Gets market classification by primary key",
        "operationId" : "getsMarket ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/MarketCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Market Classifications" ],
        "summary" : "Deletes market classification by primary key",
        "operationId" : "deleteMarketCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "MarketClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/MarketCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Market Classifications" ],
        "summary" : "Finds market classifications by id or name",
        "operationId" : "getsAllMarket Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MarketCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/PrefixCls/" : {
      "get" : {
        "tags" : [ "Prefix Classifications" ],
        "summary" : "Gets all prefix classifications",
        "operationId" : "getsAllPrefix Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PrefixCls"
              }
            }
          }
        }
      }
    },
    "/SYS/PrefixCls/{PrefixClsKey}" : {
      "get" : {
        "tags" : [ "Prefix Classifications" ],
        "summary" : "Gets prefix classification by primary key",
        "operationId" : "getsPrefix ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PrefixCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PrefixClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/PrefixCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Prefix Classifications" ],
        "summary" : "Finds prefix classifications by id or name",
        "operationId" : "getsAllPrefix Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PrefixCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/SalaryCls/" : {
      "get" : {
        "tags" : [ "Salary Classifications" ],
        "summary" : "Gets all salary classifications",
        "operationId" : "getsAllSalary Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SalaryCls"
              }
            }
          }
        }
      }
    },
    "/SYS/SalaryCls/{SalaryClsKey}" : {
      "get" : {
        "tags" : [ "Salary Classifications" ],
        "summary" : "Gets salary classification by primary key",
        "operationId" : "getsSalary ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SalaryCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SalaryClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/SalaryCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Salary Classifications" ],
        "summary" : "Finds salary classifications by id or name",
        "operationId" : "getsAllSalary Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SalaryCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/StatusCls/" : {
      "get" : {
        "tags" : [ "Status Classifications" ],
        "summary" : "Gets all status classifications",
        "operationId" : "getsAllStatus Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StatusCls"
              }
            }
          }
        }
      }
    },
    "/SYS/StatusCls/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Status Classifications" ],
        "summary" : "Gets status classification by primary key",
        "operationId" : "getsStatus ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/StatusCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/StatusCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Status Classifications" ],
        "summary" : "Finds status classifications by id or name",
        "operationId" : "getsAllStatus Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StatusCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/SuffixCls/" : {
      "get" : {
        "tags" : [ "Suffix Classifications" ],
        "summary" : "Gets all suffix classifications",
        "operationId" : "getsAllSuffix Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SuffixCls"
              }
            }
          }
        }
      }
    },
    "/SYS/SuffixCls/{SuffixClsKey}" : {
      "get" : {
        "tags" : [ "Suffix Classifications" ],
        "summary" : "Gets suffix classification by primary key",
        "operationId" : "getsSuffix ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SuffixCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SuffixClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/SuffixCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Suffix Classifications" ],
        "summary" : "Finds suffix classifications by id or name",
        "operationId" : "getsAllSuffix Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SuffixCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/VendorCls/" : {
      "get" : {
        "tags" : [ "Vendor Classifications" ],
        "summary" : "Gets all vendor classifications",
        "operationId" : "getsAllVendor Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorCls"
              }
            }
          }
        }
      }
    },
    "/SYS/VendorCls/{VendorClsKey}" : {
      "get" : {
        "tags" : [ "Vendor Classifications" ],
        "summary" : "Gets vendor classification by primary key",
        "operationId" : "getsVendor ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/VendorCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Vendor Classifications" ],
        "summary" : "Finds vendor classifications by id or name",
        "operationId" : "getsAllVendor Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/AccountCls/" : {
      "get" : {
        "tags" : [ "Account Classifications" ],
        "summary" : "Gets all account classifications",
        "operationId" : "getsAllAccount Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountCls"
              }
            }
          }
        }
      }
    },
    "/SYS/AccountCls/{AccountClsKey}" : {
      "get" : {
        "tags" : [ "Account Classifications" ],
        "summary" : "Gets account classification by primary key",
        "operationId" : "getsAccount ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AccountCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AccountClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/AccountCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Account Classifications" ],
        "summary" : "Finds account classifications by id or name",
        "operationId" : "getsAllAccount Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/AddFeeCls/" : {
      "get" : {
        "tags" : [ "Add Fee Classifications" ],
        "summary" : "Gets all add fee classifications",
        "operationId" : "getsAllAdd Fee Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AddFeeCls"
              }
            }
          }
        }
      }
    },
    "/SYS/AddFeeCls/{AddFeeClsKey}" : {
      "get" : {
        "tags" : [ "Add Fee Classifications" ],
        "summary" : "Gets add fee classification by primary key",
        "operationId" : "getsAdd Fee ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AddFeeCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddFeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/AddFeeCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Add Fee Classifications" ],
        "summary" : "Finds add fee classifications by id or name",
        "operationId" : "getsAllAdd Fee Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AddFeeCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VendorAutoCheckVendor/" : {
      "get" : {
        "tags" : [ "Automatic Check Vendors" ],
        "summary" : "Gets all automatic check vendors",
        "operationId" : "getsAllAutomatic Check Vendors",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorAutoCheckVendor"
              }
            }
          }
        }
      }
    },
    "/AP/VendorAutoCheckVendor/{AcctKey}/{BankAcctKey}/{UserKey}/{VendorKey}/{VoucherID}" : {
      "get" : {
        "tags" : [ "Automatic Check Vendors" ],
        "summary" : "Gets automatic check vendor by primary key",
        "operationId" : "getsAutomatic Check VendorByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheckVendor"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Automatic Check Vendors" ],
        "summary" : "Deletes automatic check vendor by primary key",
        "operationId" : "deleteVendorAutoCheckVendor",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "VoucherID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAutoCheckVendor/{CheckKey}" : {
      "get" : {
        "tags" : [ "Automatic Check Vendors" ],
        "summary" : "Get automatic check vendors by checkkey",
        "operationId" : "getsAutomaticCheckVendorsByCheckKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheckVendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAutoCheckVendor/{VendorAutoCheckVendor}" : {
      "post" : {
        "tags" : [ "Automatic Check Vendors" ],
        "summary" : "Adds a new automatic check vendor",
        "operationId" : "addVendorAutoCheckVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAutoCheckVendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheckVendor"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Automatic Check Vendors" ],
        "summary" : "Updates a automatic check vendor",
        "operationId" : "updateVendorAutoCheckVendor",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAutoCheckVendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheckVendor"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorAutoCheckVendor",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/ExpenseCls/" : {
      "get" : {
        "tags" : [ "Expense Classifications" ],
        "summary" : "Gets all expense classifications",
        "operationId" : "getsAllExpense Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseCls"
              }
            }
          }
        }
      }
    },
    "/SYS/ExpenseCls/{ExpenseClsKey}" : {
      "get" : {
        "tags" : [ "Expense Classifications" ],
        "summary" : "Gets expense classification by primary key",
        "operationId" : "getsExpense ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ExpenseCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Expense Classifications" ],
        "summary" : "Finds expense classifications by id or name",
        "operationId" : "getsAllExpense Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseMultiplierLine/" : {
      "get" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Gets all expensemultiplier lines",
        "operationId" : "getsAllExpenseMultiplier Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseMultiplierLine"
              }
            }
          }
        }
      }
    },
    "/PA/ExpenseMultiplierLine/{EMLineKey}" : {
      "get" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Gets expensemultiplier line by primary key",
        "operationId" : "getsExpenseMultiplier LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Deletes expensemultiplier line by primary key",
        "operationId" : "deleteExpenseMultiplierLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplierLine/{EMRevKey}" : {
      "get" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Get expensemultiplier lines by emrevkey",
        "operationId" : "getsExpenseMultiplierLinesByEMRevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplierLine/{ExpenseMultiplierLine}" : {
      "post" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Adds a new expensemultiplier line",
        "operationId" : "addExpenseMultiplierLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseMultiplierLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Updates a expensemultiplier line",
        "operationId" : "updateExpenseMultiplierLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseMultiplierLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseMultiplierLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseMultiplierLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Get expensemultiplier lines by exptypekey",
        "operationId" : "getsExpenseMultiplierLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplierLine/{VendorKey}" : {
      "get" : {
        "tags" : [ "ExpenseMultiplier Lines" ],
        "summary" : "Get expensemultiplier lines by vendorkey",
        "operationId" : "getsExpenseMultiplierLinesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/InvoicingProjectPost/" : {
      "get" : {
        "tags" : [ "Invoicing Project Posts" ],
        "summary" : "Gets all invoicing project posts",
        "operationId" : "getsAllInvoicing Project Posts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvoicingProjectPost"
              }
            }
          }
        }
      }
    },
    "/IN/InvoicingProjectPost/{AcctInfoKey}" : {
      "get" : {
        "tags" : [ "Invoicing Project Posts" ],
        "summary" : "Get invoicing project posts by acctinfokey",
        "operationId" : "getsInvoicingProjectPostsByAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProjectPost"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/InvoicingProjectPost/{AcctKey}/{ProjectInfoKey}/{ProjectKey}/{RevenueClsKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Invoicing Project Posts" ],
        "summary" : "Gets invoicing project post by primary key",
        "operationId" : "getsInvoicing Project PostByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProjectPost"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoicing Project Posts" ],
        "summary" : "Deletes invoicing project post by primary key",
        "operationId" : "deleteInvoicingProjectPost",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/IN/InvoicingProjectPost/{InvoicingProjectPost}" : {
      "post" : {
        "tags" : [ "Invoicing Project Posts" ],
        "summary" : "Adds a new invoicing project post",
        "operationId" : "addInvoicingProjectPost",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingProjectPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProjectPost"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoicing Project Posts" ],
        "summary" : "Updates a invoicing project post",
        "operationId" : "updateInvoicingProjectPost",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvoicingProjectPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvoicingProjectPost"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvoicingProjectPost",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/JournalCls/" : {
      "get" : {
        "tags" : [ "Journal Classifications" ],
        "summary" : "Gets all journal classifications",
        "operationId" : "getsAllJournal Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JournalCls"
              }
            }
          }
        }
      }
    },
    "/SYS/JournalCls/{JournalClsKey}" : {
      "get" : {
        "tags" : [ "Journal Classifications" ],
        "summary" : "Gets journal classification by primary key",
        "operationId" : "getsJournal ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/JournalCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "JournalClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/JournalCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Journal Classifications" ],
        "summary" : "Finds journal classifications by id or name",
        "operationId" : "getsAllJournal Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JournalCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborRateSLEmployee/" : {
      "get" : {
        "tags" : [ "Labor Rate SL Employees" ],
        "summary" : "Gets all labor rate sl employees",
        "operationId" : "getsAllLabor Rate SL Employees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborRateSLEmployee"
              }
            }
          }
        }
      }
    },
    "/PA/LaborRateSLEmployee/{EmployeeKey}/{LRKey}/{SLKey}" : {
      "get" : {
        "tags" : [ "Labor Rate SL Employees" ],
        "summary" : "Gets labor rate sl employee by primary key",
        "operationId" : "getsLabor Rate SL EmployeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateSLEmployee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Rate SL Employees" ],
        "summary" : "Deletes labor rate sl employee by primary key",
        "operationId" : "deleteLaborRateSLEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "SLKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateSLEmployee/{LaborRateSLEmployee}" : {
      "post" : {
        "tags" : [ "Labor Rate SL Employees" ],
        "summary" : "Adds a new labor rate sl employee",
        "operationId" : "addLaborRateSLEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateSLEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateSLEmployee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Rate SL Employees" ],
        "summary" : "Updates a labor rate sl employee",
        "operationId" : "updateLaborRateSLEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateSLEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateSLEmployee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborRateSLEmployee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/OHBaseCls/" : {
      "get" : {
        "tags" : [ "OH Base Classifications" ],
        "summary" : "Gets all oh base classifications",
        "operationId" : "getsAllOH Base Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OHBaseCls"
              }
            }
          }
        }
      }
    },
    "/SYS/OHBaseCls/{OHBaseClsKey}" : {
      "get" : {
        "tags" : [ "OH Base Classifications" ],
        "summary" : "Gets oh base classification by primary key",
        "operationId" : "getsOH Base ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/OHBaseCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OHBaseClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/OHBaseCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "OH Base Classifications" ],
        "summary" : "Finds oh base classifications by id or name",
        "operationId" : "getsAllOH Base Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OHBaseCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/ProgramCls/" : {
      "get" : {
        "tags" : [ "Program Classifications" ],
        "summary" : "Gets all program classifications",
        "operationId" : "getsAllProgram Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProgramCls"
              }
            }
          }
        }
      }
    },
    "/USR/ProgramCls/{ProgramCls}" : {
      "post" : {
        "tags" : [ "Program Classifications" ],
        "summary" : "Adds a new program classification",
        "operationId" : "addProgramCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProgramCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Program Classifications" ],
        "summary" : "Updates a program classification",
        "operationId" : "updateProgramCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProgramCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProgramCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProgramCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/ProgramCls/{ProgramClsKey}" : {
      "get" : {
        "tags" : [ "Program Classifications" ],
        "summary" : "Gets program classification by primary key",
        "operationId" : "getsProgram ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProgramCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Program Classifications" ],
        "summary" : "Deletes program classification by primary key",
        "operationId" : "deleteProgramCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProgramClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/ProgramCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Program Classifications" ],
        "summary" : "Finds program classifications by id or name",
        "operationId" : "getsAllProgram Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProgramCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/ProjectCls/" : {
      "get" : {
        "tags" : [ "Project Classifications" ],
        "summary" : "Gets all project classifications",
        "operationId" : "getsAllProject Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectCls"
              }
            }
          }
        }
      }
    },
    "/SYS/ProjectCls/{ProjectClsKey}" : {
      "get" : {
        "tags" : [ "Project Classifications" ],
        "summary" : "Gets project classification by primary key",
        "operationId" : "getsProject ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ProjectCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Project Classifications" ],
        "summary" : "Finds project classifications by id or name",
        "operationId" : "getsAllProject Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/RecalcMultiplier/" : {
      "get" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Gets all recalculate multipliers",
        "operationId" : "getsAllRecalculate Multipliers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecalcMultiplier"
              }
            }
          }
        }
      }
    },
    "/UTL/RecalcMultiplier/{EMKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Get recalculate multipliers by emkey",
        "operationId" : "getsRecalculateMultipliersByEMKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplier"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplier/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Get recalculate multipliers by employeekey",
        "operationId" : "getsRecalculateMultipliersByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplier"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplier/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Get recalculate multipliers by projectinfokey",
        "operationId" : "getsRecalculateMultipliersByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplier"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplier/{RecalcMultiplier}" : {
      "post" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Adds a new recalculate multiplier",
        "operationId" : "addRecalcMultiplier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcMultiplier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplier"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Updates a recalculate multiplier",
        "operationId" : "updateRecalcMultiplier",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcMultiplier"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplier"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RecalcMultiplier",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/RecalcMultiplier/{UserKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Gets recalculate multiplier by primary key",
        "operationId" : "getsRecalculate MultiplierByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplier"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Deletes recalculate multiplier by primary key",
        "operationId" : "deleteRecalcMultiplier",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplier/{VendorKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multipliers" ],
        "summary" : "Get recalculate multipliers by vendorkey",
        "operationId" : "getsRecalculateMultipliersByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplier"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ReceiptCls/" : {
      "get" : {
        "tags" : [ "Receipt Classifications" ],
        "summary" : "Gets all receipt classifications",
        "operationId" : "getsAllReceipt Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptCls"
              }
            }
          }
        }
      }
    },
    "/SYS/ReceiptCls/{ReceiptClsKey}" : {
      "get" : {
        "tags" : [ "Receipt Classifications" ],
        "summary" : "Gets receipt classification by primary key",
        "operationId" : "getsReceipt ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ReceiptCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReceiptClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ReceiptCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Receipt Classifications" ],
        "summary" : "Finds receipt classifications by id or name",
        "operationId" : "getsAllReceipt Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReceiptCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/RevenueCls/" : {
      "get" : {
        "tags" : [ "Revenue Classifications" ],
        "summary" : "Gets all revenue classifications",
        "operationId" : "getsAllRevenue Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RevenueCls"
              }
            }
          }
        }
      }
    },
    "/SYS/RevenueCls/{RevenueClsKey}" : {
      "get" : {
        "tags" : [ "Revenue Classifications" ],
        "summary" : "Gets revenue classification by primary key",
        "operationId" : "getsRevenue ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RevenueCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RevenueClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/RevenueCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Revenue Classifications" ],
        "summary" : "Finds revenue classifications by id or name",
        "operationId" : "getsAllRevenue Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RevenueCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/AP/VendorAutoCheck/" : {
      "get" : {
        "tags" : [ "Vendor Automatic Checks" ],
        "summary" : "Gets all vendor automatic checks",
        "operationId" : "getsAllVendor Automatic Checks",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VendorAutoCheck"
              }
            }
          }
        }
      }
    },
    "/AP/VendorAutoCheck/{BankAcctKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Vendor Automatic Checks" ],
        "summary" : "Gets vendor automatic check by primary key",
        "operationId" : "getsVendor Automatic CheckByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheck"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Vendor Automatic Checks" ],
        "summary" : "Deletes vendor automatic check by primary key",
        "operationId" : "deleteVendorAutoCheck",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/AP/VendorAutoCheck/{VendorAutoCheck}" : {
      "post" : {
        "tags" : [ "Vendor Automatic Checks" ],
        "summary" : "Adds a new vendor automatic check",
        "operationId" : "addVendorAutoCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAutoCheck"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheck"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Vendor Automatic Checks" ],
        "summary" : "Updates a vendor automatic check",
        "operationId" : "updateVendorAutoCheck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VendorAutoCheck"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/VendorAutoCheck"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorAutoCheck",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/ActivityCls/" : {
      "get" : {
        "tags" : [ "Activity Classifications" ],
        "summary" : "Gets all activity classifications",
        "operationId" : "getsAllActivity Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityCls"
              }
            }
          }
        }
      }
    },
    "/USR/ActivityCls/{ActivityCls}" : {
      "post" : {
        "tags" : [ "Activity Classifications" ],
        "summary" : "Adds a new activity classification",
        "operationId" : "addActivityCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Activity Classifications" ],
        "summary" : "Updates a activity classification",
        "operationId" : "updateActivityCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/ActivityCls/{ActivityClsKey}" : {
      "get" : {
        "tags" : [ "Activity Classifications" ],
        "summary" : "Gets activity classification by primary key",
        "operationId" : "getsActivity ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity Classifications" ],
        "summary" : "Deletes activity classification by primary key",
        "operationId" : "deleteActivityCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/ActivityCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Activity Classifications" ],
        "summary" : "Finds activity classifications by id or name",
        "operationId" : "getsAllActivity Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/CategoryCls/" : {
      "get" : {
        "tags" : [ "Category Classifications" ],
        "summary" : "Gets all category classifications",
        "operationId" : "getsAllCategory Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CategoryCls"
              }
            }
          }
        }
      }
    },
    "/SYS/CategoryCls/{CategoryClsKey}" : {
      "get" : {
        "tags" : [ "Category Classifications" ],
        "summary" : "Gets category classification by primary key",
        "operationId" : "getsCategory ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CategoryCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CategoryClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/CategoryCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Category Classifications" ],
        "summary" : "Finds category classifications by id or name",
        "operationId" : "getsAllCategory Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CategoryCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/ChangeBillStatusLine/" : {
      "get" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Gets all change bill status lines",
        "operationId" : "getsAllChange Bill Status Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ChangeBillStatusLine"
              }
            }
          }
        }
      }
    },
    "/UTL/ChangeBillStatusLine/{BillLineClsKey}/{LineKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Gets change bill status line by primary key",
        "operationId" : "getsChange Bill Status LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatusLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Deletes change bill status line by primary key",
        "operationId" : "deleteChangeBillStatusLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BillLineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/ChangeBillStatusLine/{ChangeBillStatusLine}" : {
      "post" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Adds a new change bill status line",
        "operationId" : "addChangeBillStatusLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeBillStatusLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatusLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Updates a change bill status line",
        "operationId" : "updateChangeBillStatusLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeBillStatusLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatusLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ChangeBillStatusLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/ChangeBillStatusLine/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Get change bill status lines by employeekey",
        "operationId" : "getsChangeBillStatusLinesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatusLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/ChangeBillStatusLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Get change bill status lines by projectkey",
        "operationId" : "getsChangeBillStatusLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatusLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/ChangeBillStatusLine/{VendorKey}" : {
      "get" : {
        "tags" : [ "Change Bill Status Lines" ],
        "summary" : "Get change bill status lines by vendorkey",
        "operationId" : "getsChangeBillStatusLinesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ChangeBillStatusLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/EmployeeCls/" : {
      "get" : {
        "tags" : [ "Employee Classifications" ],
        "summary" : "Gets all employee classifications",
        "operationId" : "getsAllEmployee Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeCls"
              }
            }
          }
        }
      }
    },
    "/SYS/EmployeeCls/{EmployeeClsKey}" : {
      "get" : {
        "tags" : [ "Employee Classifications" ],
        "summary" : "Gets employee classification by primary key",
        "operationId" : "getsEmployee ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/EmployeeCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Employee Classifications" ],
        "summary" : "Finds employee classifications by id or name",
        "operationId" : "getsAllEmployee Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/RelationCls/" : {
      "get" : {
        "tags" : [ "Relation Classifications" ],
        "summary" : "Gets all relation classifications",
        "operationId" : "getsAllRelation Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RelationCls"
              }
            }
          }
        }
      }
    },
    "/USR/RelationCls/{RelationCls}" : {
      "post" : {
        "tags" : [ "Relation Classifications" ],
        "summary" : "Adds a new relation classification",
        "operationId" : "addRelationCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelationCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RelationCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Relation Classifications" ],
        "summary" : "Updates a relation classification",
        "operationId" : "updateRelationCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelationCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RelationCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RelationCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/RelationCls/{RelationClsKey}" : {
      "get" : {
        "tags" : [ "Relation Classifications" ],
        "summary" : "Gets relation classification by primary key",
        "operationId" : "getsRelation ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RelationCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Relation Classifications" ],
        "summary" : "Deletes relation classification by primary key",
        "operationId" : "deleteRelationCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RelationClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/RelationCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Relation Classifications" ],
        "summary" : "Finds relation classifications by id or name",
        "operationId" : "getsAllRelation Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RelationCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/TSGroupCls/" : {
      "get" : {
        "tags" : [ "TS Group Classifications" ],
        "summary" : "Gets all ts group classifications",
        "operationId" : "getsAllTS Group Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSGroupCls"
              }
            }
          }
        }
      }
    },
    "/USR/TSGroupCls/{TSGroupCls}" : {
      "post" : {
        "tags" : [ "TS Group Classifications" ],
        "summary" : "Adds a new ts group classification",
        "operationId" : "addTSGroupCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSGroupCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSGroupCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TS Group Classifications" ],
        "summary" : "Updates a ts group classification",
        "operationId" : "updateTSGroupCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TSGroupCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSGroupCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSGroupCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/TSGroupCls/{TSGroupClsKey}" : {
      "get" : {
        "tags" : [ "TS Group Classifications" ],
        "summary" : "Gets ts group classification by primary key",
        "operationId" : "getsTS Group ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TSGroupCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TS Group Classifications" ],
        "summary" : "Deletes ts group classification by primary key",
        "operationId" : "deleteTSGroupCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TSGroupClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/TSGroupCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "TS Group Classifications" ],
        "summary" : "Finds ts group classifications by id or name",
        "operationId" : "getsAllTS Group Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TSGroupCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/EmployeeAutoCheckEmployee/" : {
      "get" : {
        "tags" : [ "Automatic Check Employees" ],
        "summary" : "Gets all automatic check employees",
        "operationId" : "getsAllAutomatic Check Employees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeAutoCheckEmployee"
              }
            }
          }
        }
      }
    },
    "/HR/EmployeeAutoCheckEmployee/{AcctKey}/{BankAcctKey}/{EmployeeKey}/{ExpID}/{UserKey}" : {
      "get" : {
        "tags" : [ "Automatic Check Employees" ],
        "summary" : "Gets automatic check employee by primary key",
        "operationId" : "getsAutomatic Check EmployeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheckEmployee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Automatic Check Employees" ],
        "summary" : "Deletes automatic check employee by primary key",
        "operationId" : "deleteEmployeeAutoCheckEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "AcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BankAcctKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeAutoCheckEmployee/{CheckKey}" : {
      "get" : {
        "tags" : [ "Automatic Check Employees" ],
        "summary" : "Get automatic check employees by checkkey",
        "operationId" : "getsAutomaticCheckEmployeesByCheckKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheckEmployee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CheckKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/EmployeeAutoCheckEmployee/{EmployeeAutoCheckEmployee}" : {
      "post" : {
        "tags" : [ "Automatic Check Employees" ],
        "summary" : "Adds a new automatic check employee",
        "operationId" : "addEmployeeAutoCheckEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAutoCheckEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheckEmployee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Automatic Check Employees" ],
        "summary" : "Updates a automatic check employee",
        "operationId" : "updateEmployeeAutoCheckEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmployeeAutoCheckEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeAutoCheckEmployee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeAutoCheckEmployee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/BillLineCls/" : {
      "get" : {
        "tags" : [ "Bill Line Classifications" ],
        "summary" : "Gets all bill line classifications",
        "operationId" : "getsAllBill Line Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillLineCls"
              }
            }
          }
        }
      }
    },
    "/SYS/BillLineCls/{BillLineClsKey}" : {
      "get" : {
        "tags" : [ "Bill Line Classifications" ],
        "summary" : "Gets bill line classification by primary key",
        "operationId" : "getsBill Line ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillLineCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillLineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BillLineCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Bill Line Classifications" ],
        "summary" : "Finds bill line classifications by id or name",
        "operationId" : "getsAllBill Line Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillLineCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/FinancialCls/" : {
      "get" : {
        "tags" : [ "Financial Classifications" ],
        "summary" : "Gets all financial classifications",
        "operationId" : "getsAllFinancial Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FinancialCls"
              }
            }
          }
        }
      }
    },
    "/SYS/FinancialCls/{FinancialClsKey}" : {
      "get" : {
        "tags" : [ "Financial Classifications" ],
        "summary" : "Gets financial classification by primary key",
        "operationId" : "getsFinancial ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/FinancialCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FinancialClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/FinancialCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Financial Classifications" ],
        "summary" : "Finds financial classifications by id or name",
        "operationId" : "getsAllFinancial Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FinancialCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/InsuranceCls/" : {
      "get" : {
        "tags" : [ "Insurance Classifications" ],
        "summary" : "Gets all insurance classifications",
        "operationId" : "getsAllInsurance Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InsuranceCls"
              }
            }
          }
        }
      }
    },
    "/USR/InsuranceCls/{InsuranceCls}" : {
      "post" : {
        "tags" : [ "Insurance Classifications" ],
        "summary" : "Adds a new insurance classification",
        "operationId" : "addInsuranceCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsuranceCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InsuranceCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Insurance Classifications" ],
        "summary" : "Updates a insurance classification",
        "operationId" : "updateInsuranceCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsuranceCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InsuranceCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InsuranceCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/InsuranceCls/{InsuranceClsKey}" : {
      "get" : {
        "tags" : [ "Insurance Classifications" ],
        "summary" : "Gets insurance classification by primary key",
        "operationId" : "getsInsurance ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InsuranceCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Insurance Classifications" ],
        "summary" : "Deletes insurance classification by primary key",
        "operationId" : "deleteInsuranceCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InsuranceClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/InsuranceCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Insurance Classifications" ],
        "summary" : "Finds insurance classifications by id or name",
        "operationId" : "getsAllInsurance Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InsuranceCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/LaborPostingGroupLine/" : {
      "get" : {
        "tags" : [ "Labor Posting Group Lines" ],
        "summary" : "Gets all labor posting group lines",
        "operationId" : "getsAllLabor Posting Group Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborPostingGroupLine"
              }
            }
          }
        }
      }
    },
    "/HR/LaborPostingGroupLine/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Group Lines" ],
        "summary" : "Gets labor posting group line by primary key",
        "operationId" : "getsLabor Posting Group LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroupLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Posting Group Lines" ],
        "summary" : "Deletes labor posting group line by primary key",
        "operationId" : "deleteLaborPostingGroupLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/HR/LaborPostingGroupLine/{LaborPostingGroupLine}" : {
      "post" : {
        "tags" : [ "Labor Posting Group Lines" ],
        "summary" : "Adds a new labor posting group line",
        "operationId" : "addLaborPostingGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborPostingGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroupLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Posting Group Lines" ],
        "summary" : "Updates a labor posting group line",
        "operationId" : "updateLaborPostingGroupLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborPostingGroupLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborPostingGroupLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/HR/LaborPostingGroupLine/{LPGroupKey}" : {
      "get" : {
        "tags" : [ "Labor Posting Group Lines" ],
        "summary" : "Get labor posting group lines by lpgroupkey",
        "operationId" : "getsLaborPostingGroupLinesByLPGroupKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborPostingGroupLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LPGroupKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoSale/" : {
      "get" : {
        "tags" : [ "Project Information Sales" ],
        "summary" : "Gets all project information sales",
        "operationId" : "getsAllProject Information Sales",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectInfoSale"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectInfoSale/{PISKey}" : {
      "get" : {
        "tags" : [ "Project Information Sales" ],
        "summary" : "Gets project information sale by primary key",
        "operationId" : "getsProject Information SaleByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoSale"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Information Sales" ],
        "summary" : "Deletes project information sale by primary key",
        "operationId" : "deleteProjectInfoSale",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PISKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoSale/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Sales" ],
        "summary" : "Get project information sales by projectinfokey",
        "operationId" : "getsProjectInformationSalesByProjectInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoSale"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoSale/{ProjectInfoSale}" : {
      "post" : {
        "tags" : [ "Project Information Sales" ],
        "summary" : "Adds a new project information sale",
        "operationId" : "addProjectInfoSale",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectInfoSale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoSale"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Information Sales" ],
        "summary" : "Updates a project information sale",
        "operationId" : "updateProjectInfoSale",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectInfoSale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoSale"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoSale",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectInfoSale/{SaleEmployeeKey}" : {
      "get" : {
        "tags" : [ "Project Information Sales" ],
        "summary" : "Get project information sales by saleemployeekey",
        "operationId" : "getsProjectInformationSalesBySaleEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoSale"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SaleEmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/RetainageCls/" : {
      "get" : {
        "tags" : [ "Retainage Classifications" ],
        "summary" : "Gets all retainage classifications",
        "operationId" : "getsAllRetainage Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RetainageCls"
              }
            }
          }
        }
      }
    },
    "/SYS/RetainageCls/{RetainageClsKey}" : {
      "get" : {
        "tags" : [ "Retainage Classifications" ],
        "summary" : "Gets retainage classification by primary key",
        "operationId" : "getsRetainage ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RetainageCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RetainageClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/RetainageCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Retainage Classifications" ],
        "summary" : "Finds retainage classifications by id or name",
        "operationId" : "getsAllRetainage Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RetainageCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/SpecialtyCls/" : {
      "get" : {
        "tags" : [ "Specialty Classifications" ],
        "summary" : "Gets all specialty classifications",
        "operationId" : "getsAllSpecialty Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SpecialtyCls"
              }
            }
          }
        }
      }
    },
    "/USR/SpecialtyCls/{SpecialtyCls}" : {
      "post" : {
        "tags" : [ "Specialty Classifications" ],
        "summary" : "Adds a new specialty classification",
        "operationId" : "addSpecialtyCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SpecialtyCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SpecialtyCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Specialty Classifications" ],
        "summary" : "Updates a specialty classification",
        "operationId" : "updateSpecialtyCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SpecialtyCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SpecialtyCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SpecialtyCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/SpecialtyCls/{SpecialtyClsKey}" : {
      "get" : {
        "tags" : [ "Specialty Classifications" ],
        "summary" : "Gets specialty classification by primary key",
        "operationId" : "getsSpecialty ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SpecialtyCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Specialty Classifications" ],
        "summary" : "Deletes specialty classification by primary key",
        "operationId" : "deleteSpecialtyCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SpecialtyClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/SpecialtyCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Specialty Classifications" ],
        "summary" : "Finds specialty classifications by id or name",
        "operationId" : "getsAllSpecialty Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SpecialtyCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/BillCycleCls/" : {
      "get" : {
        "tags" : [ "Bill Cycle Classifications" ],
        "summary" : "Gets all bill cycle classifications",
        "operationId" : "getsAllBill Cycle Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillCycleCls"
              }
            }
          }
        }
      }
    },
    "/USR/BillCycleCls/{BillCycleCls}" : {
      "post" : {
        "tags" : [ "Bill Cycle Classifications" ],
        "summary" : "Adds a new bill cycle classification",
        "operationId" : "addBillCycleCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BillCycleCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillCycleCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Bill Cycle Classifications" ],
        "summary" : "Updates a bill cycle classification",
        "operationId" : "updateBillCycleCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BillCycleCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillCycleCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillCycleCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/BillCycleCls/{BillCycleClsKey}" : {
      "get" : {
        "tags" : [ "Bill Cycle Classifications" ],
        "summary" : "Gets bill cycle classification by primary key",
        "operationId" : "getsBill Cycle ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillCycleCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Bill Cycle Classifications" ],
        "summary" : "Deletes bill cycle classification by primary key",
        "operationId" : "deleteBillCycleCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillCycleClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/BillCycleCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Bill Cycle Classifications" ],
        "summary" : "Finds bill cycle classifications by id or name",
        "operationId" : "getsAllBill Cycle Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillCycleCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/CnsDetailCls/" : {
      "get" : {
        "tags" : [ "Cns Detail Classifications" ],
        "summary" : "Gets all cns detail classifications",
        "operationId" : "getsAllCns Detail Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CnsDetailCls"
              }
            }
          }
        }
      }
    },
    "/SYS/CnsDetailCls/{CnsDetailClsKey}" : {
      "get" : {
        "tags" : [ "Cns Detail Classifications" ],
        "summary" : "Gets cns detail classification by primary key",
        "operationId" : "getsCns Detail ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/CnsDetailCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CnsDetailClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/CnsDetailCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Cns Detail Classifications" ],
        "summary" : "Finds cns detail classifications by id or name",
        "operationId" : "getsAllCns Detail Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CnsDetailCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/HourEntryCls/" : {
      "get" : {
        "tags" : [ "Hour Entry Classifications" ],
        "summary" : "Gets all hour entry classifications",
        "operationId" : "getsAllHour Entry Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HourEntryCls"
              }
            }
          }
        }
      }
    },
    "/SYS/HourEntryCls/{HourEntryClsKey}" : {
      "get" : {
        "tags" : [ "Hour Entry Classifications" ],
        "summary" : "Gets hour entry classification by primary key",
        "operationId" : "getsHour Entry ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/HourEntryCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "HourEntryClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/HourEntryCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Hour Entry Classifications" ],
        "summary" : "Finds hour entry classifications by id or name",
        "operationId" : "getsAllHour Entry Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HourEntryCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/IgnoreTagCls/" : {
      "get" : {
        "tags" : [ "Ignore Tag Classifications" ],
        "summary" : "Gets all ignore tag classifications",
        "operationId" : "getsAllIgnore Tag Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IgnoreTagCls"
              }
            }
          }
        }
      }
    },
    "/USR/IgnoreTagCls/{IgnoreTagCls}" : {
      "post" : {
        "tags" : [ "Ignore Tag Classifications" ],
        "summary" : "Adds a new ignore tag classification",
        "operationId" : "addIgnoreTagCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IgnoreTagCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/IgnoreTagCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Ignore Tag Classifications" ],
        "summary" : "Updates a ignore tag classification",
        "operationId" : "updateIgnoreTagCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IgnoreTagCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/IgnoreTagCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "IgnoreTagCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/IgnoreTagCls/{IgnoreTagClsKey}" : {
      "get" : {
        "tags" : [ "Ignore Tag Classifications" ],
        "summary" : "Gets ignore tag classification by primary key",
        "operationId" : "getsIgnore Tag ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/IgnoreTagCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Ignore Tag Classifications" ],
        "summary" : "Deletes ignore tag classification by primary key",
        "operationId" : "deleteIgnoreTagCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "IgnoreTagClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/IgnoreTagCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Ignore Tag Classifications" ],
        "summary" : "Finds ignore tag classifications by id or name",
        "operationId" : "getsAllIgnore Tag Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IgnoreTagCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/LaborSortCls/" : {
      "get" : {
        "tags" : [ "Labor Sort Classifications" ],
        "summary" : "Gets all labor sort classifications",
        "operationId" : "getsAllLabor Sort Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborSortCls"
              }
            }
          }
        }
      }
    },
    "/SYS/LaborSortCls/{LaborSortClsKey}" : {
      "get" : {
        "tags" : [ "Labor Sort Classifications" ],
        "summary" : "Gets labor sort classification by primary key",
        "operationId" : "getsLabor Sort ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborSortCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborSortClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/LaborSortCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Labor Sort Classifications" ],
        "summary" : "Finds labor sort classifications by id or name",
        "operationId" : "getsAllLabor Sort Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborSortCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/PctActualCls/" : {
      "get" : {
        "tags" : [ "Pct Actual Classifications" ],
        "summary" : "Gets all pct actual classifications",
        "operationId" : "getsAllPct Actual Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PctActualCls"
              }
            }
          }
        }
      }
    },
    "/SYS/PctActualCls/{PctActualClsKey}" : {
      "get" : {
        "tags" : [ "Pct Actual Classifications" ],
        "summary" : "Gets pct actual classification by primary key",
        "operationId" : "getsPct Actual ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PctActualCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PctActualClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/PctActualCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Pct Actual Classifications" ],
        "summary" : "Finds pct actual classifications by id or name",
        "operationId" : "getsAllPct Actual Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PctActualCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/ProfitCenterInfo/" : {
      "get" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Gets all profit center informations",
        "operationId" : "getsAllProfit Center Informations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProfitCenterInfo"
              }
            }
          }
        }
      }
    },
    "/GA/ProfitCenterInfo/{AddressKey}" : {
      "get" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Get profit center informations by addresskey",
        "operationId" : "getsProfitCenterInformationsByAddressKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenterInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AddressKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenterInfo/{CenterInfoKey}" : {
      "get" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Gets profit center information by primary key",
        "operationId" : "getsProfit Center InformationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenterInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Deletes profit center information by primary key",
        "operationId" : "deleteProfitCenterInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CenterInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenterInfo/{CurrencyKey}" : {
      "get" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Get profit center informations by currencykey",
        "operationId" : "getsProfitCenterInformationsByCurrencyKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenterInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CurrencyKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/GA/ProfitCenterInfo/{ProfitCenterInfo}" : {
      "post" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Adds a new profit center information",
        "operationId" : "addProfitCenterInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProfitCenterInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenterInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Updates a profit center information",
        "operationId" : "updateProfitCenterInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProfitCenterInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenterInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProfitCenterInfo",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/GA/ProfitCenterInfo/{StatusClsKey}" : {
      "get" : {
        "tags" : [ "Profit Center Informations" ],
        "summary" : "Get profit center informations by statusclskey",
        "operationId" : "getsProfitCenterInformationsByStatusClsKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProfitCenterInfo"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "StatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectCOLine/" : {
      "get" : {
        "tags" : [ "Project Change Order Lines" ],
        "summary" : "Gets all project change order lines",
        "operationId" : "getsAllProject Change Order Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectCOLine"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectCOLine/{COLineKey}" : {
      "get" : {
        "tags" : [ "Project Change Order Lines" ],
        "summary" : "Gets project change order line by primary key",
        "operationId" : "getsProject Change Order LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCOLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Change Order Lines" ],
        "summary" : "Deletes project change order line by primary key",
        "operationId" : "deleteProjectCOLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "COLineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectCOLine/{CORevKey}" : {
      "get" : {
        "tags" : [ "Project Change Order Lines" ],
        "summary" : "Get project change order lines by corevkey",
        "operationId" : "getsProjectChangeOrderLinesByCORevKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCOLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CORevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectCOLine/{ProjectCOLine}" : {
      "post" : {
        "tags" : [ "Project Change Order Lines" ],
        "summary" : "Adds a new project change order line",
        "operationId" : "addProjectCOLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectCOLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCOLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Change Order Lines" ],
        "summary" : "Updates a project change order line",
        "operationId" : "updateProjectCOLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectCOLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCOLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectCOLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectCOLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Project Change Order Lines" ],
        "summary" : "Get project change order lines by projectkey",
        "operationId" : "getsProjectChangeOrderLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCOLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BillStatusCls/" : {
      "get" : {
        "tags" : [ "Bill Status Classifications" ],
        "summary" : "Gets all bill status classifications",
        "operationId" : "getsAllBill Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillStatusCls"
              }
            }
          }
        }
      }
    },
    "/SYS/BillStatusCls/{BillStatusClsKey}" : {
      "get" : {
        "tags" : [ "Bill Status Classifications" ],
        "summary" : "Gets bill status classification by primary key",
        "operationId" : "getsBill Status ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillStatusCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BillStatusCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Bill Status Classifications" ],
        "summary" : "Finds bill status classifications by id or name",
        "operationId" : "getsAllBill Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillStatusCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/BillingModCls/" : {
      "get" : {
        "tags" : [ "Billing Mod Classifications" ],
        "summary" : "Gets all billing mod classifications",
        "operationId" : "getsAllBilling Mod Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillingModCls"
              }
            }
          }
        }
      }
    },
    "/SYS/BillingModCls/{BillingModClsKey}" : {
      "get" : {
        "tags" : [ "Billing Mod Classifications" ],
        "summary" : "Gets billing mod classification by primary key",
        "operationId" : "getsBilling Mod ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BillingModCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BillingModClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BillingModCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Billing Mod Classifications" ],
        "summary" : "Finds billing mod classifications by id or name",
        "operationId" : "getsAllBilling Mod Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillingModCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/ClientRoleCls/" : {
      "get" : {
        "tags" : [ "Client Role Classifications" ],
        "summary" : "Gets all client role classifications",
        "operationId" : "getsAllClient Role Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClientRoleCls"
              }
            }
          }
        }
      }
    },
    "/USR/ClientRoleCls/{ClientRoleCls}" : {
      "post" : {
        "tags" : [ "Client Role Classifications" ],
        "summary" : "Adds a new client role classification",
        "operationId" : "addClientRoleCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClientRoleCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientRoleCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Client Role Classifications" ],
        "summary" : "Updates a client role classification",
        "operationId" : "updateClientRoleCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClientRoleCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientRoleCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientRoleCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/ClientRoleCls/{ClientRoleClsKey}" : {
      "get" : {
        "tags" : [ "Client Role Classifications" ],
        "summary" : "Gets client role classification by primary key",
        "operationId" : "getsClient Role ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ClientRoleCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Client Role Classifications" ],
        "summary" : "Deletes client role classification by primary key",
        "operationId" : "deleteClientRoleCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ClientRoleClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/ClientRoleCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Client Role Classifications" ],
        "summary" : "Finds client role classifications by id or name",
        "operationId" : "getsAllClient Role Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClientRoleCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/SportEventCls/" : {
      "get" : {
        "tags" : [ "Sport Event Classifications" ],
        "summary" : "Gets all sport event classifications",
        "operationId" : "getsAllSport Event Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportEventCls"
              }
            }
          }
        }
      }
    },
    "/USR/SportEventCls/{SportEventCls}" : {
      "post" : {
        "tags" : [ "Sport Event Classifications" ],
        "summary" : "Adds a new sport event classification",
        "operationId" : "addSportEventCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SportEventCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SportEventCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Sport Event Classifications" ],
        "summary" : "Updates a sport event classification",
        "operationId" : "updateSportEventCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SportEventCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SportEventCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SportEventCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/SportEventCls/{SportEventClsKey}" : {
      "get" : {
        "tags" : [ "Sport Event Classifications" ],
        "summary" : "Gets sport event classification by primary key",
        "operationId" : "getsSport Event ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SportEventCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Sport Event Classifications" ],
        "summary" : "Deletes sport event classification by primary key",
        "operationId" : "deleteSportEventCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SportEventClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/SportEventCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Sport Event Classifications" ],
        "summary" : "Finds sport event classifications by id or name",
        "operationId" : "getsAllSport Event Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportEventCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/ARStatementCls/" : {
      "get" : {
        "tags" : [ "AR Statement Classifications" ],
        "summary" : "Gets all ar statement classifications",
        "operationId" : "getsAllAR Statement Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ARStatementCls"
              }
            }
          }
        }
      }
    },
    "/SYS/ARStatementCls/{ARStatementClsKey}" : {
      "get" : {
        "tags" : [ "AR Statement Classifications" ],
        "summary" : "Gets ar statement classification by primary key",
        "operationId" : "getsAR Statement ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ARStatementCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARStatementClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ARStatementCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "AR Statement Classifications" ],
        "summary" : "Finds ar statement classifications by id or name",
        "operationId" : "getsAllAR Statement Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ARStatementCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/PaymentTermCls/" : {
      "get" : {
        "tags" : [ "Payment Term Classifications" ],
        "summary" : "Gets all payment term classifications",
        "operationId" : "getsAllPayment Term Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PaymentTermCls"
              }
            }
          }
        }
      }
    },
    "/SYS/PaymentTermCls/{PaymentTermClsKey}" : {
      "get" : {
        "tags" : [ "Payment Term Classifications" ],
        "summary" : "Gets payment term classification by primary key",
        "operationId" : "getsPayment Term ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PaymentTermCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PaymentTermClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/PaymentTermCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Payment Term Classifications" ],
        "summary" : "Finds payment term classifications by id or name",
        "operationId" : "getsAllPayment Term Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PaymentTermCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectInfoAccount/" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Gets all project information accounts",
        "operationId" : "getsAllProject Information Accounts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectInfoAccount"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectInfoAccount/{ARAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by aracctinfokey",
        "operationId" : "getsProjectInformationAccountsByARAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ARAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{CostLRKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by costlrkey",
        "operationId" : "getsProjectInformationAccountsByCostLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CostLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{DirectCnsAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by directcnsacctinfokey",
        "operationId" : "getsProjectInformationAccountsByDirectCnsAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DirectCnsAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{DirectReimAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by directreimacctinfokey",
        "operationId" : "getsProjectInformationAccountsByDirectReimAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "DirectReimAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{FeeAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by feeacctinfokey",
        "operationId" : "getsProjectInformationAccountsByFeeAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "FeeAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{InterestAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by interestacctinfokey",
        "operationId" : "getsProjectInformationAccountsByInterestAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InterestAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{LaborAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by laboracctinfokey",
        "operationId" : "getsProjectInformationAccountsByLaborAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{OtherAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by otheracctinfokey",
        "operationId" : "getsProjectInformationAccountsByOtherAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "OtherAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{PayLRKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by paylrkey",
        "operationId" : "getsProjectInformationAccountsByPayLRKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PayLRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{ProjectInfoAccount}" : {
      "post" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Adds a new project information account",
        "operationId" : "addProjectInfoAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectInfoAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Updates a project information account",
        "operationId" : "updateProjectInfoAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectInfoAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoAccount",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectInfoAccount/{ProjectInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Gets project information account by primary key",
        "operationId" : "getsProject Information AccountByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Deletes project information account by primary key",
        "operationId" : "deleteProjectInfoAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{ReimCnsAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by reimcnsacctinfokey",
        "operationId" : "getsProjectInformationAccountsByReimCnsAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReimCnsAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{ReimExpAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by reimexpacctinfokey",
        "operationId" : "getsProjectInformationAccountsByReimExpAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ReimExpAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{RetainageAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by retainageacctinfokey",
        "operationId" : "getsProjectInformationAccountsByRetainageAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RetainageAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{RetainerAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by retaineracctinfokey",
        "operationId" : "getsProjectInformationAccountsByRetainerAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RetainerAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectInfoAccount/{TaxAcctInfoKey}" : {
      "get" : {
        "tags" : [ "Project Information Accounts" ],
        "summary" : "Get project information accounts by taxacctinfokey",
        "operationId" : "getsProjectInformationAccountsByTaxAcctInfoKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectInfoAccount"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "TaxAcctInfoKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplierLine/" : {
      "get" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Gets all recalculate multiplier lines",
        "operationId" : "getsAllRecalculate Multiplier Lines",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecalcMultiplierLine"
              }
            }
          }
        }
      }
    },
    "/UTL/RecalcMultiplierLine/{BillLineClsKey}/{LineKey}/{UserKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Gets recalculate multiplier line by primary key",
        "operationId" : "getsRecalculate Multiplier LineByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplierLine"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Deletes recalculate multiplier line by primary key",
        "operationId" : "deleteRecalcMultiplierLine",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LineKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "UserKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "BillLineClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplierLine/{EmployeeKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Get recalculate multiplier lines by employeekey",
        "operationId" : "getsRecalculateMultiplierLinesByEmployeeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplierLine/{ExpTypeKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Get recalculate multiplier lines by exptypekey",
        "operationId" : "getsRecalculateMultiplierLinesByExpTypeKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpTypeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplierLine/{ProjectKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Get recalculate multiplier lines by projectkey",
        "operationId" : "getsRecalculateMultiplierLinesByProjectKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/UTL/RecalcMultiplierLine/{RecalcMultiplierLine}" : {
      "post" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Adds a new recalculate multiplier line",
        "operationId" : "addRecalcMultiplierLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcMultiplierLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplierLine"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Updates a recalculate multiplier line",
        "operationId" : "updateRecalcMultiplierLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecalcMultiplierLine"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RecalcMultiplierLine",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/UTL/RecalcMultiplierLine/{VendorKey}" : {
      "get" : {
        "tags" : [ "Recalculate Multiplier Lines" ],
        "summary" : "Get recalculate multiplier lines by vendorkey",
        "operationId" : "getsRecalculateMultiplierLinesByVendorKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RecalcMultiplierLine"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "VendorKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/AlphaNumCls/" : {
      "get" : {
        "tags" : [ "Alpha Numeric Classifications" ],
        "summary" : "Gets all alpha numeric classifications",
        "operationId" : "getsAllAlpha Numeric Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AlphaNumCls"
              }
            }
          }
        }
      }
    },
    "/SYS/AlphaNumCls/{AlphaNumClsKey}" : {
      "get" : {
        "tags" : [ "Alpha Numeric Classifications" ],
        "summary" : "Gets alpha numeric classification by primary key",
        "operationId" : "getsAlpha Numeric ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AlphaNumCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "AlphaNumClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/AlphaNumCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Alpha Numeric Classifications" ],
        "summary" : "Finds alpha numeric classifications by id or name",
        "operationId" : "getsAllAlpha Numeric Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AlphaNumCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/LaborRateActEmployee/" : {
      "get" : {
        "tags" : [ "Labor Rate Activity Employees" ],
        "summary" : "Gets all labor rate activity employees",
        "operationId" : "getsAllLabor Rate Activity Employees",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LaborRateActEmployee"
              }
            }
          }
        }
      }
    },
    "/PA/LaborRateActEmployee/{ActivityKey}/{EmployeeKey}/{LRKey}" : {
      "get" : {
        "tags" : [ "Labor Rate Activity Employees" ],
        "summary" : "Gets labor rate activity employee by primary key",
        "operationId" : "getsLabor Rate Activity EmployeeByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateActEmployee"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labor Rate Activity Employees" ],
        "summary" : "Deletes labor rate activity employee by primary key",
        "operationId" : "deleteLaborRateActEmployee",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LRKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "ActivityKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      }, {
        "name" : "EmployeeKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/LaborRateActEmployee/{LaborRateActEmployee}" : {
      "post" : {
        "tags" : [ "Labor Rate Activity Employees" ],
        "summary" : "Adds a new labor rate activity employee",
        "operationId" : "addLaborRateActEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateActEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateActEmployee"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labor Rate Activity Employees" ],
        "summary" : "Updates a labor rate activity employee",
        "operationId" : "updateLaborRateActEmployee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LaborRateActEmployee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/LaborRateActEmployee"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LaborRateActEmployee",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/PeriodStatusCls/" : {
      "get" : {
        "tags" : [ "Period Status Classifications" ],
        "summary" : "Gets all period status classifications",
        "operationId" : "getsAllPeriod Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PeriodStatusCls"
              }
            }
          }
        }
      }
    },
    "/SYS/PeriodStatusCls/{PeriodStatusClsKey}" : {
      "get" : {
        "tags" : [ "Period Status Classifications" ],
        "summary" : "Gets period status classification by primary key",
        "operationId" : "getsPeriod Status ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PeriodStatusCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "PeriodStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/PeriodStatusCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Period Status Classifications" ],
        "summary" : "Finds period status classifications by id or name",
        "operationId" : "getsAllPeriod Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PeriodStatusCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/BudgetMsgCls/" : {
      "get" : {
        "tags" : [ "Budget Message Classifications" ],
        "summary" : "Gets all budget message classifications",
        "operationId" : "getsAllBudget Message Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BudgetMsgCls"
              }
            }
          }
        }
      }
    },
    "/SYS/BudgetMsgCls/{BudgetMsgClsKey}" : {
      "get" : {
        "tags" : [ "Budget Message Classifications" ],
        "summary" : "Gets budget message classification by primary key",
        "operationId" : "getsBudget Message ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/BudgetMsgCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "BudgetMsgClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/BudgetMsgCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Budget Message Classifications" ],
        "summary" : "Finds budget message classifications by id or name",
        "operationId" : "getsAllBudget Message Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BudgetMsgCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/ExpDetailCls/" : {
      "get" : {
        "tags" : [ "Expense Detail Classifications" ],
        "summary" : "Gets all expense detail classifications",
        "operationId" : "getsAllExpense Detail Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpDetailCls"
              }
            }
          }
        }
      }
    },
    "/SYS/ExpDetailCls/{ExpDetailClsKey}" : {
      "get" : {
        "tags" : [ "Expense Detail Classifications" ],
        "summary" : "Gets expense detail classification by primary key",
        "operationId" : "getsExpense Detail ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpDetailCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpDetailClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ExpDetailCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Expense Detail Classifications" ],
        "summary" : "Finds expense detail classifications by id or name",
        "operationId" : "getsAllExpense Detail Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpDetailCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ExpenseMultiplierRev/" : {
      "get" : {
        "tags" : [ "Expense Multiplier Revisionses" ],
        "summary" : "Gets all expense multiplier revisionses",
        "operationId" : "getsAllExpense Multiplier Revisionses",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpenseMultiplierRev"
              }
            }
          }
        }
      }
    },
    "/PA/ExpenseMultiplierRev/{EMKey}" : {
      "get" : {
        "tags" : [ "Expense Multiplier Revisionses" ],
        "summary" : "Get expense multiplier revisionses by emkey",
        "operationId" : "getsExpenseMultiplierRevisionsesByEMKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplierRev/{EMRevKey}" : {
      "get" : {
        "tags" : [ "Expense Multiplier Revisionses" ],
        "summary" : "Gets expense multiplier revisions by primary key",
        "operationId" : "getsExpense Multiplier RevisionsByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierRev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Expense Multiplier Revisionses" ],
        "summary" : "Deletes expense multiplier revisions by primary key",
        "operationId" : "deleteExpenseMultiplierRev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EMRevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ExpenseMultiplierRev/{ExpenseMultiplierRev}" : {
      "post" : {
        "tags" : [ "Expense Multiplier Revisionses" ],
        "summary" : "Adds a new expense multiplier revisions",
        "operationId" : "addExpenseMultiplierRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseMultiplierRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierRev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Expense Multiplier Revisionses" ],
        "summary" : "Updates a expense multiplier revisions",
        "operationId" : "updateExpenseMultiplierRev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExpenseMultiplierRev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ExpenseMultiplierRev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ExpenseMultiplierRev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/InvNumberCls/" : {
      "get" : {
        "tags" : [ "Invoice Number Classifications" ],
        "summary" : "Gets all invoice number classifications",
        "operationId" : "getsAllInvoice Number Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvNumberCls"
              }
            }
          }
        }
      }
    },
    "/SYS/InvNumberCls/{InvNumberClsKey}" : {
      "get" : {
        "tags" : [ "Invoice Number Classifications" ],
        "summary" : "Gets invoice number classification by primary key",
        "operationId" : "getsInvoice Number ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvNumberCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "InvNumberClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/InvNumberCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Invoice Number Classifications" ],
        "summary" : "Finds invoice number classifications by id or name",
        "operationId" : "getsAllInvoice Number Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InvNumberCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/PA/ProjectCORev/" : {
      "get" : {
        "tags" : [ "Project Change Order Revisions" ],
        "summary" : "Gets all project change order revisions",
        "operationId" : "getsAllProject Change Order Revisions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectCORev"
              }
            }
          }
        }
      }
    },
    "/PA/ProjectCORev/{COKey}" : {
      "get" : {
        "tags" : [ "Project Change Order Revisions" ],
        "summary" : "Get project change order revisions by cokey",
        "operationId" : "getsProjectChangeOrderRevisionsByCOKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCORev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "COKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectCORev/{CORevKey}" : {
      "get" : {
        "tags" : [ "Project Change Order Revisions" ],
        "summary" : "Gets project change order revision by primary key",
        "operationId" : "getsProject Change Order RevisionByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCORev"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project Change Order Revisions" ],
        "summary" : "Deletes project change order revision by primary key",
        "operationId" : "deleteProjectCORev",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "CORevKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/PA/ProjectCORev/{ProjectCORev}" : {
      "post" : {
        "tags" : [ "Project Change Order Revisions" ],
        "summary" : "Adds a new project change order revision",
        "operationId" : "addProjectCORev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectCORev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCORev"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project Change Order Revisions" ],
        "summary" : "Updates a project change order revision",
        "operationId" : "updateProjectCORev",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectCORev"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectCORev"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectCORev",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/ProjectStatusCls/" : {
      "get" : {
        "tags" : [ "Project Status Classifications" ],
        "summary" : "Gets all project status classifications",
        "operationId" : "getsAllProject Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectStatusCls"
              }
            }
          }
        }
      }
    },
    "/SYS/ProjectStatusCls/{ProjectStatusClsKey}" : {
      "get" : {
        "tags" : [ "Project Status Classifications" ],
        "summary" : "Gets project status classification by primary key",
        "operationId" : "getsProject Status ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ProjectStatusCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ProjectStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ProjectStatusCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Project Status Classifications" ],
        "summary" : "Finds project status classifications by id or name",
        "operationId" : "getsAllProject Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectStatusCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/SportActivityCls/" : {
      "get" : {
        "tags" : [ "Sport Activity Classifications" ],
        "summary" : "Gets all sport activity classifications",
        "operationId" : "getsAllSport Activity Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportActivityCls"
              }
            }
          }
        }
      }
    },
    "/USR/SportActivityCls/{SportActivityCls}" : {
      "post" : {
        "tags" : [ "Sport Activity Classifications" ],
        "summary" : "Adds a new sport activity classification",
        "operationId" : "addSportActivityCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SportActivityCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SportActivityCls"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Sport Activity Classifications" ],
        "summary" : "Updates a sport activity classification",
        "operationId" : "updateSportActivityCls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SportActivityCls"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SportActivityCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SportActivityCls",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/USR/SportActivityCls/{SportActivityClsKey}" : {
      "get" : {
        "tags" : [ "Sport Activity Classifications" ],
        "summary" : "Gets sport activity classification by primary key",
        "operationId" : "getsSport Activity ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/SportActivityCls"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Sport Activity Classifications" ],
        "summary" : "Deletes sport activity classification by primary key",
        "operationId" : "deleteSportActivityCls",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "SportActivityClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/USR/SportActivityCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Sport Activity Classifications" ],
        "summary" : "Finds sport activity classifications by id or name",
        "operationId" : "getsAllSport Activity Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SportActivityCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/ActivityStatusCls/" : {
      "get" : {
        "tags" : [ "Activity Status Classifications" ],
        "summary" : "Gets all activity status classifications",
        "operationId" : "getsAllActivity Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityStatusCls"
              }
            }
          }
        }
      }
    },
    "/SYS/ActivityStatusCls/{ActivityStatusClsKey}" : {
      "get" : {
        "tags" : [ "Activity Status Classifications" ],
        "summary" : "Gets activity status classification by primary key",
        "operationId" : "getsActivity Status ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/ActivityStatusCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ActivityStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/ActivityStatusCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Activity Status Classifications" ],
        "summary" : "Finds activity status classifications by id or name",
        "operationId" : "getsAllActivity Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityStatusCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/EmployeeStatusCls/" : {
      "get" : {
        "tags" : [ "Employee Status Classifications" ],
        "summary" : "Gets all employee status classifications",
        "operationId" : "getsAllEmployee Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeStatusCls"
              }
            }
          }
        }
      }
    },
    "/SYS/EmployeeStatusCls/{EmployeeStatusClsKey}" : {
      "get" : {
        "tags" : [ "Employee Status Classifications" ],
        "summary" : "Gets employee status classification by primary key",
        "operationId" : "getsEmployee Status ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/EmployeeStatusCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "EmployeeStatusClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/EmployeeStatusCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Employee Status Classifications" ],
        "summary" : "Finds employee status classifications by id or name",
        "operationId" : "getsAllEmployee Status Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmployeeStatusCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/SYS/RequireCommentsCls/" : {
      "get" : {
        "tags" : [ "Require Comments Classifications" ],
        "summary" : "Gets all require comments classifications",
        "operationId" : "getsAllRequire Comments Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RequireCommentsCls"
              }
            }
          }
        }
      }
    },
    "/SYS/RequireCommentsCls/{RequireCommentsClsKey}" : {
      "get" : {
        "tags" : [ "Require Comments Classifications" ],
        "summary" : "Gets require comments classification by primary key",
        "operationId" : "getsRequire Comments ClassificationByPrimaryKey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/RequireCommentsCls"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "RequireCommentsClsKey",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/SYS/RequireCommentsCls/Find/{idOrName}" : {
      "get" : {
        "tags" : [ "Require Comments Classifications" ],
        "summary" : "Finds require comments classifications by id or name",
        "operationId" : "getsAllRequire Comments Classifications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RequireCommentsCls"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "idOrName",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    }
  },
  "securityDefinitions" : {
    "HTTP_BASIC" : {
      "description" : "All GET methods are public, meaning that *you can read all the data*. Write operations require authentication and therefore are forbidden to the general public.",
      "type" : "basic"
    }
  },
  "definitions" : {
    "Task" : {
      "type" : "object",
      "required" : [ "completed", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Auto-generated primary key field",
          "example" : "3fa2eb40-b61c-11e6-9de0-fdbe71bceebb"
        },
        "name" : {
          "type" : "string",
          "example" : "Figure out how to colonize Mars"
        },
        "completed" : {
          "type" : "boolean"
        },
        "createdAt" : {
          "type" : "string",
          "example" : "2016.10.06"
        }
      },
      "description" : "An object that represents a Task.",
      "example" : "{\n  \"id\": \"47ee3550-b619-11e6-8408-0bdb025a7cfa\",\n  \"name\": \"Feed the fish\",\n  \"completed\": false,\n  \"createdAt\": \"2016.07.03\"\n}"
    },
    "Error" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "minimum" : 400,
          "maximum" : 599
        },
        "description" : {
          "type" : "string",
          "example" : "Bad query parameter [$size]: Invalid integer value [abc]"
        },
        "reasonPhrase" : {
          "type" : "string",
          "example" : "Bad Request"
        }
      },
      "description" : "This general error structure is used throughout this API.",
      "example" : "{\n  \"code\": 400,\n  \"description\": \"Bad query parameter [$size]: Invalid integer value [abc]\",\n  \"reasonPhrase\": \"Bad Request\"\n}"
    },
    "1099Cls" : {
      "type" : "object",
      "required" : [ "1099ClsID", "1099ClsKey", "1099ClsName" ],
      "properties" : {
        "1099ClsID" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "1099ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "1099 class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Consultant, 2 = Rent, 3 = Legal"
        },
        "1099ClsName" : {
          "type" : "string",
          "description" : "1099 class name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Account" : {
      "type" : "object",
      "required" : [ "AccountInfo", "AcctInfoKey", "AcctKey", "CenterKey", "ProfitCenter", "StatusCls", "StatusClsKey" ],
      "properties" : {
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account key"
        },
        "CenterKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AccountInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AcctInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account information key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "NextControl" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Next control number"
        },
        "ProfitCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status class key; 1=Active, 2=Inactive",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "CheckDesignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReportDesign_CheckDesign" : {
          "$ref" : "#/definitions/ReportDesign"
        }
      }
    },
    "AccountCls" : {
      "type" : "object",
      "required" : [ "AccountClsID", "AccountClsKey", "AccountClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "AccountClsID" : {
          "type" : "string"
        },
        "AccountClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Bank, 2 = AccountsReceivable, 3 = AccountsPayable, 4 = EmployeeReimbursable"
        },
        "AccountClsName" : {
          "type" : "string"
        }
      }
    },
    "AccountDefault" : {
      "type" : "object",
      "required" : [ "CenterInfoKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DLAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OHAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "REAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PNLAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DLOwnerAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OHOwnerAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccountInfo_DLAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_OHAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_REAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_PNLAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DLOwnerAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_OHOwnerAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "AccountInfo" : {
      "type" : "object",
      "required" : [ "AcctInfoID", "AcctInfoKey", "AcctInfoName", "DontAllowGJ", "FinancialCls", "FinancialClsKey", "StatusCls", "StatusClsKey" ],
      "properties" : {
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AccountCls" : {
          "$ref" : "#/definitions/AccountCls"
        },
        "AcctInfoID" : {
          "type" : "string",
          "description" : "Account information identifier"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "AcctInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account information key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DontAllowGJ" : {
          "type" : "boolean"
        },
        "AcctInfoName" : {
          "type" : "string",
          "description" : "Account information name"
        },
        "FinancialCls" : {
          "$ref" : "#/definitions/FinancialCls"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status class key; 1=Active, 2=Inactive",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "AccountClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Bank, 2 = AccountsReceivable, 3 = AccountsPayable, 4 = EmployeeReimbursable"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "FinancialClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Financial class key; 1=Asset, 2=Liabililty, 3=Capital, 4=Revenue, 5=Expense",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = Asset, 2 = Liability, 3 = Equity, 4 = Revenue, 5 = Expense"
        }
      }
    },
    "Accrual" : {
      "type" : "object",
      "required" : [ "AccrualID", "AccrualKey", "AccrualName", "ProjectInfo", "ProjectInfoKey" ],
      "properties" : {
        "AccrualID" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AccrualKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccrualName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Description" : {
          "type" : "string"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "AccrualEmployee" : {
      "type" : "object",
      "required" : [ "Accrual", "AccrualKey", "DoesAccrueByWorkHours", "Employee", "EmployeeKey", "EndWeek", "StartWeek" ],
      "properties" : {
        "Accrual" : {
          "$ref" : "#/definitions/Accrual"
        },
        "EndWeek" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartWeek" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AccrualKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DoesAccrueByWorkHours" : {
          "type" : "boolean"
        }
      }
    },
    "AccrualHistory" : {
      "type" : "object",
      "required" : [ "AHKey", "Accrual", "AccrualKey" ],
      "properties" : {
        "AHKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Accrual" : {
          "$ref" : "#/definitions/Accrual"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AccrualKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "AccrualHistoryLine" : {
      "type" : "object",
      "required" : [ "AHKey", "AHLineKey", "AccrualHistory", "Employee", "EmployeeKey", "Hours", "TransDate" ],
      "properties" : {
        "AHKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Hours" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "AHLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "TransDate" : {
          "type" : "string",
          "format" : "date"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccrualHistory" : {
          "$ref" : "#/definitions/AccrualHistory"
        }
      }
    },
    "AccrualLine" : {
      "type" : "object",
      "required" : [ "Accrual", "AccrualKey", "AccrualLineKey", "EndWeek", "HoursPerDay", "HoursPerHour", "HoursPerWeek", "HoursPerYear", "LumpSum", "MaxCOPerYear", "MaxHoursPerYear", "StartWeek" ],
      "properties" : {
        "Accrual" : {
          "$ref" : "#/definitions/Accrual"
        },
        "EndWeek" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LumpSum" : {
          "type" : "number",
          "format" : "double"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartWeek" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AccrualKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "HoursPerDay" : {
          "type" : "number",
          "format" : "double"
        },
        "HoursPerHour" : {
          "type" : "number",
          "format" : "double"
        },
        "HoursPerWeek" : {
          "type" : "number",
          "format" : "double"
        },
        "HoursPerYear" : {
          "type" : "number",
          "format" : "double"
        },
        "MaxCOPerYear" : {
          "type" : "number",
          "format" : "double"
        },
        "AccrualLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "MaxHoursPerYear" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Activity" : {
      "type" : "object",
      "required" : [ "ActivityCls", "ActivityClsKey", "ActivityKey", "ActivityStatusCls", "ActivityStatusClsKey", "CreatorKey", "Employee_Creator", "Employee_Owner", "EndDate", "ImportanceClsKey", "OwnerKey", "StartDate" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "Contact" : {
          "$ref" : "#/definitions/Contact"
        },
        "EndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "EndTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Comments" : {
          "type" : "string"
        },
        "OwnerKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "StartTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ContactKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatorKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityCls" : {
          "$ref" : "#/definitions/ActivityCls"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EndDateTime" : {
          "type" : "string"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "ActivityName" : {
          "type" : "string"
        },
        "StartDateTime" : {
          "type" : "string"
        },
        "ActivityClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee_Owner" : {
          "$ref" : "#/definitions/Employee"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee_Creator" : {
          "$ref" : "#/definitions/Employee"
        },
        "FollowUpComments" : {
          "type" : "string"
        },
        "ImportanceClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityStatusCls" : {
          "$ref" : "#/definitions/ActivityStatusCls"
        },
        "ParentActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Open, 2 = Complete, 3 = Reschedule, 4 = Cancelled"
        },
        "Activity_ParentActivity" : {
          "$ref" : "#/definitions/Activity"
        }
      }
    },
    "ActivityCls" : {
      "type" : "object",
      "required" : [ "ActivityClsKey", "ActivityClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ActivityClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity class"
        },
        "ActivityClsName" : {
          "type" : "string",
          "description" : "Activity class name"
        }
      }
    },
    "ActivityCode" : {
      "type" : "object",
      "required" : [ "ActivityID", "ActivityKey", "ActivityName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ActivityID" : {
          "type" : "string",
          "description" : "Activity identifier"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ActivityName" : {
          "type" : "string",
          "description" : "Activity name"
        }
      }
    },
    "ActivityContact" : {
      "type" : "object",
      "required" : [ "Activity", "ActivityKey", "Contact", "ContactKey" ],
      "properties" : {
        "Contact" : {
          "$ref" : "#/definitions/Contact"
        },
        "Activity" : {
          "$ref" : "#/definitions/Activity"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ContactKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "ActivityGroup" : {
      "type" : "object",
      "required" : [ "ActGroupKey", "ActGroupName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ActGroupKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity group key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ActGroupName" : {
          "type" : "string",
          "description" : "Activity group name"
        }
      }
    },
    "ActivityGroupLine" : {
      "type" : "object",
      "required" : [ "ActGroupKey", "ActGroupLineKey", "ActivityCode", "ActivityGroup", "ActivityKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ActGroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "ActivityGroup" : {
          "$ref" : "#/definitions/ActivityGroup"
        },
        "ActGroupLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity group line key"
        }
      }
    },
    "ActivityRate" : {
      "type" : "object",
      "required" : [ "ActivityCode", "ActivityKey", "ActivityRateKey", "BillRate", "CostRate", "PayRate" ],
      "properties" : {
        "PayRate" : {
          "type" : "string",
          "description" : "Activity pay rate"
        },
        "BillRate" : {
          "type" : "string",
          "description" : "Activity bill rate"
        },
        "CostRate" : {
          "type" : "string",
          "description" : "Activity cost rate"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit information key"
        },
        "ActivityRateKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity rate key"
        },
        "ProfitCenterInfo" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        }
      }
    },
    "ActivityStatusCls" : {
      "type" : "object",
      "required" : [ "ActivityStatusClsKey", "ActivityStatusClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ActivityStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Open, 2 = Complete, 3 = Reschedule, 4 = Cancelled"
        },
        "ActivityStatusClsName" : {
          "type" : "string"
        }
      }
    },
    "AddFee" : {
      "type" : "object",
      "required" : [ "AddFeeCls", "AddFeeClsKey", "AddFeeID", "AddFeeKey", "AddFeeName", "Amount", "IncludeAddFee", "Pct" ],
      "properties" : {
        "Pct" : {
          "type" : "number",
          "format" : "double"
        },
        "Amount" : {
          "type" : "string"
        },
        "AddFeeID" : {
          "type" : "string"
        },
        "AddFeeCls" : {
          "$ref" : "#/definitions/AddFeeCls"
        },
        "AddFeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddFeeName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "AddFeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = FeeOnly, 2 = LaborOnly, 3 = FeeandLabor, 4 = Fee,Labor,andExpenses, 5 = Fee,Labor,Expenses,andConsultants, 6 = TotalInvoice"
        },
        "IncludeAddFee" : {
          "type" : "boolean"
        },
        "RevAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TaxAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccountInfo_RevAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_TaxAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "AddFeeCls" : {
      "type" : "object",
      "required" : [ "AddFeeClsID", "AddFeeClsKey", "AddFeeClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddFeeClsID" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "AddFeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = FeeOnly, 2 = LaborOnly, 3 = FeeandLabor, 4 = Fee,Labor,andExpenses, 5 = Fee,Labor,Expenses,andConsultants, 6 = TotalInvoice"
        },
        "AddFeeClsName" : {
          "type" : "string"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "required" : [ "AddressKey" ],
      "properties" : {
        "City" : {
          "type" : "string",
          "description" : "Address city"
        },
        "Country" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "FaxNumber" : {
          "type" : "string",
          "description" : "Fax number"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Address key"
        },
        "PostalCode" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PhoneNumber" : {
          "type" : "string",
          "description" : "Phone number"
        },
        "AddressLine1" : {
          "type" : "string",
          "description" : "Address line 1"
        },
        "AddressLine2" : {
          "type" : "string",
          "description" : "Address line 2"
        },
        "AddressLine3" : {
          "type" : "string",
          "description" : "Address line 3"
        },
        "AddressLine4" : {
          "type" : "string",
          "description" : "Address line 4"
        },
        "EmailAddress" : {
          "type" : "string",
          "description" : "Email address"
        },
        "StateProvince" : {
          "type" : "string"
        }
      }
    },
    "Adjustment" : {
      "type" : "object",
      "required" : [ "AdjKey", "BillingDate", "Period", "PeriodKey", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "AdjKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Adjustment key"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillingDate" : {
          "type" : "string",
          "format" : "date"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "AdjustmentFee" : {
      "type" : "object",
      "required" : [ "AdjFeeKey", "AdjProjectKey", "AdjustmentProject", "CurrPctComplete", "Fee", "MaximumFee", "PctComplete", "Project", "ProjectKey", "Qty", "Rate" ],
      "properties" : {
        "Fee" : {
          "type" : "string"
        },
        "Qty" : {
          "type" : "string"
        },
        "Rate" : {
          "type" : "string"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "AdjFeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Adjustment fee key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "MaximumFee" : {
          "type" : "string"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PctComplete" : {
          "type" : "number",
          "format" : "double"
        },
        "AdjProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Adjustment project key"
        },
        "BillingComments" : {
          "type" : "string"
        },
        "CurrPctComplete" : {
          "type" : "number",
          "format" : "double"
        },
        "AdjustmentProject" : {
          "$ref" : "#/definitions/AdjustmentProject"
        }
      }
    },
    "AdjustmentLine" : {
      "type" : "object",
      "required" : [ "AdjLineKey", "AdjProjectKey", "AdjustmentProject", "BillLineCls", "BillLineClsKey", "LineKey", "Project", "ProjectKey" ],
      "properties" : {
        "LineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AdjLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Adjustment line key"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "BillLineCls" : {
          "$ref" : "#/definitions/BillLineCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "AdjProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Adjustment project key"
        },
        "BillLineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],
          "example" : "1 = A/PCheckHistory, 2 = A/PCheck, 3 = A/PVoucherHistory, 4 = A/PVoucher, 5 = H/RTimesheetHistory, 6 = H/RTimesheet, 7 = H/RExpenseHistory, 8 = H/RExpense, 9 = G/AJournal, 10 = P/MExpense"
        },
        "BillingComments" : {
          "type" : "string"
        },
        "AdjustmentProject" : {
          "$ref" : "#/definitions/AdjustmentProject"
        }
      }
    },
    "AdjustmentProject" : {
      "type" : "object",
      "required" : [ "AdjKey", "AdjProjectKey", "Adjustment", "ProjectInfo", "ProjectInfoKey" ],
      "properties" : {
        "AdjKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Adjustment key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "Adjustment" : {
          "$ref" : "#/definitions/Adjustment"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "AdjProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Adjustment project key"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project information key"
        }
      }
    },
    "AlphaNumCls" : {
      "type" : "object",
      "required" : [ "AlphaNumClsID", "AlphaNumClsKey", "AlphaNumClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "AlphaNumClsID" : {
          "type" : "string"
        },
        "AlphaNumClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Alphabets, 2 = Numbers, 3 = Both"
        },
        "AlphaNumClsName" : {
          "type" : "string"
        }
      }
    },
    "APDefault" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "InclPctOfPartialPay" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "APAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CCAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "APICAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DiscAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "APCnsAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "APEmpAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InclPctOfPartialPay" : {
          "type" : "boolean"
        },
        "AccountInfo_APAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_CCAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_APICAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DiscAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_APCnsAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_APEmpAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "ARDefault" : {
      "type" : "object",
      "required" : [ "ARAcctInfoKey", "CenterInfoKey", "ProfitCenterInfo" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ARAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProfitCenterInfo" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        }
      }
    },
    "ARDefaultLine" : {
      "type" : "object",
      "required" : [ "AccountInfo_RevAcctInfo", "CenterInfoKey", "RevAcctInfoKey", "RevenueCls", "RevenueClsKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ARAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "RevAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RetainageAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccountInfo_ARAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RevAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RetainageAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "ARStatementCls" : {
      "type" : "object",
      "required" : [ "ARStatementClsKey", "ARStatementClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ARStatementClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = InvoiceDetail, 3 = TotalHistory"
        },
        "ARStatementClsName" : {
          "type" : "string"
        }
      }
    },
    "BillCycleCls" : {
      "type" : "object",
      "required" : [ "BillCycleClsKey", "BillCycleClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BillCycleClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill cycle class key"
        },
        "BillCycleClsName" : {
          "type" : "string",
          "description" : "Bill cycle class name"
        }
      }
    },
    "Billing" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "FlagAsBilled", "InvNumberCls", "InvNumberClsKey", "Multiplier1", "Multiplier2", "Multiplier3", "Multiplier4", "NextInvNumber" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Multiplier1" : {
          "type" : "number",
          "format" : "double"
        },
        "Multiplier2" : {
          "type" : "number",
          "format" : "double"
        },
        "Multiplier3" : {
          "type" : "number",
          "format" : "double"
        },
        "Multiplier4" : {
          "type" : "number",
          "format" : "double"
        },
        "FlagAsBilled" : {
          "type" : "boolean"
        },
        "InvNumberCls" : {
          "$ref" : "#/definitions/InvNumberCls"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "NextInvNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvNumberClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Company, 2 = Client, 3 = Project"
        },
        "Multiplier1Label" : {
          "type" : "string"
        },
        "Multiplier2Label" : {
          "type" : "string"
        },
        "Multiplier3Label" : {
          "type" : "string"
        },
        "Multiplier4Label" : {
          "type" : "string"
        }
      }
    },
    "BillingModCls" : {
      "type" : "object",
      "required" : [ "BillingModClsID", "BillingModClsKey", "BillingModClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BillingModClsID" : {
          "type" : "string"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        },
        "BillingModClsName" : {
          "type" : "string"
        }
      }
    },
    "BillLineCls" : {
      "type" : "object",
      "required" : [ "BillLineClsKey", "BillLineClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BillLineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],
          "example" : "1 = A/PCheckHistory, 2 = A/PCheck, 3 = A/PVoucherHistory, 4 = A/PVoucher, 5 = H/RTimesheetHistory, 6 = H/RTimesheet, 7 = H/RExpenseHistory, 8 = H/RExpense, 9 = G/AJournal, 10 = P/MExpense"
        },
        "BillLineClsName" : {
          "type" : "string"
        }
      }
    },
    "BillStatusCls" : {
      "type" : "object",
      "required" : [ "BillStatusClsID", "BillStatusClsKey", "BillStatusClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BillStatusClsID" : {
          "type" : "string",
          "description" : "Bill status class identifier"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillStatusClsName" : {
          "type" : "string",
          "description" : "Bill status class key"
        }
      }
    },
    "BillTerm" : {
      "type" : "object",
      "required" : [ "BillTermKey", "BillTermName", "NumberOfDays" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillTermKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill term key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BillTermName" : {
          "type" : "string",
          "description" : "Bill term name"
        },
        "NumberOfDays" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "BTDCls" : {
      "type" : "object",
      "required" : [ "BTDClsKey", "BTDClsName" ],
      "properties" : {
        "BTDClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill-to-date class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = InvoiceDetail, 3 = TotalHistory"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BTDClsName" : {
          "type" : "string",
          "description" : "Bill-to-date class name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Budget" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "IsCash", "Period", "PeriodKey" ],
      "properties" : {
        "Amount" : {
          "type" : "string"
        },
        "IsCash" : {
          "type" : "boolean"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "BudgetCls" : {
      "type" : "object",
      "required" : [ "BudgetClsID", "BudgetClsKey", "BudgetClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BudgetClsID" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BudgetClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Cost, 2 = Bill"
        },
        "BudgetClsName" : {
          "type" : "string"
        }
      }
    },
    "BudgetMsgCls" : {
      "type" : "object",
      "required" : [ "BudgetMsgClsID", "BudgetMsgClsKey", "BudgetMsgClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BudgetMsgClsID" : {
          "type" : "string"
        },
        "BudgetMsgClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BudgetMsgClsName" : {
          "type" : "string"
        }
      }
    },
    "CategoryCls" : {
      "type" : "object",
      "required" : [ "CategoryClsKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CategoryClsID" : {
          "type" : "string"
        },
        "CategoryClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CategoryClsName" : {
          "type" : "string"
        }
      }
    },
    "ChangeBillStatus" : {
      "type" : "object",
      "required" : [ "BillStatusCls_ToBillStatusCls", "DoChecks", "DoExpenses", "DoJournals", "DoTimesheets", "DoVendorInvoices", "EndDate", "ExcludeBilled", "StartDate", "ToBillStatusClsKey", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "EndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DoChecks" : {
          "type" : "boolean"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EndPeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "DoExpenses" : {
          "type" : "boolean"
        },
        "DoJournals" : {
          "type" : "boolean"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "StartPeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DoTimesheets" : {
          "type" : "boolean"
        },
        "ExcludeBilled" : {
          "type" : "boolean"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DoVendorInvoices" : {
          "type" : "boolean"
        },
        "ToBillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "FromBillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillStatusCls_ToBillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillStatusCls_FromBillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        }
      }
    },
    "ChangeBillStatusLine" : {
      "type" : "object",
      "required" : [ "BillLineCls", "BillLineClsKey", "ChangeBillStatus", "LineKey", "NewBillStatusClsKey", "Project", "ProjectKey", "TransDate", "UserKey" ],
      "properties" : {
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "LineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "TransDate" : {
          "type" : "string",
          "format" : "date"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillLineCls" : {
          "$ref" : "#/definitions/BillLineCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillLineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],
          "example" : "1 = A/PCheckHistory, 2 = A/PCheck, 3 = A/PVoucherHistory, 4 = A/PVoucher, 5 = H/RTimesheetHistory, 6 = H/RTimesheet, 7 = H/RExpenseHistory, 8 = H/RExpense, 9 = G/AJournal, 10 = P/MExpense"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ChangeBillStatus" : {
          "$ref" : "#/definitions/ChangeBillStatus"
        },
        "NewBillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Check" : {
      "type" : "object",
      "required" : [ "Account_BankAcct", "BankAcctKey", "CheckCls", "CheckClsKey", "CheckDate", "CheckID", "CheckKey" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "CheckID" : {
          "type" : "string",
          "description" : "Check number, identifier, or control number"
        },
        "CheckCls" : {
          "$ref" : "#/definitions/CheckCls"
        },
        "CheckKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check key"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Check line comments"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CheckDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Check date"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OtherName" : {
          "type" : "string",
          "description" : "Other payee name (free form text)"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bank g/l account key"
        },
        "CheckClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check class key; 1=Vendor, 2=Employee, 3=Client, 4=Other",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Vendor, 2 = Employee, 3 = Client, 4 = Other"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "Account_BankAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "CheckAudit" : {
      "type" : "object",
      "required" : [ "CheckAuditKey", "CheckLine", "CheckLineKey", "CheckRev", "CheckRevKey" ],
      "properties" : {
        "CheckRev" : {
          "$ref" : "#/definitions/CheckRev"
        },
        "CheckLine" : {
          "$ref" : "#/definitions/CheckLine"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CheckRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check revision key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CheckLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check line key"
        },
        "CheckAuditKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check audit key"
        }
      }
    },
    "CheckCash" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "Check", "CheckCashKey", "CheckKey", "LineCls", "LineClsKey", "PeriodID" ],
      "properties" : {
        "Check" : {
          "$ref" : "#/definitions/Check"
        },
        "Amount" : {
          "type" : "string",
          "description" : "Posted amount"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "TransID" : {
          "type" : "string"
        },
        "CheckKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "G/L period identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Line class;1=Control,2=Distribution",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CheckCashKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check cash key"
        }
      }
    },
    "CheckCls" : {
      "type" : "object",
      "required" : [ "CheckClsID", "CheckClsKey", "CheckClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CheckClsID" : {
          "type" : "string",
          "description" : "Check class identifier"
        },
        "CheckClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check class key",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Vendor, 2 = Employee, 3 = Client, 4 = Other"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CheckClsName" : {
          "type" : "string",
          "description" : "Check class name"
        }
      }
    },
    "CheckHistory" : {
      "type" : "object",
      "required" : [ "Account_BankAcct", "BankAcctKey", "CheckCls", "CheckClsKey", "CheckDate", "CheckHistoryKey", "CheckID" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "CheckID" : {
          "type" : "string",
          "description" : "Check number, identifier, or control number"
        },
        "CheckCls" : {
          "$ref" : "#/definitions/CheckCls"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Check comments"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CheckDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Check date"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OtherName" : {
          "type" : "string",
          "description" : "Other payee (free form text)"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bank g/l account key"
        },
        "CheckClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check class key; 1=Vendor, 2=Employee, 3=Client, 4=Other",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Vendor, 2 = Employee, 3 = Client, 4 = Other"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "CheckHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check history key"
        },
        "Account_BankAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "CheckHistoryLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "BillAmount", "CheckHistory", "CheckHistoryKey", "CheckHistoryLineKey", "LineCls", "LineClsKey", "Multiplier", "Period", "PeriodID", "Qty", "UnitRate" ],
      "properties" : {
        "Qty" : {
          "type" : "string",
          "description" : "Distribution quantity"
        },
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "G/L distribution account key"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "TransID" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Check line comments"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting identifier"
        },
        "UnitRate" : {
          "type" : "string",
          "description" : "Unit rate"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string",
          "description" : "Bill amount"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense type key"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Line class;1=Control,2=Distribution",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Distribution line markup"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "CheckHistory" : {
          "$ref" : "#/definitions/CheckHistory"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "CheckHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check history key"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        },
        "CheckHistoryLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check history line key"
        }
      }
    },
    "CheckLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "BillAmount", "CheckLineKey", "CheckRev", "CheckRevKey", "InAudit", "InCommon", "LineCls", "LineClsKey", "Multiplier", "Period", "PeriodID", "Qty", "UnitRate" ],
      "properties" : {
        "Qty" : {
          "type" : "string",
          "description" : "Distribution wuantity"
        },
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "G/L distribution account key"
        },
        "InAudit" : {
          "type" : "boolean"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "TransID" : {
          "type" : "string"
        },
        "CheckRev" : {
          "$ref" : "#/definitions/CheckRev"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Check line comments"
        },
        "InCommon" : {
          "type" : "boolean"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting identifier"
        },
        "UnitRate" : {
          "type" : "string",
          "description" : "Unit rate"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string",
          "description" : "Bill amount"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense type key"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Invoice key the line is linked to"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Line class;1=Control,2=Distribution",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Distribution line markup"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CheckRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check revision key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "CheckLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check line key"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        }
      }
    },
    "CheckRev" : {
      "type" : "object",
      "required" : [ "Check", "CheckKey", "CheckRevKey", "Period", "PeriodKey", "RevNum" ],
      "properties" : {
        "Check" : {
          "$ref" : "#/definitions/Check"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revision number"
        },
        "CheckKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check key"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CheckRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check revision key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Client" : {
      "type" : "object",
      "required" : [ "ClientKey", "Company", "CompanyKey", "StatusCls", "StatusClsKey" ],
      "properties" : {
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "Company" : {
          "$ref" : "#/definitions/Company"
        },
        "BillTerm" : {
          "$ref" : "#/definitions/BillTerm"
        },
        "Comments" : {
          "type" : "string"
        },
        "ClientCls" : {
          "$ref" : "#/definitions/ClientCls"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "MarketCls" : {
          "$ref" : "#/definitions/MarketCls"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Address key"
        },
        "CompanyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Company key"
        },
        "BillTermKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ClientClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client class key"
        },
        "MarketClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market class key"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status class key; 1=Active, 2=Inactive",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "NextInvNumber" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ClientBilling" : {
      "type" : "object",
      "required" : [ "Client", "ClientKey", "IncludeBudget", "IncludeCO", "IncludeCnsBackup", "IncludeCnsMultiplier", "IncludeExpBackup", "IncludeExpMultiplier", "IncludeInterest", "IncludeLaborBackup", "InvCnsSeparately", "InvExpSeparately" ],
      "properties" : {
        "EMKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BTDCls" : {
          "$ref" : "#/definitions/BTDCls"
        },
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "FeeCls" : {
          "$ref" : "#/definitions/FeeCls"
        },
        "CnsEMKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PayLRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BTDClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = InvoiceDetail, 3 = TotalHistory"
        },
        "BillLRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CostLRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "FeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8 ],
          "example" : "1 = TimeandMaterials, 2 = LumpSum, 3 = LumpSumwithPercentComplete, 4 = MonthlyFee, 5 = MonthlyFeetoMax, 6 = UnitBilling, 7 = FeebyPhasewithPercentComplete, 8 = PercentofConstruction"
        },
        "IncludeCO" : {
          "type" : "boolean"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Multiplier1" : {
          "type" : "number",
          "format" : "double"
        },
        "Multiplier2" : {
          "type" : "number",
          "format" : "double"
        },
        "Multiplier3" : {
          "type" : "number",
          "format" : "double"
        },
        "Multiplier4" : {
          "type" : "number",
          "format" : "double"
        },
        "BillCycleCls" : {
          "$ref" : "#/definitions/BillCycleCls"
        },
        "CnsDetailCls" : {
          "$ref" : "#/definitions/CnsDetailCls"
        },
        "ExpDetailCls" : {
          "$ref" : "#/definitions/ExpDetailCls"
        },
        "InvDesignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OTPremiumKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "CnsMultiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "ExpMultiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "IncludeBudget" : {
          "type" : "boolean"
        },
        "OTMultiplier1" : {
          "type" : "number",
          "format" : "double"
        },
        "OTMultiplier2" : {
          "type" : "number",
          "format" : "double"
        },
        "ARStatementCls" : {
          "$ref" : "#/definitions/ARStatementCls"
        },
        "BillCycleClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CnsDetailClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = ConsultantDetail, 3 = TransactionDetail"
        },
        "ExpDetailClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = VendorDetail, 3 = TransactionDetail"
        },
        "IncludeInterest" : {
          "type" : "boolean"
        },
        "InvCnsDesignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvExpDesignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborRate_PayLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "IncludeCnsBackup" : {
          "type" : "boolean"
        },
        "IncludeExpBackup" : {
          "type" : "boolean"
        },
        "InvCnsSeparately" : {
          "type" : "boolean"
        },
        "InvExpSeparately" : {
          "type" : "boolean"
        },
        "LaborRate_BillLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "LaborRate_CostLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "LaborSort1ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = EmployeeName, 2 = StaffLevel, 3 = Date"
        },
        "LaborSort2ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = EmployeeName, 2 = StaffLevel, 3 = Date"
        },
        "LaborSort3ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = EmployeeName, 2 = StaffLevel, 3 = Date"
        },
        "ARStatementClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = InvoiceDetail, 3 = TotalHistory"
        },
        "ExpenseMultiplier" : {
          "$ref" : "#/definitions/ExpenseMultiplier"
        },
        "OverrideBillLRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "IncludeLaborBackup" : {
          "type" : "boolean"
        },
        "IncludeCnsMultiplier" : {
          "type" : "boolean"
        },
        "IncludeExpMultiplier" : {
          "type" : "boolean"
        },
        "ExpenseMultiplier_CnsEM" : {
          "$ref" : "#/definitions/ExpenseMultiplier"
        },
        "InvoiceDesign_InvDesign" : {
          "$ref" : "#/definitions/InvoiceDesign"
        },
        "LaborRate_OverrideBillLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "InvoiceDesign_InvCnsDesign" : {
          "$ref" : "#/definitions/InvoiceDesign"
        },
        "InvoiceDesign_InvExpDesign" : {
          "$ref" : "#/definitions/InvoiceDesign"
        },
        "LaborSortCls_LaborSort1Cls" : {
          "$ref" : "#/definitions/LaborSortCls"
        },
        "LaborSortCls_LaborSort2Cls" : {
          "$ref" : "#/definitions/LaborSortCls"
        },
        "LaborSortCls_LaborSort3Cls" : {
          "$ref" : "#/definitions/LaborSortCls"
        }
      }
    },
    "ClientCls" : {
      "type" : "object",
      "required" : [ "ClientClsKey", "ClientClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ClientClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client class key"
        },
        "ClientClsName" : {
          "type" : "string",
          "description" : "Client class name"
        }
      }
    },
    "ClientRoleCls" : {
      "type" : "object",
      "required" : [ "ClientRoleClsKey", "ClientRoleClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ClientRoleClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ClientRoleClsName" : {
          "type" : "string"
        }
      }
    },
    "CnsDetailCls" : {
      "type" : "object",
      "required" : [ "CnsDetailClsKey", "CnsDetailClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CnsDetailClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Consultant detail class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = ConsultantDetail, 3 = TransactionDetail"
        },
        "CnsDetailClsName" : {
          "type" : "string",
          "description" : "Consultant detail class name"
        }
      }
    },
    "Column" : {
      "type" : "object",
      "required" : [ "ColumnKey", "ColumnName", "Encrypted", "Nullable", "Primary", "TableKey" ],
      "properties" : {
        "Primary" : {
          "type" : "boolean"
        },
        "DataType" : {
          "type" : "string",
          "description" : "Column data tyoe"
        },
        "Nullable" : {
          "type" : "boolean"
        },
        "TableKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Table key"
        },
        "ColumnKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Column key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "Encrypted" : {
          "type" : "boolean"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ColumnName" : {
          "type" : "string",
          "description" : "Column name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "FriendlyName" : {
          "type" : "string"
        },
        "ForeignColumnKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Foreign key reference key"
        },
        "ColumnDescription" : {
          "type" : "string",
          "description" : "Column description"
        }
      }
    },
    "Company" : {
      "type" : "object",
      "required" : [ "CenterKey", "CompanyID", "CompanyKey", "CompanyName", "ProfitCenterInfo_Center" ],
      "properties" : {
        "Website" : {
          "type" : "string",
          "description" : "Website"
        },
        "CenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CompanyID" : {
          "type" : "string",
          "description" : "Company identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CompanyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Company key"
        },
        "CompanyName" : {
          "type" : "string",
          "description" : "Company name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProfitCenterInfo_Center" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        }
      }
    },
    "CompanyOffice" : {
      "type" : "object",
      "required" : [ "Address", "AddressKey", "Company", "CompanyKey", "IsHeadquarters", "OfficeID", "OfficeKey", "OfficeName" ],
      "properties" : {
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "Company" : {
          "$ref" : "#/definitions/Company"
        },
        "OfficeID" : {
          "type" : "string",
          "description" : "Office identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OfficeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Company office key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Address key"
        },
        "CompanyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Company key"
        },
        "OfficeName" : {
          "type" : "string",
          "description" : "Office name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "IsHeadquarters" : {
          "type" : "boolean"
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "required" : [ "ContactKey", "ContactName", "FirstName", "LastName", "YearsExperience" ],
      "properties" : {
        "Title" : {
          "type" : "string",
          "description" : "Contact title"
        },
        "Office" : {
          "$ref" : "#/definitions/Office"
        },
        "Prefix" : {
          "type" : "string",
          "description" : "Contact prefix"
        },
        "Suffix" : {
          "type" : "string",
          "description" : "Contact suffix"
        },
        "Company" : {
          "$ref" : "#/definitions/Company"
        },
        "WorkFax" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Contact comments"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "LastName" : {
          "type" : "string",
          "description" : "Contact last name"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EthnicCls" : {
          "$ref" : "#/definitions/EthnicCls"
        },
        "FirstName" : {
          "type" : "string",
          "description" : "Contact first name"
        },
        "GenderCls" : {
          "$ref" : "#/definitions/GenderCls"
        },
        "HomePhone" : {
          "type" : "string",
          "description" : "Contact home phone"
        },
        "OfficeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Office key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "WorkPhone" : {
          "type" : "string"
        },
        "CompanyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Company key accociated with this contact"
        },
        "ContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Contact key"
        },
        "MiddleName" : {
          "type" : "string",
          "description" : "Contact middle name"
        },
        "OtherPhone" : {
          "type" : "string",
          "description" : "Contact other phone"
        },
        "SpouseName" : {
          "type" : "string",
          "description" : "Contact spouse name"
        },
        "CharityName" : {
          "type" : "string",
          "description" : "Charity name"
        },
        "ContactName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DateOfBirth" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contact date of birth"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key associated with this contact"
        },
        "EthnicClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "GenderClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "WorkPhoneExt" : {
          "type" : "string"
        },
        "HomeCellPhone" : {
          "type" : "string"
        },
        "PreferredName" : {
          "type" : "string",
          "description" : "Contact preferred name"
        },
        "SportEventCls" : {
          "$ref" : "#/definitions/SportEventCls"
        },
        "WorkCellPhone" : {
          "type" : "string"
        },
        "YearsExperience" : {
          "type" : "integer",
          "format" : "int32"
        },
        "HomeEmailAddress" : {
          "type" : "string",
          "description" : "Contact home email address"
        },
        "SportActivityCls" : {
          "$ref" : "#/definitions/SportActivityCls"
        },
        "SportEventClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Sport event class key"
        },
        "WorkEmailAddress" : {
          "type" : "string"
        },
        "PoliticalInterest" : {
          "type" : "string",
          "description" : "Political interest"
        },
        "SportActivityClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Sport activity class key"
        }
      }
    },
    "ContactChild" : {
      "type" : "object",
      "required" : [ "ChildKey", "ChildName", "Contact", "ContactKey" ],
      "properties" : {
        "Contact" : {
          "$ref" : "#/definitions/Contact"
        },
        "ChildKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Child key"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Child comments"
        },
        "ChildName" : {
          "type" : "string",
          "description" : "Contact child name"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Contact associated with this child"
        },
        "SchoolName" : {
          "type" : "string",
          "description" : "Child school name"
        },
        "ActivityCls" : {
          "$ref" : "#/definitions/ActivityCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ActivityClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity class key"
        }
      }
    },
    "ContactMarket" : {
      "type" : "object",
      "required" : [ "Contact", "ContactKey", "IsEmail", "IsEvent", "IsGift", "IsHolidayCard", "IsNewsletter", "IsPromotional", "MarketKey" ],
      "properties" : {
        "IsGift" : {
          "type" : "boolean"
        },
        "Contact" : {
          "$ref" : "#/definitions/Contact"
        },
        "GiftCls" : {
          "$ref" : "#/definitions/GiftCls"
        },
        "IsEmail" : {
          "type" : "boolean"
        },
        "IsEvent" : {
          "type" : "boolean"
        },
        "Twitter" : {
          "type" : "string",
          "description" : "Twitter address"
        },
        "EventCls" : {
          "$ref" : "#/definitions/EventCls"
        },
        "Facebook" : {
          "type" : "string",
          "description" : "Facebook address"
        },
        "LinkedIN" : {
          "type" : "string",
          "description" : "LinkedIN address"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "MarketKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Contact key"
        },
        "GiftClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Gift class key"
        },
        "ProgramCls" : {
          "$ref" : "#/definitions/ProgramCls"
        },
        "SourceName" : {
          "type" : "string",
          "description" : "Source name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EventClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Event class key"
        },
        "RelationCls" : {
          "$ref" : "#/definitions/RelationCls"
        },
        "IsNewsletter" : {
          "type" : "boolean"
        },
        "IsHolidayCard" : {
          "type" : "boolean"
        },
        "IsPromotional" : {
          "type" : "boolean"
        },
        "ProgramClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Program class key"
        },
        "RelationClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Relationship class key"
        },
        "WorkEmailAddress" : {
          "type" : "string",
          "description" : "Work email address"
        }
      }
    },
    "Country" : {
      "type" : "object",
      "required" : [ "CountryID", "CountryKey", "CountryName" ],
      "properties" : {
        "CountryID" : {
          "type" : "string",
          "description" : "Country identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CountryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Country key"
        },
        "CountryName" : {
          "type" : "string",
          "description" : "Country name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "CreditCard" : {
      "type" : "object",
      "required" : [ "CCID", "CCKey" ],
      "properties" : {
        "CCID" : {
          "type" : "string"
        },
        "CCKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CCName" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Currency" : {
      "type" : "object",
      "required" : [ "CurrencyID", "CurrencyKey", "CurrencyName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CurrencyID" : {
          "type" : "string",
          "description" : "Currency identifier"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CurrencyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Currency key"
        },
        "CurrencyName" : {
          "type" : "string",
          "description" : "Currency name"
        }
      }
    },
    "Document" : {
      "type" : "object",
      "required" : [ "DocumentGUID", "DocumentKey", "DocumentName" ],
      "properties" : {
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Document key"
        },
        "DocumentGUID" : {
          "type" : "string"
        },
        "DocumentName" : {
          "type" : "string",
          "description" : "Document name"
        }
      }
    },
    "DocumentActivity" : {
      "type" : "object",
      "required" : [ "Activity", "ActivityKey", "Document", "DocumentKey" ],
      "properties" : {
        "Activity" : {
          "$ref" : "#/definitions/Activity"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentCheck" : {
      "type" : "object",
      "required" : [ "Check", "CheckKey", "Document", "DocumentKey" ],
      "properties" : {
        "Check" : {
          "$ref" : "#/definitions/Check"
        },
        "CheckKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentClient" : {
      "type" : "object",
      "required" : [ "Client", "ClientKey", "Document", "DocumentKey" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentEmployee" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "Employee", "EmployeeKey" ],
      "properties" : {
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentEmployeePay" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "EmployeePay", "PayKey" ],
      "properties" : {
        "PayKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EmployeePay" : {
          "$ref" : "#/definitions/EmployeePay"
        }
      }
    },
    "DocumentExp" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "ExpKey", "Expense" ],
      "properties" : {
        "ExpKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Expense" : {
          "$ref" : "#/definitions/Expense"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentExpLine" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "ExpLineKey", "ExpenseLine" ],
      "properties" : {
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ExpLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseLine" : {
          "$ref" : "#/definitions/ExpenseLine"
        }
      }
    },
    "DocumentInvoice" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "Invoice", "InvoiceKey" ],
      "properties" : {
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentJournal" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "Journal", "JournalKey" ],
      "properties" : {
        "Journal" : {
          "$ref" : "#/definitions/Journal"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "JournalKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentReceipt" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "Receipt", "ReceiptKey" ],
      "properties" : {
        "Receipt" : {
          "$ref" : "#/definitions/Receipt"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ReceiptKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentTime" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "Time", "TimeKey" ],
      "properties" : {
        "Time" : {
          "$ref" : "#/definitions/Time"
        },
        "TimeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentVendor" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "Vendor", "VendorKey" ],
      "properties" : {
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DocumentVoucher" : {
      "type" : "object",
      "required" : [ "Document", "DocumentKey", "Voucher", "VoucherKey" ],
      "properties" : {
        "Voucher" : {
          "$ref" : "#/definitions/Voucher"
        },
        "Document" : {
          "$ref" : "#/definitions/Document"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VoucherKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DocumentKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "EMCls" : {
      "type" : "object",
      "required" : [ "EMClsID", "EMClsKey", "EMClsName" ],
      "properties" : {
        "EMClsID" : {
          "type" : "string",
          "description" : "Expense markup class identifier"
        },
        "EMClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup class key",
          "enum" : [ 1, 2 ],
          "example" : "1 = ExpenseType, 2 = Vendor"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EMClsName" : {
          "type" : "string",
          "description" : "Expense markup class name"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "EmergencyContact" : {
      "type" : "object",
      "required" : [ "ECKey", "Employee", "EmployeeKey", "Name" ],
      "properties" : {
        "Name" : {
          "type" : "string"
        },
        "ECKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Employee" : {
      "type" : "object",
      "required" : [ "CenterKey", "EmployeeID", "EmployeeKey", "EmployeeName", "EmployeeStatusCls", "EmployeeStatusClsKey", "FirstName", "HireDate", "HoursPerDay", "IsPrincipalOwner", "IsSubcontractor", "LastName", "ProfitCenter", "TargetRatio" ],
      "properties" : {
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TSCls" : {
          "$ref" : "#/definitions/TSCls"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Comments" : {
          "type" : "string"
        },
        "HireDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Employee hire date"
        },
        "LastName" : {
          "type" : "string",
          "description" : "Employee last name"
        },
        "Location" : {
          "$ref" : "#/definitions/Location"
        },
        "TSClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = Weekly, 2 = Bi-weekly, 3 = Semi-monthly, 4 = Monthly, 5 = Daily"
        },
        "CenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "FirstName" : {
          "type" : "string",
          "description" : "Employee first name"
        },
        "PayPeriod" : {
          "$ref" : "#/definitions/PayPeriod"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "EmployeeID" : {
          "type" : "string",
          "description" : "Employee identifier"
        },
        "MiddleName" : {
          "type" : "string"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeCls" : {
          "$ref" : "#/definitions/EmployeeCls"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "HoursPerDay" : {
          "type" : "string",
          "description" : "Hours per day"
        },
        "LocationKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Default location key"
        },
        "TargetRatio" : {
          "type" : "number",
          "format" : "double"
        },
        "EmployeeName" : {
          "type" : "string"
        },
        "PayPeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pay period key"
        },
        "ProfitCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "EmployeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee class key",
          "enum" : [ 1, 2 ],
          "example" : "1 = Full, 2 = Part-time"
        },
        "SupEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Supervisor employee key"
        },
        "IsSubcontractor" : {
          "type" : "boolean"
        },
        "TerminationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Employee termination date"
        },
        "IsPrincipalOwner" : {
          "type" : "boolean"
        },
        "EmployeeStatusCls" : {
          "$ref" : "#/definitions/EmployeeStatusCls"
        },
        "EmployeeStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Active, 2 = Inactive, 3 = Terminated"
        },
        "Employee_SupEmployee" : {
          "$ref" : "#/definitions/Employee"
        }
      }
    },
    "EmployeeAccount" : {
      "type" : "object",
      "required" : [ "CostRate", "Employee", "EmployeeKey", "OT1Rate", "OT2Rate", "PayRate", "Salary", "SalaryCls", "SalaryClsKey" ],
      "properties" : {
        "SSN" : {
          "type" : "string"
        },
        "Salary" : {
          "type" : "string"
        },
        "OT1Rate" : {
          "type" : "string"
        },
        "OT2Rate" : {
          "type" : "string"
        },
        "PayRate" : {
          "type" : "string"
        },
        "CostRate" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "SalaryCls" : {
          "$ref" : "#/definitions/SalaryCls"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SalaryClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Salary, 2 = Hourly"
        }
      }
    },
    "EmployeeAutoCheck" : {
      "type" : "object",
      "required" : [ "Account_BankAcct", "BankAcctKey", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Account_BankAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "EmployeeAutoCheckEmployee" : {
      "type" : "object",
      "required" : [ "AcctKey", "BankAcctKey", "CheckAmount", "CheckDate", "EmployeeAutoCheck", "EmployeeKey", "ExpID", "IsReprint", "IsVoid", "UserKey" ],
      "properties" : {
        "Check" : {
          "$ref" : "#/definitions/Check"
        },
        "ExpID" : {
          "type" : "string"
        },
        "IsVoid" : {
          "type" : "boolean"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CheckID" : {
          "type" : "string"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CheckKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CheckDate" : {
          "type" : "string",
          "format" : "date"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "IsReprint" : {
          "type" : "boolean"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CheckAmount" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EmployeeAutoCheck" : {
          "$ref" : "#/definitions/EmployeeAutoCheck"
        }
      }
    },
    "EmployeeAutoCheckPost" : {
      "type" : "object",
      "required" : [ "AcctKey", "BankAcctKey", "EmployeeKey", "ExpAmount", "ExpBalance", "ExpDate", "ExpDue", "ExpID", "PostAmount", "UserKey" ],
      "properties" : {
        "ExpID" : {
          "type" : "string"
        },
        "ExpDue" : {
          "type" : "string"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CheckID" : {
          "type" : "string"
        },
        "ExpDate" : {
          "type" : "string",
          "format" : "date"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ExpAmount" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ExpBalance" : {
          "type" : "string"
        },
        "PostAmount" : {
          "type" : "string"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "EmployeeCC" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey" ],
      "properties" : {
        "CC1Key" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CC2Key" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CC3Key" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreditCard_CC1" : {
          "$ref" : "#/definitions/CreditCard"
        },
        "CreditCard_CC2" : {
          "$ref" : "#/definitions/CreditCard"
        },
        "CreditCard_CC3" : {
          "$ref" : "#/definitions/CreditCard"
        }
      }
    },
    "EmployeeClient" : {
      "type" : "object",
      "required" : [ "Client", "ClientKey", "Employee", "EmployeeClientKey", "EmployeeKey" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client associated with this employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee associated with this client"
        },
        "ClientRoleCls" : {
          "$ref" : "#/definitions/ClientRoleCls"
        },
        "ClientRoleClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EmployeeClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee client key"
        }
      }
    },
    "EmployeeCls" : {
      "type" : "object",
      "required" : [ "EmployeeClsID", "EmployeeClsKey", "EmployeeClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeClsID" : {
          "type" : "string",
          "description" : "Employee class identifier"
        },
        "EmployeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee class key",
          "enum" : [ 1, 2 ],
          "example" : "1 = Full, 2 = Part-time"
        },
        "EmployeeClsName" : {
          "type" : "string",
          "description" : "Employee class name"
        }
      }
    },
    "EmployeeContact" : {
      "type" : "object",
      "required" : [ "Contact", "ContactKey", "Employee", "EmployeeContactKey", "EmployeeKey" ],
      "properties" : {
        "Contact" : {
          "$ref" : "#/definitions/Contact"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Contact key associated with this employee"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key associated with this contact"
        },
        "EmployeeContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee contact key"
        }
      }
    },
    "EmployeeEFT" : {
      "type" : "object",
      "required" : [ "AccountNumber", "Amount", "CheckClsKey", "EFTClsKey", "Employee", "EmployeeEFTKey", "EmployeeKey", "IsExcess", "Percentage", "RoutingNumber" ],
      "properties" : {
        "Amount" : {
          "type" : "string",
          "description" : "EFT Amount"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "IsExcess" : {
          "type" : "boolean"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EFTClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "EFT class key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "Percentage" : {
          "type" : "string",
          "description" : "EFT posting percentage"
        },
        "CheckClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check class key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "AccountNumber" : {
          "type" : "string",
          "description" : "Bank account number"
        },
        "RoutingNumber" : {
          "type" : "string",
          "description" : "Bank routing number"
        },
        "EmployeeEFTKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee EFT key"
        }
      }
    },
    "EmployeePay" : {
      "type" : "object",
      "required" : [ "CostRate", "EffectiveDate", "Employee", "EmployeeKey", "OT1Rate", "OT2Rate", "PayKey", "PayRate", "Salary", "TargetRatio" ],
      "properties" : {
        "PayKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pay key"
        },
        "Salary" : {
          "type" : "string",
          "description" : "Salary"
        },
        "OT1Rate" : {
          "type" : "string",
          "description" : "Overtime rate 1"
        },
        "OT2Rate" : {
          "type" : "string",
          "description" : "Overtime rate 2"
        },
        "PayRate" : {
          "type" : "string",
          "description" : "Pay rate"
        },
        "Comments" : {
          "type" : "string"
        },
        "CostRate" : {
          "type" : "string",
          "description" : "Cost rate"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ReviewDate" : {
          "type" : "string",
          "format" : "date"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "TargetRatio" : {
          "type" : "string",
          "description" : "Target ratio"
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date"
        },
        "MgrEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "EmployeePicture" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "PictureName", "PictureStream" ],
      "properties" : {
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PictureName" : {
          "type" : "string"
        },
        "PictureStream" : {
          "type" : "string"
        }
      }
    },
    "EmployeeSchedule" : {
      "type" : "object",
      "required" : [ "BillRate", "CostRate", "Employee", "EmployeeKey", "HoursPerDay", "UseStdWorkWeek" ],
      "properties" : {
        "BillRate" : {
          "type" : "string"
        },
        "CostRate" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "HoursPerDay" : {
          "type" : "string"
        },
        "UseStdWorkWeek" : {
          "type" : "boolean"
        }
      }
    },
    "EmployeeStatusCls" : {
      "type" : "object",
      "required" : [ "EmployeeStatusClsID", "EmployeeStatusClsKey", "EmployeeStatusClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeStatusClsID" : {
          "type" : "string"
        },
        "EmployeeStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Active, 2 = Inactive, 3 = Terminated"
        },
        "EmployeeStatusClsName" : {
          "type" : "string"
        }
      }
    },
    "EmployeeVendor" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "EmployeeVendorKey", "Vendor", "VendorKey" ],
      "properties" : {
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key associated with this employee"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key associated with this vendor"
        },
        "EmployeeVendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee vendor key"
        }
      }
    },
    "EmployeeWeek" : {
      "type" : "object",
      "required" : [ "DayOfWeek", "Employee", "EmployeeKey", "Hours" ],
      "properties" : {
        "Hours" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "DayOfWeek" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ESSetting" : {
      "type" : "object",
      "required" : [ "AllowChangeBS", "AllowGovtContract", "AllowTax", "CenterInfoKey" ],
      "properties" : {
        "AllowTax" : {
          "type" : "boolean"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "AllowChangeBS" : {
          "type" : "boolean"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AllowGovtContract" : {
          "type" : "boolean"
        }
      }
    },
    "EthnicCls" : {
      "type" : "object",
      "required" : [ "EthnicClsKey", "EthnicClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EthnicClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EthnicClsName" : {
          "type" : "string"
        }
      }
    },
    "EventCls" : {
      "type" : "object",
      "required" : [ "EventClsKey", "EventClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EventClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EventClsName" : {
          "type" : "string"
        }
      }
    },
    "ExceptionLog" : {
      "type" : "object",
      "required" : [ "ErrorLine", "ErrorMessage", "ErrorNumber", "ErrorProcedure", "ErrorSeverity", "LogKey", "ProcessDesc", "SPID" ],
      "properties" : {
        "SPID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "SQL process identifier"
        },
        "LogKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Exception log key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ErrorLine" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Error line"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ErrorNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Error number"
        },
        "ProcessDesc" : {
          "type" : "string",
          "description" : "Process description"
        },
        "ErrorMessage" : {
          "type" : "string",
          "description" : "Error message"
        },
        "ErrorSeverity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Error severity"
        },
        "ErrorProcedure" : {
          "type" : "string",
          "description" : "Error procedure"
        }
      }
    },
    "ExpDetailCls" : {
      "type" : "object",
      "required" : [ "ExpDetailClsKey", "ExpDetailClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpDetailClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense detail class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = VendorDetail, 3 = TransactionDetail"
        },
        "ExpDetailClsName" : {
          "type" : "string",
          "description" : "Expense detail class name"
        }
      }
    },
    "Expense" : {
      "type" : "object",
      "required" : [ "Account_ESAcct", "ESAcctKey", "Employee", "EmployeeKey", "ExpDate", "ExpKey", "ExpName" ],
      "properties" : {
        "ExpKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ExpName" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ESAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ApprovedBy" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SubmittedBy" : {
          "type" : "string"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Account_ESAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "ExpenseApprover" : {
      "type" : "object",
      "required" : [ "EAEmployeeKey", "EAKey", "Employee", "EmployeeKey", "Employee_EAEmployee" ],
      "properties" : {
        "EAKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense approver key"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "EAEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense approver employee key"
        },
        "Employee_EAEmployee" : {
          "$ref" : "#/definitions/Employee"
        }
      }
    },
    "ExpenseAudit" : {
      "type" : "object",
      "required" : [ "ExpAuditKey", "ExpLineKey", "ExpRevKey", "ExpenseLine", "ExpenseRev" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ExpRevKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ExpLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseRev" : {
          "$ref" : "#/definitions/ExpenseRev"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpAuditKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseLine" : {
          "$ref" : "#/definitions/ExpenseLine"
        }
      }
    },
    "ExpenseBudget" : {
      "type" : "object",
      "required" : [ "Amount", "EBKey", "Pct", "Project", "ProjectKey", "Rate", "Units" ],
      "properties" : {
        "Pct" : {
          "type" : "number",
          "format" : "double"
        },
        "Rate" : {
          "type" : "string",
          "format" : "date"
        },
        "EBKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Units" : {
          "type" : "string"
        },
        "Amount" : {
          "type" : "string"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        }
      }
    },
    "ExpenseCls" : {
      "type" : "object",
      "required" : [ "ExpenseClsID", "ExpenseClsKey", "ExpenseClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseClsID" : {
          "type" : "string",
          "description" : "Expense class identifier"
        },
        "ExpenseClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense class key"
        },
        "ExpenseClsName" : {
          "type" : "string",
          "description" : "Expense class name"
        }
      }
    },
    "ExpenseComment" : {
      "type" : "object",
      "required" : [ "Comments", "ECKey", "Employee", "EmployeeKey", "Reference" ],
      "properties" : {
        "ECKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "Reference" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExpenseCommentTag" : {
      "type" : "object",
      "required" : [ "ECKey", "ExpenseComment", "Tag", "TagKey" ],
      "properties" : {
        "Tag" : {
          "$ref" : "#/definitions/Tag"
        },
        "ECKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TagKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseComment" : {
          "$ref" : "#/definitions/ExpenseComment"
        }
      }
    },
    "ExpenseGroup" : {
      "type" : "object",
      "required" : [ "ExpGroupKey", "ExpGroupName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpGroupKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense group key"
        },
        "ExpGroupName" : {
          "type" : "string",
          "description" : "Expense group name"
        }
      }
    },
    "ExpenseGroupLine" : {
      "type" : "object",
      "required" : [ "ExpGroupKey", "ExpGroupLineKey", "ExpTypeKey", "ExpenseGroup", "ExpenseType" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense code key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpGroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "ExpenseGroup" : {
          "$ref" : "#/definitions/ExpenseGroup"
        },
        "ExpGroupLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense group line key"
        }
      }
    },
    "ExpenseHistory" : {
      "type" : "object",
      "required" : [ "Account_ESAcct", "ESAcctKey", "Employee", "EmployeeKey", "ExpDate", "ExpHistoryKey" ],
      "properties" : {
        "ExpDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ExpName" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ESAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ApprovedBy" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SubmittedBy" : {
          "type" : "string"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ExpHistoryKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Account_ESAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "ExpenseHistoryLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "BillAmount", "ExpDate", "ExpHistoryKey", "ExpHistoryLineKey", "ExpenseHistory", "IsCC", "LineCls", "LineClsKey", "Multiplier", "PeriodID", "Qty", "ReimAmount", "TaxAmount", "UnitRate" ],
      "properties" : {
        "Qty" : {
          "type" : "string"
        },
        "IsCC" : {
          "type" : "boolean"
        },
        "Amount" : {
          "type" : "string"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TaxAmount" : {
          "type" : "string"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ApprovedBy" : {
          "type" : "string"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReimAmount" : {
          "type" : "string"
        },
        "TaxAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "SubmittedBy" : {
          "type" : "string"
        },
        "SupComments" : {
          "type" : "string"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "ExpHistoryKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ExpenseHistory" : {
          "$ref" : "#/definitions/ExpenseHistory"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        },
        "ExpHistoryLineKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExpenseLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "BillAmount", "ExpDate", "ExpLineKey", "ExpRevKey", "ExpenseRev", "InAudit", "InCommon", "IsCC", "LineCls", "LineClsKey", "Multiplier", "Period", "PeriodID", "Qty", "ReimAmount", "TaxAmount", "UnitRate" ],
      "properties" : {
        "Qty" : {
          "type" : "string"
        },
        "IsCC" : {
          "type" : "boolean"
        },
        "Amount" : {
          "type" : "string"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpDate" : {
          "type" : "string",
          "format" : "date"
        },
        "InAudit" : {
          "type" : "boolean"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string"
        },
        "InCommon" : {
          "type" : "boolean"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ExpRevKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TaxAmount" : {
          "type" : "string"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ApprovedBy" : {
          "type" : "string"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseRev" : {
          "$ref" : "#/definitions/ExpenseRev"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReimAmount" : {
          "type" : "string"
        },
        "TaxAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "SubmittedBy" : {
          "type" : "string"
        },
        "SupComments" : {
          "type" : "string"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        }
      }
    },
    "ExpenseMultiplier" : {
      "type" : "object",
      "required" : [ "EMCls", "EMClsKey", "EMKey", "EMName" ],
      "properties" : {
        "EMCls" : {
          "$ref" : "#/definitions/EMCls"
        },
        "EMKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup schedule key"
        },
        "EMName" : {
          "type" : "string",
          "description" : "Expense markup name"
        },
        "EMClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup class key",
          "enum" : [ 1, 2 ],
          "example" : "1 = ExpenseType, 2 = Vendor"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "ExpenseMultiplierLine" : {
      "type" : "object",
      "required" : [ "EMLineKey", "EMRevKey", "ExpenseMultiplierRev", "Multiplier", "UnitRate" ],
      "properties" : {
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "EMRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup revision key"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EMLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup line key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense type key"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Multiplier"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date"
        },
        "ExpenseMultiplierRev" : {
          "$ref" : "#/definitions/ExpenseMultiplierRev"
        }
      }
    },
    "ExpenseMultiplierRev" : {
      "type" : "object",
      "required" : [ "EMKey", "EMRevKey", "EffectiveDate", "ExpenseMultiplier" ],
      "properties" : {
        "EMKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup key"
        },
        "EMRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup revision key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date"
        },
        "ExpenseMultiplier" : {
          "$ref" : "#/definitions/ExpenseMultiplier"
        }
      }
    },
    "ExpenseRev" : {
      "type" : "object",
      "required" : [ "ExpKey", "ExpRevKey", "Expense", "Period", "PeriodKey", "RevNum" ],
      "properties" : {
        "ExpKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Expense" : {
          "$ref" : "#/definitions/Expense"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ExpRevKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "ExpenseSchedule" : {
      "type" : "object",
      "required" : [ "Amount", "BillAmount", "ESKey", "Project", "ProjectKey", "Qty", "ScheduleDate", "UnitRate" ],
      "properties" : {
        "Qty" : {
          "type" : "string"
        },
        "ESKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Amount" : {
          "type" : "string"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "ScheduleDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "ExpenseTeam" : {
      "type" : "object",
      "required" : [ "ETKey", "Project", "ProjectKey", "Vendor", "VendorKey" ],
      "properties" : {
        "ETKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense team key"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "ExpenseType" : {
      "type" : "object",
      "required" : [ "AccountInfo_ReimAcctInfo", "AllowInES", "AllowOverrideInES", "BillRate", "BillStatusCls", "BillStatusClsKey", "DoNotReim", "ExpTypeID", "ExpTypeKey", "ExpTypeName", "IsUnitTransaction", "ReimAcctInfoKey", "RequiresComment", "RequiresDetail", "RequiresReceipt", "StatusCls", "StatusClsKey", "SummarizeInGL", "UnitRate" ],
      "properties" : {
        "BillRate" : {
          "type" : "string"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "AllowInES" : {
          "type" : "boolean"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "DoNotReim" : {
          "type" : "boolean"
        },
        "ExpTypeID" : {
          "type" : "string",
          "description" : "Expense type identifier"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense type key"
        },
        "CategoryCls" : {
          "$ref" : "#/definitions/CategoryCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpTypeName" : {
          "type" : "string",
          "description" : "Expense type name"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "BDAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "OHAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SummarizeInGL" : {
          "type" : "boolean"
        },
        "CategoryClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ClrAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RequiresDetail" : {
          "type" : "boolean"
        },
        "RevAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReimAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RequiresComment" : {
          "type" : "boolean"
        },
        "RequiresReceipt" : {
          "type" : "boolean"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "AllowOverrideInES" : {
          "type" : "boolean"
        },
        "DirectAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "IsUnitTransaction" : {
          "type" : "boolean"
        },
        "AccountInfo_BDAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_OHAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_ClrAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RevAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_ReimAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DirectAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "FeeCls" : {
      "type" : "object",
      "required" : [ "FeeClsID", "FeeClsKey", "FeeClsName" ],
      "properties" : {
        "FeeClsID" : {
          "type" : "string",
          "description" : "Fee class identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "FeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Fee class key",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8 ],
          "example" : "1 = TimeandMaterials, 2 = LumpSum, 3 = LumpSumwithPercentComplete, 4 = MonthlyFee, 5 = MonthlyFeetoMax, 6 = UnitBilling, 7 = FeebyPhasewithPercentComplete, 8 = PercentofConstruction"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "FeeClsName" : {
          "type" : "string",
          "description" : "Fee class name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "FinancialCls" : {
      "type" : "object",
      "required" : [ "FinancialClsID", "FinancialClsKey", "FinancialClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "FinancialClsID" : {
          "type" : "string",
          "description" : "Financial class identifier"
        },
        "FinancialClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Financial class key",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = Asset, 2 = Liability, 3 = Equity, 4 = Revenue, 5 = Expense"
        },
        "FinancialClsName" : {
          "type" : "string",
          "description" : "Financial class name"
        }
      }
    },
    "GenderCls" : {
      "type" : "object",
      "required" : [ "GenderClsID", "GenderClsKey", "GenderClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "GenderClsID" : {
          "type" : "string"
        },
        "GenderClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "GenderClsName" : {
          "type" : "string"
        }
      }
    },
    "GiftCls" : {
      "type" : "object",
      "required" : [ "GiftClsKey", "GiftClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "GiftClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Gift class key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "GiftClsName" : {
          "type" : "string",
          "description" : "Gift class name"
        }
      }
    },
    "Group" : {
      "type" : "object",
      "required" : [ "GroupKey", "GroupName" ],
      "properties" : {
        "GroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "GroupName" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "GroupLine" : {
      "type" : "object",
      "required" : [ "Group", "GroupKey", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "Group" : {
          "$ref" : "#/definitions/Group"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "GroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "GroupRole" : {
      "type" : "object",
      "required" : [ "Group", "GroupKey", "Role", "RoleKey" ],
      "properties" : {
        "Role" : {
          "$ref" : "#/definitions/Role"
        },
        "Group" : {
          "$ref" : "#/definitions/Group"
        },
        "RoleKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "GroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Holiday" : {
      "type" : "object",
      "required" : [ "HolidayKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "HolidayKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Holiday calendar key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProfitCenterInfo" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        }
      }
    },
    "HolidayLine" : {
      "type" : "object",
      "required" : [ "Holiday", "HolidayDay", "HolidayKey", "HolidayLineKey", "HolidayMonth", "HolidayName" ],
      "properties" : {
        "Holiday" : {
          "$ref" : "#/definitions/Holiday"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "HolidayDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "HolidayKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Holiday calendar key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "HolidayName" : {
          "type" : "string",
          "description" : "Holiday name"
        },
        "HolidayMonth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "HolidayLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Holiday calendar line key"
        }
      }
    },
    "HourEntryCls" : {
      "type" : "object",
      "required" : [ "HourEntryClsKey", "HourEntryClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "HourEntryClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "HourEntryClsName" : {
          "type" : "string"
        }
      }
    },
    "ICDefault" : {
      "type" : "object",
      "required" : [ "CenterInfoKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AccountInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "APAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ARAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UnRevAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IgnoreTagCls" : {
      "type" : "object",
      "required" : [ "IgnoreTagClsKey", "IgnoreTagClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "IgnoreTagClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "IgnoreTagClsName" : {
          "type" : "string"
        }
      }
    },
    "InsuranceCls" : {
      "type" : "object",
      "required" : [ "InsuranceClsKey", "InsuranceClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InsuranceClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Insurance class key"
        },
        "InsuranceClsName" : {
          "type" : "string",
          "description" : "Insurance class name"
        }
      }
    },
    "InvNumberCls" : {
      "type" : "object",
      "required" : [ "InvNumberClsKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvNumberClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Company, 2 = Client, 3 = Project"
        },
        "InvNumberClsName" : {
          "type" : "string"
        }
      }
    },
    "Invoice" : {
      "type" : "object",
      "required" : [ "ARAcctKey", "Account_ARAcct", "CMNum", "Client", "ClientKey", "DueDate", "InvoiceDate", "InvoiceID", "InvoiceKey" ],
      "properties" : {
        "CMNum" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "DueDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Comments" : {
          "type" : "string"
        },
        "ARAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "InvoiceID" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Account_ARAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "InvoiceAudit" : {
      "type" : "object",
      "required" : [ "InvoiceAuditKey", "InvoiceLine", "InvoiceLineKey", "InvoiceRev", "InvoiceRevKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "InvoiceRev" : {
          "$ref" : "#/definitions/InvoiceRev"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoiceLine" : {
          "$ref" : "#/definitions/InvoiceLine"
        },
        "InvoiceRevKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoiceLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoiceAuditKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InvoiceDesign" : {
      "type" : "object",
      "required" : [ "DesignKey", "DesignName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "DesignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "DesignName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TemplateKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DesignLayout" : {
          "type" : "string"
        },
        "InvoiceTemplate" : {
          "$ref" : "#/definitions/InvoiceTemplate"
        }
      }
    },
    "InvoiceGroup" : {
      "type" : "object",
      "required" : [ "BaseProjectInfoKey", "BaseProjectKey", "InvoiceGroupKey", "InvoiceGroupName", "ProjectInfo_BaseProjectInfo", "Project_BaseProject" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BaseProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Base project key"
        },
        "InvoiceGroupKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Invoice group key"
        },
        "InvoiceGroupName" : {
          "type" : "string",
          "description" : "Invoice group name"
        },
        "BaseProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Base project information key"
        },
        "Project_BaseProject" : {
          "$ref" : "#/definitions/Project"
        },
        "ProjectInfo_BaseProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        }
      }
    },
    "InvoiceGroupLine" : {
      "type" : "object",
      "required" : [ "InvoiceGroup", "InvoiceGroupKey", "InvoiceGroupLineKey", "Project", "ProjectKey" ],
      "properties" : {
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoiceGroup" : {
          "$ref" : "#/definitions/InvoiceGroup"
        },
        "InvoiceGroupKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Invoice group key"
        },
        "InvoiceGroupLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Invoice group line key"
        }
      }
    },
    "InvoiceHistory" : {
      "type" : "object",
      "required" : [ "ARAcctKey", "Account_ARAcct", "Client", "ClientKey", "DueDate", "InvoiceDate", "InvoiceHistoryKey", "InvoiceID" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "DueDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Comments" : {
          "type" : "string"
        },
        "ARAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "InvoiceID" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Account_ARAcct" : {
          "$ref" : "#/definitions/Account"
        },
        "InvoiceHistoryKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InvoiceHistoryLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "InvoiceHistory", "InvoiceHistoryKey", "InvoiceHistoryLineKey", "LineCls", "LineClsKey", "Period", "PeriodID" ],
      "properties" : {
        "Amount" : {
          "type" : "string"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "InvoiceHistory" : {
          "$ref" : "#/definitions/InvoiceHistory"
        },
        "BilledProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoiceHistoryKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoiceHistoryLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project_BilledProject" : {
          "$ref" : "#/definitions/Project"
        }
      }
    },
    "InvoiceLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "InAudit", "InCommon", "InvoiceLineKey", "InvoiceRev", "InvoiceRevKey", "LineCls", "LineClsKey", "Period", "PeriodID" ],
      "properties" : {
        "Amount" : {
          "type" : "string"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InAudit" : {
          "type" : "boolean"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string"
        },
        "InCommon" : {
          "type" : "boolean"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "InvoiceRev" : {
          "$ref" : "#/definitions/InvoiceRev"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoiceRevKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "InvoiceLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BilledProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project_BilledProject" : {
          "$ref" : "#/definitions/Project"
        }
      }
    },
    "InvoiceRev" : {
      "type" : "object",
      "required" : [ "Invoice", "InvoiceKey", "InvoiceRevKey", "Period", "PeriodKey", "RevNum" ],
      "properties" : {
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoiceRevKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InvoiceTemplate" : {
      "type" : "object",
      "required" : [ "TemplateKey", "TemplateLayout", "TemplateName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TemplateKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TemplateName" : {
          "type" : "string"
        },
        "TemplateLayout" : {
          "type" : "string"
        }
      }
    },
    "Invoicing" : {
      "type" : "object",
      "required" : [ "ARAcctKey", "Account_ARAcct", "Client", "ClientKey", "EndDate", "InvoiceDate", "InvoiceID", "ProjectInfo", "ProjectInfoKey", "StartDate", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "EndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ARAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "InvoiceID" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "Account_ARAcct" : {
          "$ref" : "#/definitions/Account"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InvoicingLine" : {
      "type" : "object",
      "required" : [ "BillAmount", "BillLineCls", "BillLineClsKey", "Invoicing", "LineKey", "Project", "ProjectInfoKey", "ProjectKey", "RevenueCls", "RevenueClsKey", "UserKey" ],
      "properties" : {
        "LineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "Invoicing" : {
          "$ref" : "#/definitions/Invoicing"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "BillLineCls" : {
          "$ref" : "#/definitions/BillLineCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "BillLineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],
          "example" : "1 = A/PCheckHistory, 2 = A/PCheck, 3 = A/PVoucherHistory, 4 = A/PVoucher, 5 = H/RTimesheetHistory, 6 = H/RTimesheet, 7 = H/RExpenseHistory, 8 = H/RExpense, 9 = G/AJournal, 10 = P/MExpense"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InvoicingProject" : {
      "type" : "object",
      "required" : [ "BilledDirectCns", "BilledDirectExp", "BilledFee", "BilledLabor", "BilledReimCns", "BilledReimExp", "CnsLimit", "DirectCns", "DirectReim", "ExpLimit", "Fee", "FeeLimit", "Interest", "Invoicing", "Labor", "LaborLimit", "OCLimit", "Other", "Project", "ProjectInfoKey", "ProjectKey", "ReimCns", "ReimExp", "Retainage", "Retainer", "Tax", "TotalLimit", "UserKey" ],
      "properties" : {
        "Fee" : {
          "type" : "string"
        },
        "Tax" : {
          "type" : "string"
        },
        "Labor" : {
          "type" : "string"
        },
        "Other" : {
          "type" : "string"
        },
        "OCLimit" : {
          "type" : "string"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "ReimCns" : {
          "type" : "string"
        },
        "ReimExp" : {
          "type" : "string"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CnsLimit" : {
          "type" : "string"
        },
        "ExpLimit" : {
          "type" : "string"
        },
        "FeeLimit" : {
          "type" : "string"
        },
        "Interest" : {
          "type" : "string"
        },
        "Retainer" : {
          "type" : "string"
        },
        "BilledFee" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "DirectCns" : {
          "type" : "string"
        },
        "Invoicing" : {
          "$ref" : "#/definitions/Invoicing"
        },
        "Retainage" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "DirectReim" : {
          "type" : "string"
        },
        "LaborLimit" : {
          "type" : "string"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TotalLimit" : {
          "type" : "string"
        },
        "BilledLabor" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BilledReimCns" : {
          "type" : "string"
        },
        "BilledReimExp" : {
          "type" : "string"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BilledDirectCns" : {
          "type" : "string"
        },
        "BilledDirectExp" : {
          "type" : "string"
        }
      }
    },
    "InvoicingProjectFee" : {
      "type" : "object",
      "required" : [ "Invoicing", "Project", "ProjectInfoKey", "ProjectKey", "UserKey" ],
      "properties" : {
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "Invoicing" : {
          "$ref" : "#/definitions/Invoicing"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InvoicingProjectPost" : {
      "type" : "object",
      "required" : [ "Account", "AccountInfo", "AcctInfoKey", "AcctKey", "InvoicingProject", "PostAmount", "ProjectInfoKey", "ProjectKey", "RevenueCls", "RevenueClsKey", "UserKey" ],
      "properties" : {
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "PostAmount" : {
          "type" : "string"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "AccountInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoicingProject" : {
          "$ref" : "#/definitions/InvoicingProject"
        }
      }
    },
    "Journal" : {
      "type" : "object",
      "required" : [ "JournalCls", "JournalClsKey", "JournalKey", "TransDate" ],
      "properties" : {
        "Comments" : {
          "type" : "string"
        },
        "Currency" : {
          "$ref" : "#/definitions/Currency"
        },
        "JEClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "TransDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Transaction date"
        },
        "JournalCls" : {
          "$ref" : "#/definitions/JournalCls"
        },
        "JournalKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CurrencyKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "JournalClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal class key; 1=Accrual, 2=Cash, 3=Both",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Accrual, 2 = Cash, 3 = Both"
        },
        "JournalEntryCls" : {
          "$ref" : "#/definitions/JournalEntryCls"
        }
      }
    },
    "JournalAudit" : {
      "type" : "object",
      "required" : [ "JournalAuditKey", "JournalLine", "JournalLineKey", "JournalRev", "JournalRevKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "JournalRev" : {
          "$ref" : "#/definitions/JournalRev"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "JournalLine" : {
          "$ref" : "#/definitions/JournalLine"
        },
        "JournalRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal revision key"
        },
        "JournalLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal line key"
        },
        "JournalAuditKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal audit key"
        }
      }
    },
    "JournalCls" : {
      "type" : "object",
      "required" : [ "JournalClsID", "JournalClsKey", "JournalClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "JournalClsID" : {
          "type" : "string",
          "description" : "Journal class identifier"
        },
        "JournalClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Accrual, 2 = Cash, 3 = Both"
        },
        "JournalClsName" : {
          "type" : "string",
          "description" : "Journal class name"
        }
      }
    },
    "JournalEntryCls" : {
      "type" : "object",
      "required" : [ "JEClsKey", "JEClsName" ],
      "properties" : {
        "JEClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "JEClsName" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "JournalLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "BillAmount", "InAudit", "InCommon", "JournalLineKey", "JournalRev", "JournalRevKey", "Multiplier", "Period", "PeriodID" ],
      "properties" : {
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Distribution g/l account key"
        },
        "InAudit" : {
          "type" : "boolean"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string"
        },
        "InCommon" : {
          "type" : "boolean"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "JournalRev" : {
          "$ref" : "#/definitions/JournalRev"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "JournalRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal revision key"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "JournalLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal line key"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        }
      }
    },
    "JournalRev" : {
      "type" : "object",
      "required" : [ "Journal", "JournalKey", "JournalRevKey", "Period", "PeriodKey", "RevNum" ],
      "properties" : {
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revision number"
        },
        "Journal" : {
          "$ref" : "#/definitions/Journal"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "JournalKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "JournalRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal revision key"
        }
      }
    },
    "JournalVoid" : {
      "type" : "object",
      "properties" : {
        "Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal key"
        },
        "RevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revision key"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Journal comments"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        }
      }
    },
    "LaborBudget" : {
      "type" : "object",
      "required" : [ "Amount", "Hours", "LBKey", "Pct", "Project", "ProjectKey", "Rate" ],
      "properties" : {
        "Pct" : {
          "type" : "number",
          "format" : "double"
        },
        "Rate" : {
          "type" : "string"
        },
        "Hours" : {
          "type" : "string"
        },
        "LBKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Amount" : {
          "type" : "string"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        }
      }
    },
    "LaborGroup" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "LaborGroupID", "LaborGroupKey", "LaborGroupName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "LaborGroupID" : {
          "type" : "string"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborGroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborGroupName" : {
          "type" : "string"
        }
      }
    },
    "LaborGroupLine" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "LGLineKey", "LaborGroup", "LaborGroupKey" ],
      "properties" : {
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LGLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LaborGroup" : {
          "$ref" : "#/definitions/LaborGroup"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborGroupKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LaborPostingGroup" : {
      "type" : "object",
      "required" : [ "AccountInfo_DLAcctInfo", "AccountInfo_DLOwnerAcctInfo", "AccountInfo_OHAcctInfo", "AccountInfo_OHOwnerAcctInfo", "CenterInfoKey", "DLAcctInfoKey", "DLOwnerAcctInfoKey", "LPGroupID", "LPGroupKey", "LPGroupName", "OHAcctInfoKey", "OHOwnerAcctInfoKey", "ProfitCenterInfo" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LPGroupID" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LPGroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "LPGroupName" : {
          "type" : "string"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DLAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OHAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProfitCenterInfo" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        },
        "DLOwnerAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OHOwnerAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccountInfo_DLAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_OHAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DLOwnerAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_OHOwnerAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "LaborPostingGroupLine" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "LPGroupKey", "LaborPostingGroup" ],
      "properties" : {
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LPGroupKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborPostingGroup" : {
          "$ref" : "#/definitions/LaborPostingGroup"
        }
      }
    },
    "LaborRate" : {
      "type" : "object",
      "required" : [ "LRCls", "LRClsKey", "LRKey", "LRName", "RateCls", "RateClsKey" ],
      "properties" : {
        "LRCls" : {
          "$ref" : "#/definitions/LRCls"
        },
        "LRKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor rate schedule key"
        },
        "LRName" : {
          "type" : "string",
          "description" : "Labor rate schedule name"
        },
        "RateCls" : {
          "$ref" : "#/definitions/RateCls"
        },
        "LRClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor rate class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = PayRate, 2 = CostRate, 3 = BillRate"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "RateClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rate class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Employee, 2 = StaffLevel, 3 = Activity"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "LaborRateActEmployee" : {
      "type" : "object",
      "required" : [ "ActivityCode", "ActivityKey", "Employee", "EmployeeKey", "LRKey", "LaborRate" ],
      "properties" : {
        "LRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LaborRate" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        }
      }
    },
    "LaborRateLine" : {
      "type" : "object",
      "required" : [ "LRLineKey", "LRRevKey", "LaborRateRev", "Multiplier1", "Multiplier2", "Multiplier3", "Multiplier4", "MultiplierOT1", "MultiplierOT2", "Rate", "RateOT1", "RateOT2" ],
      "properties" : {
        "Rate" : {
          "type" : "string",
          "description" : "Rate"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Staff level key"
        },
        "RateOT1" : {
          "type" : "string"
        },
        "RateOT2" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "LRRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor rate revision key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LRLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor rate line key"
        },
        "SLAltName" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "Multiplier1" : {
          "type" : "number",
          "format" : "double",
          "description" : "Multiplier 1"
        },
        "Multiplier2" : {
          "type" : "number",
          "format" : "double",
          "description" : "Multiplier 2"
        },
        "Multiplier3" : {
          "type" : "number",
          "format" : "double",
          "description" : "Multiplier 3"
        },
        "Multiplier4" : {
          "type" : "number",
          "format" : "double",
          "description" : "Multiplier 4"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "LaborRateRev" : {
          "$ref" : "#/definitions/LaborRateRev"
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date"
        },
        "MultiplierOT1" : {
          "type" : "number",
          "format" : "double"
        },
        "MultiplierOT2" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "LaborRateRev" : {
      "type" : "object",
      "required" : [ "EffectiveDate", "LRKey", "LRRevKey", "LaborRate" ],
      "properties" : {
        "LRKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor rate schedule key"
        },
        "LRRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor rate revision key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LaborRate" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date"
        }
      }
    },
    "LaborRateSLEmployee" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "LRKey", "LaborRate", "SLKey", "StaffLevel" ],
      "properties" : {
        "LRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LaborRate" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LaborSchedule" : {
      "type" : "object",
      "required" : [ "BillAmount", "BillRate", "CostAmount", "CostRate", "Hours", "LSKey", "Project", "ProjectKey", "ScheduleDate" ],
      "properties" : {
        "Hours" : {
          "type" : "string"
        },
        "LSKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "BillRate" : {
          "type" : "string"
        },
        "CostRate" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "CostAmount" : {
          "type" : "string"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "ScheduleDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "LaborSortCls" : {
      "type" : "object",
      "required" : [ "LaborSortClsKey", "LaborSortClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "LaborSortClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor sort class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = EmployeeName, 2 = StaffLevel, 3 = Date"
        },
        "LaborSortClsName" : {
          "type" : "string",
          "description" : "Labor sort class name"
        }
      }
    },
    "LaborTeam" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "IsAPApprover", "IsBillApprover", "IsExpApprover", "IsTimeApprover", "LTKey", "ProjectFee", "ProjectKey" ],
      "properties" : {
        "LTKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor team key"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Staff level key"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectFee" : {
          "$ref" : "#/definitions/ProjectFee"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "IsAPApprover" : {
          "type" : "boolean"
        },
        "IsExpApprover" : {
          "type" : "boolean"
        },
        "IsBillApprover" : {
          "type" : "boolean"
        },
        "IsTimeApprover" : {
          "type" : "boolean"
        }
      }
    },
    "LaborTeamSL" : {
      "type" : "object",
      "required" : [ "LTKey", "LaborTeam", "SLKey", "StaffLevel" ],
      "properties" : {
        "LTKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LaborTeam" : {
          "$ref" : "#/definitions/LaborTeam"
        },
        "SLAltName" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "LineCls" : {
      "type" : "object",
      "required" : [ "LineClsID", "LineClsKey", "LineClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LineClsID" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "LineClsName" : {
          "type" : "string"
        }
      }
    },
    "Location" : {
      "type" : "object",
      "required" : [ "LocationID", "LocationKey", "LocationName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LocationID" : {
          "type" : "string",
          "description" : "Location identifier"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "LocationKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Location key"
        },
        "LocationName" : {
          "type" : "string",
          "description" : "Location name"
        }
      }
    },
    "LRCls" : {
      "type" : "object",
      "required" : [ "LRClsID", "LRClsKey", "LRClsName" ],
      "properties" : {
        "LRClsID" : {
          "type" : "string",
          "description" : "Labor rate schedule class identifier"
        },
        "LRClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor rate schedule class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = PayRate, 2 = CostRate, 3 = BillRate"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LRClsName" : {
          "type" : "string",
          "description" : "Labor rate schedule class name"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "MarketCls" : {
      "type" : "object",
      "required" : [ "MarketClsKey", "MarketClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "MarketClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market class key"
        },
        "MarketClsName" : {
          "type" : "string",
          "description" : "Market class name"
        }
      }
    },
    "Module" : {
      "type" : "object",
      "required" : [ "ModuleKey" ],
      "properties" : {
        "ModuleID" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ModuleKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ModuleName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Description" : {
          "type" : "string"
        }
      }
    },
    "Office" : {
      "type" : "object",
      "required" : [ "Address", "AddressKey", "OfficeKey", "OfficeName" ],
      "properties" : {
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OfficeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddressKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OfficeName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "OHBaseCls" : {
      "type" : "object",
      "required" : [ "OHBaseClsID", "OHBaseClsKey", "OHBaseClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "OHBaseClsID" : {
          "type" : "string"
        },
        "OHBaseClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OHBaseClsName" : {
          "type" : "string"
        }
      }
    },
    "OTCls" : {
      "type" : "object",
      "required" : [ "OTClsID", "OTClsKey", "OTClsName" ],
      "properties" : {
        "OTClsID" : {
          "type" : "string"
        },
        "OTClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Overtime1, 2 = Overtime2"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OTClsName" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Overhead" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "DPEPercentage", "EndDate", "OHBaseCls", "OHBaseClsKey", "OHKey", "OHPercentage", "PctActualCls", "PctActualClsKey", "Period", "PeriodKey", "ProfitCenterInfo", "StartDate" ],
      "properties" : {
        "OHKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Overhead allocation key"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "EndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Overhead allocation end date"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OHBaseCls" : {
          "$ref" : "#/definitions/OHBaseCls"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Overhead allocation start date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "OHBaseClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OHPercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "Overhead allocation percentage"
        },
        "PctActualCls" : {
          "$ref" : "#/definitions/PctActualCls"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DPEPercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "Direct personal expense percentage"
        },
        "PctActualClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProfitCenterInfo" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        }
      }
    },
    "OverheadLine" : {
      "type" : "object",
      "required" : [ "DPEAmount", "OHAmount", "OHKey", "OHLineKey", "Overhead", "Project", "ProjectKey", "RevenueAmount" ],
      "properties" : {
        "OHKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Overhead allocation key"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "OHAmount" : {
          "type" : "string"
        },
        "Overhead" : {
          "$ref" : "#/definitions/Overhead"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "DPEAmount" : {
          "type" : "string"
        },
        "OHLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Overhead allocation line key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RevenueAmount" : {
          "type" : "string"
        }
      }
    },
    "PasswordSetting" : {
      "type" : "object",
      "required" : [ "AlphaNumCls", "AlphaNumClsKey", "ChangeDays", "LockAfterTries", "MinLength", "NotRequired", "RequireLowerCase", "RequireSpecial", "RequireUpperCase", "SettingKey", "UnlockAfterHours" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "MinLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ChangeDays" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SettingKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AlphaNumCls" : {
          "$ref" : "#/definitions/AlphaNumCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "NotRequired" : {
          "type" : "boolean"
        },
        "AlphaNumClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Alphabets, 2 = Numbers, 3 = Both"
        },
        "LockAfterTries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RequireSpecial" : {
          "type" : "boolean"
        },
        "RequireLowerCase" : {
          "type" : "boolean"
        },
        "RequireUpperCase" : {
          "type" : "boolean"
        },
        "UnlockAfterHours" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PaymentTerm" : {
      "type" : "object",
      "required" : [ "NumberOfDays", "PaymentTermCls", "PaymentTermClsKey", "PaymentTermKey", "PaymentTermName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "NumberOfDays" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PaymentTermCls" : {
          "$ref" : "#/definitions/PaymentTermCls"
        },
        "PaymentTermKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Payment term key"
        },
        "PaymentTermName" : {
          "type" : "string",
          "description" : "Payment term name"
        },
        "PaymentTermClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = NumberofDays, 2 = Next, 3 = Hold, 4 = PayWhenPaid"
        }
      }
    },
    "PaymentTermCls" : {
      "type" : "object",
      "required" : [ "PaymentTermClsID", "PaymentTermClsKey", "PaymentTermClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PaymentTermClsID" : {
          "type" : "string"
        },
        "PaymentTermClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = NumberofDays, 2 = Next, 3 = Hold, 4 = PayWhenPaid"
        },
        "PaymentTermClsName" : {
          "type" : "string"
        }
      }
    },
    "PayPeriod" : {
      "type" : "object",
      "required" : [ "PayPeriodKey", "PayPeriodName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PayPeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pay period key"
        },
        "PayPeriodName" : {
          "type" : "string",
          "description" : "Pay period name"
        }
      }
    },
    "PCLabel" : {
      "type" : "object",
      "required" : [ "PCLabelKey", "PCLevel1Label", "PCLevel1Length" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "PCLabelKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PCLevel1Label" : {
          "type" : "string"
        },
        "PCLevel2Label" : {
          "type" : "string"
        },
        "PCLevel3Label" : {
          "type" : "string"
        },
        "PCLevel4Label" : {
          "type" : "string"
        },
        "PCLevel5Label" : {
          "type" : "string"
        },
        "PCLevel6Label" : {
          "type" : "string"
        },
        "PCLevel1Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PCLevel2Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PCLevel3Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PCLevel4Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PCLevel5Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PCLevel6Length" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PctActualCls" : {
      "type" : "object",
      "required" : [ "PctActualClsID", "PctActualClsKey", "PctActualClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PctActualClsID" : {
          "type" : "string"
        },
        "PctActualClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PctActualClsName" : {
          "type" : "string"
        }
      }
    },
    "Period" : {
      "type" : "object",
      "required" : [ "EndDate", "PeriodID", "PeriodKey", "PeriodStatusCls", "PeriodStatusClsKey", "StartDate" ],
      "properties" : {
        "EndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Period end date"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Period start date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "PeriodName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PeriodStatusCls" : {
          "$ref" : "#/definitions/PeriodStatusCls"
        },
        "PeriodStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Opened, 2 = Closed"
        }
      }
    },
    "PeriodStatusCls" : {
      "type" : "object",
      "required" : [ "PeriodStatusClsID", "PeriodStatusClsKey", "PeriodStatusClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PeriodStatusClsID" : {
          "type" : "string"
        },
        "PeriodStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Opened, 2 = Closed"
        },
        "PeriodStatusClsName" : {
          "type" : "string"
        }
      }
    },
    "Permission" : {
      "type" : "object",
      "required" : [ "PermissionKey", "SpecialRight" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ScreenKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Description" : {
          "type" : "string"
        },
        "PermissionID" : {
          "type" : "string"
        },
        "SpecialRight" : {
          "type" : "boolean"
        },
        "PermissionKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PermissionName" : {
          "type" : "string"
        }
      }
    },
    "Preference" : {
      "type" : "object",
      "required" : [ "TZKey", "TimeZone", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "TZKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeZone" : {
          "$ref" : "#/definitions/TimeZone"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "PrefixCls" : {
      "type" : "object",
      "required" : [ "PrefixClsID", "PrefixClsKey", "PrefixClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PrefixClsID" : {
          "type" : "string"
        },
        "PrefixClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PrefixClsName" : {
          "type" : "string"
        }
      }
    },
    "ProfitCenter" : {
      "type" : "object",
      "required" : [ "CenterID", "CenterInfoKey", "CenterKey", "CenterName", "IsLowestCenter", "IsRemitTo", "ProfitCenterInfo", "StatusCls", "StatusClsKey" ],
      "properties" : {
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "CenterID" : {
          "type" : "string",
          "description" : "Profit center identifier"
        },
        "CenterKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "IsRemitTo" : {
          "type" : "boolean"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Address key"
        },
        "Center1Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center 1 key"
        },
        "Center2Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center 2 key"
        },
        "Center3Key" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Center4Key" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Center5Key" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CenterName" : {
          "type" : "string",
          "description" : "Profit center name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status class key; 1=Active, 2=Inactive",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center information key"
        },
        "IsLowestCenter" : {
          "type" : "boolean"
        },
        "ProfitCenterInfo" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        },
        "ProfitCenter_Center1" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "ProfitCenter_Center2" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "ProfitCenter_Center3" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "ProfitCenter_Center4" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "ProfitCenter_Center5" : {
          "$ref" : "#/definitions/ProfitCenter"
        }
      }
    },
    "ProfitCenterInfo" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "Currency", "CurrencyKey", "StatusCls", "StatusClsKey" ],
      "properties" : {
        "EIN" : {
          "type" : "string"
        },
        "Byline" : {
          "type" : "string"
        },
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "Twitter" : {
          "type" : "string"
        },
        "Currency" : {
          "$ref" : "#/definitions/Currency"
        },
        "Facebook" : {
          "type" : "string"
        },
        "LinkedIn" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Address key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CurrencyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Currency key"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status class key; 1=Active, 2=Inactive",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center information key"
        },
        "InvLogoStream" : {
          "type" : "string"
        },
        "NextInvNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RptLogoStream" : {
          "type" : "string"
        }
      }
    },
    "ProgramCls" : {
      "type" : "object",
      "required" : [ "ProgramClsKey", "ProgramClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProgramClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Program class key"
        },
        "ProgramClsName" : {
          "type" : "string",
          "description" : "Program class name"
        }
      }
    },
    "Project" : {
      "type" : "object",
      "required" : [ "IsLowestWBS", "LastPosition", "Position", "ProjectID", "ProjectInfo", "ProjectInfoKey", "ProjectKey", "ProjectName", "ProjectStatusCls", "ProjectStatusClsKey" ],
      "properties" : {
        "EndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "WBS1Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Work-breakdown-structure 1 key"
        },
        "WBS2Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Work-breakdown-structure 2 key"
        },
        "WBS3Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Work-breakdown-structure 3 key"
        },
        "WBS4Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Work-breakdown-structure 4 key"
        },
        "WBS5Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Work-breakdown-structure 5 key"
        },
        "Position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ProjectID" : {
          "type" : "string",
          "description" : "Project identifier"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "IsLowestWBS" : {
          "type" : "boolean"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "ProjectName" : {
          "type" : "string",
          "description" : "Project name"
        },
        "LastPosition" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project_WBS1" : {
          "$ref" : "#/definitions/Project"
        },
        "Project_WBS2" : {
          "$ref" : "#/definitions/Project"
        },
        "Project_WBS3" : {
          "$ref" : "#/definitions/Project"
        },
        "Project_WBS4" : {
          "$ref" : "#/definitions/Project"
        },
        "Project_WBS5" : {
          "$ref" : "#/definitions/Project"
        },
        "PAEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PMEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project information key"
        },
        "SupEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DeptEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PrinEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectStatusCls" : {
          "$ref" : "#/definitions/ProjectStatusCls"
        },
        "Employee_PAEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_PMEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "ProjectStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Active, 2 = Inactive, 3 = Hold"
        },
        "Employee_SupEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_BillEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_DeptEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_PrinEmployee" : {
          "$ref" : "#/definitions/Employee"
        }
      }
    },
    "ProjectAddFee" : {
      "type" : "object",
      "required" : [ "AccountInfo_RevAcctInfo", "AddFeeCls", "AddFeeClsKey", "AddFeeID", "AddFeeName", "Amount", "IncludeAddon", "Pct", "Position", "ProjectAddonKey", "ProjectInfo", "ProjectInfoKey", "RevAcctInfoKey" ],
      "properties" : {
        "Pct" : {
          "type" : "number",
          "format" : "double"
        },
        "AddFee" : {
          "$ref" : "#/definitions/AddFee"
        },
        "Amount" : {
          "type" : "string"
        },
        "AddFeeID" : {
          "type" : "string"
        },
        "Position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AddFeeCls" : {
          "$ref" : "#/definitions/AddFeeCls"
        },
        "AddFeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AddFeeName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "AddFeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = FeeOnly, 2 = LaborOnly, 3 = FeeandLabor, 4 = Fee,Labor,andExpenses, 5 = Fee,Labor,Expenses,andConsultants, 6 = TotalInvoice"
        },
        "IncludeAddon" : {
          "type" : "boolean"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RevAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TaxAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectAddonKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccountInfo_RevAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_TaxAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "ProjectBilling" : {
      "type" : "object",
      "required" : [ "IncludeBudget", "IncludeCO", "IncludeCnsBackup", "IncludeCnsMultiplier", "IncludeExpBackup", "IncludeExpMultiplier", "IncludeInterest", "IncludeLaborBackup", "InvCnsSeparately", "InvExpSeparately", "Project", "ProjectKey" ],
      "properties" : {
        "EMKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense markup schedule key"
        },
        "BTDCls" : {
          "$ref" : "#/definitions/BTDCls"
        },
        "FeeCls" : {
          "$ref" : "#/definitions/FeeCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "CnsEMKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Consultant expense markup schedule key"
        },
        "BTDClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill-to-date class ley",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = InvoiceDetail, 3 = TotalHistory"
        },
        "BillLRKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill labor rate schedule key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "FeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8 ],
          "example" : "1 = TimeandMaterials, 2 = LumpSum, 3 = LumpSumwithPercentComplete, 4 = MonthlyFee, 5 = MonthlyFeetoMax, 6 = UnitBilling, 7 = FeebyPhasewithPercentComplete, 8 = PercentofConstruction"
        },
        "IncludeCO" : {
          "type" : "boolean",
          "description" : "Include change order on invoice?"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Multiplier1" : {
          "type" : "number",
          "format" : "double",
          "description" : "Labor multiplier 1"
        },
        "Multiplier2" : {
          "type" : "number",
          "format" : "double",
          "description" : "Labor multiplier 2"
        },
        "Multiplier3" : {
          "type" : "number",
          "format" : "double",
          "description" : "Labor multiplier 3"
        },
        "Multiplier4" : {
          "type" : "number",
          "format" : "double",
          "description" : "Labor multiplier 4"
        },
        "BillCycleCls" : {
          "$ref" : "#/definitions/BillCycleCls"
        },
        "CnsDetailCls" : {
          "$ref" : "#/definitions/CnsDetailCls"
        },
        "ExpDetailCls" : {
          "$ref" : "#/definitions/ExpDetailCls"
        },
        "InvDesignKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor invoice design key"
        },
        "OTPremiumKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Overtime premium key"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "CnsMultiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Consultant markup"
        },
        "ExpMultiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Expense markup"
        },
        "IncludeBudget" : {
          "type" : "boolean",
          "description" : "Include budget on invoice?"
        },
        "OTMultiplier1" : {
          "type" : "number",
          "format" : "double",
          "description" : "Labor overtime multiplier 1"
        },
        "OTMultiplier2" : {
          "type" : "number",
          "format" : "double",
          "description" : "Labor overtime multiplier 2"
        },
        "ARStatementCls" : {
          "$ref" : "#/definitions/ARStatementCls"
        },
        "BillCycleClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill cycle class key"
        },
        "CnsDetailClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Consultant detail class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = ConsultantDetail, 3 = TransactionDetail"
        },
        "ExpDetailClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense detail class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = VendorDetail, 3 = TransactionDetail"
        },
        "IncludeInterest" : {
          "type" : "boolean",
          "description" : "Include interest on invoice?"
        },
        "InvCnsDesignKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Consultant invoice design key"
        },
        "InvExpDesignKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense invoice design key"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "IncludeCnsBackup" : {
          "type" : "boolean",
          "description" : "Include consultant backup on invoice?"
        },
        "IncludeExpBackup" : {
          "type" : "boolean",
          "description" : "Inclyde expense backjup on invoice?"
        },
        "InvCnsSeparately" : {
          "type" : "boolean",
          "description" : "Invoice consultant separately?"
        },
        "InvExpSeparately" : {
          "type" : "boolean",
          "description" : "Invoice expense separately?"
        },
        "LaborRate_BillLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "LaborSort1ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor sort 1 class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = EmployeeName, 2 = StaffLevel, 3 = Date"
        },
        "LaborSort2ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor sort 2 class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = EmployeeName, 2 = StaffLevel, 3 = Date"
        },
        "LaborSort3ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Labor sort 3 class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = EmployeeName, 2 = StaffLevel, 3 = Date"
        },
        "ARStatementClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = SingleLine, 2 = InvoiceDetail, 3 = TotalHistory"
        },
        "ExpenseMultiplier" : {
          "$ref" : "#/definitions/ExpenseMultiplier"
        },
        "OverrideBillLRKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Override bill labor rate schedule"
        },
        "IncludeLaborBackup" : {
          "type" : "boolean",
          "description" : "Include labor backup on invoice?"
        },
        "IncludeCnsMultiplier" : {
          "type" : "boolean",
          "description" : "Include consultant markup on invoice?"
        },
        "IncludeExpMultiplier" : {
          "type" : "boolean",
          "description" : "Include expense markup on invoice?"
        },
        "ExpenseMultiplier_CnsEM" : {
          "$ref" : "#/definitions/ExpenseMultiplier"
        },
        "InvoiceDesign_InvDesign" : {
          "$ref" : "#/definitions/InvoiceDesign"
        },
        "LaborRate_OverrideBillLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "InvoiceDesign_InvCnsDesign" : {
          "$ref" : "#/definitions/InvoiceDesign"
        },
        "InvoiceDesign_InvExpDesign" : {
          "$ref" : "#/definitions/InvoiceDesign"
        },
        "LaborSortCls_LaborSort1Cls" : {
          "$ref" : "#/definitions/LaborSortCls"
        },
        "LaborSortCls_LaborSort2Cls" : {
          "$ref" : "#/definitions/LaborSortCls"
        },
        "LaborSortCls_LaborSort3Cls" : {
          "$ref" : "#/definitions/LaborSortCls"
        }
      }
    },
    "ProjectBudget" : {
      "type" : "object",
      "required" : [ "CnsAmount", "CnsUnits", "ExpAmount", "ExpUnits", "Fee", "LaborAmount", "LaborHours", "Pct", "Project", "ProjectKey" ],
      "properties" : {
        "Fee" : {
          "type" : "string"
        },
        "Pct" : {
          "type" : "number",
          "format" : "double"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "CnsUnits" : {
          "type" : "string"
        },
        "ExpUnits" : {
          "type" : "string"
        },
        "CnsAmount" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ExpAmount" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LaborHours" : {
          "type" : "string"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "LaborAmount" : {
          "type" : "string"
        }
      }
    },
    "ProjectCls" : {
      "type" : "object",
      "required" : [ "ProjectClsID", "ProjectClsKey", "ProjectClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectClsID" : {
          "type" : "string",
          "description" : "Project class identifier"
        },
        "ProjectClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project class key",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = Billable, 2 = Overhead, 3 = Opportunity, 4 = Pro-Bono, 5 = Plan"
        },
        "ProjectClsName" : {
          "type" : "string",
          "description" : "Project class name"
        }
      }
    },
    "ProjectCO" : {
      "type" : "object",
      "required" : [ "COKey", "ProjectInfo", "ProjectInfoKey" ],
      "properties" : {
        "COKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Change order key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project information key"
        }
      }
    },
    "ProjectCOLine" : {
      "type" : "object",
      "required" : [ "COLineKey", "CORevKey", "Project", "ProjectCORev", "ProjectKey" ],
      "properties" : {
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "CORevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Change order revision key"
        },
        "COLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Change order line key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectCORev" : {
          "$ref" : "#/definitions/ProjectCORev"
        }
      }
    },
    "ProjectCORev" : {
      "type" : "object",
      "required" : [ "COKey", "CORevKey", "ProjectCO", "RevNum" ],
      "properties" : {
        "COKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Change order key"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revision number"
        },
        "CORevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Change order revision key"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Change order comments"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ProjectCO" : {
          "$ref" : "#/definitions/ProjectCO"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "ProjectETC" : {
      "type" : "object",
      "required" : [ "ECTHours", "ETCKey", "Employee", "EmployeeKey", "Project", "ProjectKey" ],
      "properties" : {
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ETCKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Estimate to complete key"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "ECTHours" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        }
      }
    },
    "ProjectExpense" : {
      "type" : "object",
      "required" : [ "PEDate", "PEKey" ],
      "properties" : {
        "PEKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PEDate" : {
          "type" : "string",
          "format" : "date"
        },
        "PEName" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "ProjectExpenseLine" : {
      "type" : "object",
      "required" : [ "BillAmount", "BillRate", "PEExpDate", "PEKey", "PELineKey", "ProjectExpense", "Qty" ],
      "properties" : {
        "Qty" : {
          "type" : "string"
        },
        "PEKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "BillRate" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PEExpDate" : {
          "type" : "string",
          "format" : "date"
        },
        "PELineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Description" : {
          "type" : "string"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "ProjectExpense" : {
          "$ref" : "#/definitions/ProjectExpense"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        }
      }
    },
    "ProjectFee" : {
      "type" : "object",
      "required" : [ "Fee", "MaximumFee", "PctComplete", "PctOfFee", "Project", "ProjectKey", "Qty", "Rate" ],
      "properties" : {
        "Fee" : {
          "type" : "string",
          "description" : "Fee"
        },
        "Qty" : {
          "type" : "string"
        },
        "Rate" : {
          "type" : "string",
          "description" : "Rate"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "PctOfFee" : {
          "type" : "number",
          "format" : "double",
          "description" : "Percent of total fee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "MaximumFee" : {
          "type" : "string",
          "description" : "Maximum fee"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Description" : {
          "type" : "string"
        },
        "PctComplete" : {
          "type" : "number",
          "format" : "double",
          "description" : "Percent of fee completed"
        }
      }
    },
    "ProjectInfo" : {
      "type" : "object",
      "required" : [ "CenterKey", "ConstructionAmount", "ConstructionFee", "ConstructionPct", "Currency_ProjectCurrency", "ExpectedRevenue", "GracePeriod", "IntFlatAmount", "IntMonthlyPct", "InvFormatDetailLevel", "InvFormatLevel", "IsTemplate", "MarkAsBilled", "ProfitCenter", "ProjectCls", "ProjectClsKey", "ProjectCurrencyKey", "ProjectInfoKey", "ProjectStatusCls", "ProjectStatusClsKey", "RequiresActivity", "RequiresETC", "RequiresExpComments", "RequiresExpDtlComments", "RequiresTimeComments", "RetainageAmount", "RetainageMax", "RetainagePct", "ShowCalculation", "UseInvDate", "UseInvEndDate", "UsePerDiem", "WinPct" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "FeeCls" : {
          "$ref" : "#/definitions/FeeCls"
        },
        "WinPct" : {
          "type" : "number",
          "format" : "double",
          "description" : "Win percentage"
        },
        "Contact" : {
          "$ref" : "#/definitions/Contact"
        },
        "BillTerm" : {
          "$ref" : "#/definitions/BillTerm"
        },
        "Comments" : {
          "type" : "string"
        },
        "PONumber" : {
          "type" : "string"
        },
        "StageCls" : {
          "$ref" : "#/definitions/StageCls"
        },
        "CenterKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center key"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "FeeClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Fee class key",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8 ],
          "example" : "1 = TimeandMaterials, 2 = LumpSum, 3 = LumpSumwithPercentComplete, 4 = MonthlyFee, 5 = MonthlyFeetoMax, 6 = UnitBilling, 7 = FeebyPhasewithPercentComplete, 8 = PercentofConstruction"
        },
        "MarketCls" : {
          "$ref" : "#/definitions/MarketCls"
        },
        "SourceCls" : {
          "$ref" : "#/definitions/SourceCls"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Contact key"
        },
        "IsTemplate" : {
          "type" : "boolean"
        },
        "ProjectCls" : {
          "$ref" : "#/definitions/ProjectCls"
        },
        "QualityCls" : {
          "$ref" : "#/definitions/QualityCls"
        },
        "UseInvDate" : {
          "type" : "boolean",
          "description" : "Use invoice date?"
        },
        "UsePerDiem" : {
          "type" : "boolean",
          "description" : "Use per diem?"
        },
        "ActGroupKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity group key"
        },
        "BillTermKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpGroupKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense group key"
        },
        "GracePeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Grace period"
        },
        "RequiresETC" : {
          "type" : "boolean"
        },
        "StageClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillCycleCls" : {
          "$ref" : "#/definitions/BillCycleCls"
        },
        "ContractDate" : {
          "type" : "string",
          "format" : "date"
        },
        "DecisionDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ExpCloseDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Expected close date"
        },
        "ExpenseGroup" : {
          "$ref" : "#/definitions/ExpenseGroup"
        },
        "MarkAsBilled" : {
          "type" : "boolean"
        },
        "MarketClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PayOfficeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pay office key"
        },
        "ProfitCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "RetainageCls" : {
          "$ref" : "#/definitions/RetainageCls"
        },
        "RetainageMax" : {
          "type" : "string",
          "description" : "Retainage maximum"
        },
        "RetainagePct" : {
          "type" : "number",
          "format" : "double",
          "description" : "Retainage percentage"
        },
        "SourceClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityGroup" : {
          "$ref" : "#/definitions/ActivityGroup"
        },
        "IntFlatAmount" : {
          "type" : "string",
          "description" : "Interest flat amount"
        },
        "IntMonthlyPct" : {
          "type" : "number",
          "format" : "double",
          "description" : "Interest monthly percentage"
        },
        "NextInvNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PAEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project accountant employee key"
        },
        "PMEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project manager employee key"
        },
        "PayAddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pay address key"
        },
        "ProjectClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project class key",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = Billable, 2 = Overhead, 3 = Opportunity, 4 = Pro-Bono, 5 = Plan"
        },
        "QualityClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UseInvEndDate" : {
          "type" : "boolean",
          "description" : "Use invoice end date?"
        },
        "BillAddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill address key"
        },
        "BillContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill contact key"
        },
        "InvFormatLevel" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PayEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pay employee key"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project information key"
        },
        "SupEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Supervising employee key"
        },
        "BillCycleClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill employee key"
        },
        "ConstructionFee" : {
          "type" : "string",
          "description" : "Construction fee"
        },
        "ConstructionPct" : {
          "type" : "number",
          "format" : "double",
          "description" : "Construction percentage"
        },
        "ExpectedRevenue" : {
          "type" : "string"
        },
        "MktgEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PrinEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Principle employee key"
        },
        "ProposalDueDate" : {
          "type" : "string",
          "format" : "date"
        },
        "RetainageAmount" : {
          "type" : "string",
          "description" : "Retainage amount"
        },
        "RetainageClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = FeeOnly, 2 = LaborOnly, 3 = FeeandLabor, 4 = Fee,Labor,andExpenses, 5 = Fee,Labor,Expenses,andConsultants, 6 = TotalInvoice"
        },
        "SaleEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ShowCalculation" : {
          "type" : "boolean",
          "description" : "Show calculation?"
        },
        "Office_PayOffice" : {
          "$ref" : "#/definitions/Office"
        },
        "PresentationDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ProjectStatusCls" : {
          "$ref" : "#/definitions/ProjectStatusCls"
        },
        "RequiresActivity" : {
          "type" : "boolean"
        },
        "Address_PayAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "ConstructionAmount" : {
          "type" : "string",
          "description" : "Construction amount"
        },
        "ExpBudgetMsgClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectCurrencyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project currency key"
        },
        "Address_BillAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "Contact_BillContact" : {
          "$ref" : "#/definitions/Contact"
        },
        "Employee_PAEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_PMEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "ProjectStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project status class key; 1=Active, 2=Inacitve, 3=Hold, 4=Closed",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Active, 2 = Inactive, 3 = Hold"
        },
        "RequiresExpComments" : {
          "type" : "boolean"
        },
        "Employee_PayEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_SupEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "InvFormatDetailLevel" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborBudgetMsgClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RequiresTimeComments" : {
          "type" : "boolean"
        },
        "Employee_BillEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_MktgEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_PrinEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "Employee_SaleEmployee" : {
          "$ref" : "#/definitions/Employee"
        },
        "RequiresExpDtlComments" : {
          "type" : "boolean"
        },
        "Currency_ProjectCurrency" : {
          "$ref" : "#/definitions/Currency"
        },
        "BudgetMsgCls_ExpBudgetMsgCls" : {
          "$ref" : "#/definitions/BudgetMsgCls"
        },
        "BudgetMsgCls_LaborBudgetMsgCls" : {
          "$ref" : "#/definitions/BudgetMsgCls"
        }
      }
    },
    "ProjectInfoAccount" : {
      "type" : "object",
      "required" : [ "ProjectInfoKey" ],
      "properties" : {
        "PayLRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CostLRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ARAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "FeeAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TaxAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborRate_PayLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "LaborAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborRate_CostLR" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "OtherAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReimCnsAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReimExpAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InterestAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RetainerAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DirectCnsAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RetainageAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DirectReimAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccountInfo_ARAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_FeeAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_TaxAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_LaborAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_OtherAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_ReimCnsAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_ReimExpAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_InterestAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RetainerAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DirectCnsAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RetainageAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DirectReimAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "ProjectInfoSale" : {
      "type" : "object",
      "required" : [ "Employee_SaleEmployee", "PISKey", "Pct", "ProjectInfo", "ProjectInfoKey", "SaleEmployeeKey" ],
      "properties" : {
        "Pct" : {
          "type" : "number",
          "format" : "double"
        },
        "PISKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SaleEmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee_SaleEmployee" : {
          "$ref" : "#/definitions/Employee"
        }
      }
    },
    "ProjectLimit" : {
      "type" : "object",
      "required" : [ "AdjustInvAmount", "CnsLimit", "ExpLimit", "FeeLimit", "HoldOverage", "LaborLimit", "LimitKey", "OCLimit", "Project", "ProjectKey", "ShowLimits", "TotalLimit", "UseBudgetAsLimit", "UseFeeAsLimit" ],
      "properties" : {
        "OCLimit" : {
          "type" : "string",
          "description" : "Other charge limit"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "CnsLimit" : {
          "type" : "string",
          "description" : "Consultant limit"
        },
        "ExpLimit" : {
          "type" : "string",
          "description" : "Expense limit"
        },
        "FeeLimit" : {
          "type" : "string",
          "description" : "Fee limit"
        },
        "LimitKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Limit key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LaborLimit" : {
          "type" : "string",
          "description" : "Labor limit"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "ShowLimits" : {
          "type" : "boolean",
          "description" : "Show limits?"
        },
        "TotalLimit" : {
          "type" : "string",
          "description" : "Total limit"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "HoldOverage" : {
          "type" : "boolean"
        },
        "UseFeeAsLimit" : {
          "type" : "boolean",
          "description" : "Use fee as limit?"
        },
        "AdjustInvAmount" : {
          "type" : "boolean",
          "description" : "Adjust invoice amount?"
        },
        "UseBudgetAsLimit" : {
          "type" : "boolean",
          "description" : "Use budget as limit?"
        }
      }
    },
    "ProjectStatusCls" : {
      "type" : "object",
      "required" : [ "ProjectStatusClsID", "ProjectStatusClsKey", "ProjectStatusClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ProjectStatusClsID" : {
          "type" : "string",
          "description" : "Project status class identifier"
        },
        "ProjectStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project status class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Active, 2 = Inactive, 3 = Hold"
        },
        "ProjectStatusClsName" : {
          "type" : "string",
          "description" : "Project status class name"
        }
      }
    },
    "QualityCls" : {
      "type" : "object",
      "required" : [ "QualityClsKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "QualityClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "QualityClsName" : {
          "type" : "string"
        }
      }
    },
    "RateCls" : {
      "type" : "object",
      "required" : [ "RateClsID", "RateClsKey", "RateClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "RateClsID" : {
          "type" : "string",
          "description" : "Rate class identifier"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "RateClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rate class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Employee, 2 = StaffLevel, 3 = Activity"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RateClsName" : {
          "type" : "string",
          "description" : "Rate class name"
        }
      }
    },
    "RecalcMultiplier" : {
      "type" : "object",
      "required" : [ "EndDate", "StartDate", "UnbilledOnly", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "EMKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "EndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EndPeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "StartPeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UnbilledOnly" : {
          "type" : "boolean"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseMultiplier" : {
          "$ref" : "#/definitions/ExpenseMultiplier"
        }
      }
    },
    "RecalcMultiplierLine" : {
      "type" : "object",
      "required" : [ "Amount", "BillAmount", "BillLineCls", "BillLineClsKey", "LineKey", "Multiplier", "NewBillAmount", "NewBillSource", "NewMultiplier", "Project", "ProjectKey", "Qty", "RecalcMultiplier", "TransDate", "UnitRate", "UserKey" ],
      "properties" : {
        "Qty" : {
          "type" : "string"
        },
        "Amount" : {
          "type" : "string"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "LineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "TransDate" : {
          "type" : "string",
          "format" : "date"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillLineCls" : {
          "$ref" : "#/definitions/BillLineCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "NewBillAmount" : {
          "type" : "string"
        },
        "NewBillSource" : {
          "type" : "string"
        },
        "NewMultiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "BillLineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],
          "example" : "1 = A/PCheckHistory, 2 = A/PCheck, 3 = A/PVoucherHistory, 4 = A/PVoucher, 5 = H/RTimesheetHistory, 6 = H/RTimesheet, 7 = H/RExpenseHistory, 8 = H/RExpense, 9 = G/AJournal, 10 = P/MExpense"
        },
        "RecalcMultiplier" : {
          "$ref" : "#/definitions/RecalcMultiplier"
        }
      }
    },
    "RecalcRate" : {
      "type" : "object",
      "required" : [ "EndDate", "LRCls", "LRClsKey", "StartDate", "UnbilledOnly", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "LRCls" : {
          "$ref" : "#/definitions/LRCls"
        },
        "LRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "LRClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = PayRate, 2 = CostRate, 3 = BillRate"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EndPeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborRate" : {
          "$ref" : "#/definitions/LaborRate"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProjectInfo" : {
          "$ref" : "#/definitions/ProjectInfo"
        },
        "StartPeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UnbilledOnly" : {
          "type" : "boolean"
        },
        "ProjectInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RecalcRateLine" : {
      "type" : "object",
      "required" : [ "BillLineCls", "BillLineClsKey", "Employee", "EmployeeKey", "Hours", "LineKey", "NewRate", "NewRateAmount", "NewRateSource", "Project", "ProjectKey", "Rate", "RateAmount", "RecalcRate", "UserKey", "WorkDate" ],
      "properties" : {
        "Rate" : {
          "type" : "string"
        },
        "Hours" : {
          "type" : "string"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "NewRate" : {
          "type" : "string"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "WorkDate" : {
          "type" : "string",
          "format" : "date"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RateAmount" : {
          "type" : "string"
        },
        "RecalcRate" : {
          "$ref" : "#/definitions/RecalcRate"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "BillLineCls" : {
          "$ref" : "#/definitions/BillLineCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "NewRateAmount" : {
          "type" : "string"
        },
        "NewRateSource" : {
          "type" : "string"
        },
        "BillLineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],
          "example" : "1 = A/PCheckHistory, 2 = A/PCheck, 3 = A/PVoucherHistory, 4 = A/PVoucher, 5 = H/RTimesheetHistory, 6 = H/RTimesheet, 7 = H/RExpenseHistory, 8 = H/RExpense, 9 = G/AJournal, 10 = P/MExpense"
        }
      }
    },
    "Receipt" : {
      "type" : "object",
      "required" : [ "Account_BankAcct", "BankAcctKey", "CheckDate", "CheckNum", "ReceiptCls", "ReceiptClsKey", "ReceiptDate", "ReceiptKey" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "CheckNum" : {
          "type" : "string",
          "description" : "Check number"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Receipt comments"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CheckDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OtherName" : {
          "type" : "string",
          "description" : "Other name (free form text)"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "DepositNum" : {
          "type" : "string",
          "description" : "Deposit number"
        },
        "ReceiptCls" : {
          "$ref" : "#/definitions/ReceiptCls"
        },
        "ReceiptKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt key"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bank account for this receipt"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DepositDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Deposit date"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "ReceiptDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Receipt date"
        },
        "ReceiptClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt class key; 1=Client, 2=Vendor, 3=Employee, 4=Other",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Client, 2 = Vendor, 3 = Employee, 4 = Other"
        },
        "Account_BankAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "ReceiptAudit" : {
      "type" : "object",
      "required" : [ "ReceiptAuditKey", "ReceiptLine", "ReceiptLineKey", "ReceiptRev", "ReceiptRevKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ReceiptRev" : {
          "$ref" : "#/definitions/ReceiptRev"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ReceiptLine" : {
          "$ref" : "#/definitions/ReceiptLine"
        },
        "ReceiptRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt revision key"
        },
        "ReceiptLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt line key"
        },
        "ReceiptAuditKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt audit key"
        }
      }
    },
    "ReceiptCash" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "LineCls", "LineClsKey", "PeriodID", "Receipt", "ReceiptCashKey", "ReceiptKey" ],
      "properties" : {
        "Amount" : {
          "type" : "string"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Receipt" : {
          "$ref" : "#/definitions/Receipt"
        },
        "TransID" : {
          "type" : "string"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReceiptKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ReceiptCashKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ReceiptCls" : {
      "type" : "object",
      "required" : [ "ReceiptClsID", "ReceiptClsKey", "ReceiptClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ReceiptClsID" : {
          "type" : "string",
          "description" : "Receipt class identifier"
        },
        "ReceiptClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt class key",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Client, 2 = Vendor, 3 = Employee, 4 = Other"
        },
        "ReceiptClsName" : {
          "type" : "string",
          "description" : "Receipt class name"
        }
      }
    },
    "ReceiptHistory" : {
      "type" : "object",
      "required" : [ "Account_BankAcct", "BankAcctKey", "CheckDate", "CheckNum", "ReceiptCls", "ReceiptClsKey", "ReceiptDate", "ReceiptHistoryKey" ],
      "properties" : {
        "Client" : {
          "$ref" : "#/definitions/Client"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "CheckNum" : {
          "type" : "string",
          "description" : "Check number"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Receipt comments"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CheckDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ClientKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "OtherName" : {
          "type" : "string",
          "description" : "Other payer"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "DepositNum" : {
          "type" : "string",
          "description" : "Deposit number"
        },
        "ReceiptCls" : {
          "$ref" : "#/definitions/ReceiptCls"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DepositDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Deposit date"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "ReceiptDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Receipt date"
        },
        "ReceiptClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt class key; 1=Client, 2=Vendor, 3=Employee, 4=Other",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Client, 2 = Vendor, 3 = Employee, 4 = Other"
        },
        "Account_BankAcct" : {
          "$ref" : "#/definitions/Account"
        },
        "ReceiptHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt history key"
        }
      }
    },
    "ReceiptHistoryLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "LineCls", "LineClsKey", "Period", "PeriodID", "ReceiptHistory", "ReceiptHistoryKey", "ReceiptHistoryLineKey" ],
      "properties" : {
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "G/L distribution account key"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "TransID" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Distribution comments"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "ReceiptHistory" : {
          "$ref" : "#/definitions/ReceiptHistory"
        },
        "ReceiptHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt history key"
        },
        "ReceiptHistoryLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt history line key"
        }
      }
    },
    "ReceiptLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "InAudit", "InCommon", "LineCls", "LineClsKey", "PeriodID", "ReceiptLineKey", "ReceiptRev", "ReceiptRevKey" ],
      "properties" : {
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "G/L distribution account key"
        },
        "InAudit" : {
          "type" : "boolean"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "TransID" : {
          "type" : "string"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Distribution comments"
        },
        "InCommon" : {
          "type" : "boolean"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "ReceiptRev" : {
          "$ref" : "#/definitions/ReceiptRev"
        },
        "RevenueCls" : {
          "$ref" : "#/definitions/RevenueCls"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ReceiptRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt revision key"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "ReceiptLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt line key"
        }
      }
    },
    "ReceiptRev" : {
      "type" : "object",
      "required" : [ "Period", "PeriodKey", "Receipt", "ReceiptKey", "ReceiptRevKey", "RevNum" ],
      "properties" : {
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revision number"
        },
        "Receipt" : {
          "$ref" : "#/definitions/Receipt"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period positing identifier"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ReceiptKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ReceiptRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receipt revision key"
        }
      }
    },
    "RelationCls" : {
      "type" : "object",
      "required" : [ "RelationClsKey", "RelationClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RelationClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Relation class key"
        },
        "RelationClsName" : {
          "type" : "string",
          "description" : "Relation class name"
        }
      }
    },
    "ReportDesign" : {
      "type" : "object",
      "required" : [ "DesignKey", "DesignName", "RptCls", "RptClsKey" ],
      "properties" : {
        "RptCls" : {
          "$ref" : "#/definitions/RptCls"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "DesignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RptClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = A/PCheck, 2 = A/PVoucher, 3 = A/P, 4 = A/R, 5 = A/PCheck, 6 = VendorInvoiceRegister"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "DesignName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TemplateKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DesignLayout" : {
          "type" : "string"
        },
        "ReportTemplate" : {
          "$ref" : "#/definitions/ReportTemplate"
        }
      }
    },
    "ReportTemplate" : {
      "type" : "object",
      "required" : [ "RptCls", "RptClsKey", "TemplateKey", "TemplateLayout", "TemplateName" ],
      "properties" : {
        "RptCls" : {
          "$ref" : "#/definitions/RptCls"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "RptClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = A/PCheck, 2 = A/PVoucher, 3 = A/P, 4 = A/R, 5 = A/PCheck, 6 = VendorInvoiceRegister"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TemplateKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TemplateName" : {
          "type" : "string"
        },
        "TemplateLayout" : {
          "type" : "string"
        }
      }
    },
    "RequireCommentsCls" : {
      "type" : "object",
      "required" : [ "RequireCommentsClsKey", "RequireCommentsClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RequireCommentsClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RequireCommentsClsName" : {
          "type" : "string"
        }
      }
    },
    "RetainageCls" : {
      "type" : "object",
      "required" : [ "RetainageClsID", "RetainageClsKey", "RetainageClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RetainageClsID" : {
          "type" : "string",
          "description" : "Retainage class identifier"
        },
        "RetainageClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Retainage class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = FeeOnly, 2 = LaborOnly, 3 = FeeandLabor, 4 = Fee,Labor,andExpenses, 5 = Fee,Labor,Expenses,andConsultants, 6 = TotalInvoice"
        },
        "RetainageClsName" : {
          "type" : "string",
          "description" : "Retainage class name"
        }
      }
    },
    "RevenueCls" : {
      "type" : "object",
      "required" : [ "RevenueClsID", "RevenueClsKey", "RevenueClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RevenueClsID" : {
          "type" : "string",
          "description" : "Revenue class identifier"
        },
        "RevenueClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revenue class key",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ],
          "example" : "1 = Labor, 2 = Fee, 3 = DirectConsultant, 4 = DirectExpenses, 5 = ReimbursableConsultant, 6 = ReimbursableExpenses, 7 = Other, 8 = Tax, 9 = Retainage, 10 = Retainer, 11 = Interest"
        },
        "RevenueClsName" : {
          "type" : "string",
          "description" : "Revenue class name"
        }
      }
    },
    "RevenueDefault" : {
      "type" : "object",
      "required" : [ "CenterInfoKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ARAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DEAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "FeeAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TaxAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DCnsAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "OFeeAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RCnsAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RExpAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LaborAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "InterestAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RetainerAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RetainageAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "AccountInfo_ARAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DEAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_FeeAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_TaxAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_DCnsAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_OFeeAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RCnsAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RExpAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_LaborAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_InterestAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RetainerAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RetainageAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "Role" : {
      "type" : "object",
      "required" : [ "RoleKey" ],
      "properties" : {
        "RoleKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RoleName" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "RoleLine" : {
      "type" : "object",
      "required" : [ "Permission", "PermissionKey", "Role", "RoleKey", "RoleLineKey" ],
      "properties" : {
        "Role" : {
          "$ref" : "#/definitions/Role"
        },
        "Screen" : {
          "$ref" : "#/definitions/Screen"
        },
        "RoleKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ScreenKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "Permission" : {
          "$ref" : "#/definitions/Permission"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "RoleLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RptDesignKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PermissionKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ReportDesign_RptDesign" : {
          "$ref" : "#/definitions/ReportDesign"
        }
      }
    },
    "RptCls" : {
      "type" : "object",
      "required" : [ "RptClsID", "RptClsKey", "RptClsName" ],
      "properties" : {
        "RptClsID" : {
          "type" : "string",
          "description" : "Report class identifier"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "RptClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Report class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = A/PCheck, 2 = A/PVoucher, 3 = A/P, 4 = A/R, 5 = A/PCheck, 6 = VendorInvoiceRegister"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "RptClsName" : {
          "type" : "string",
          "description" : "Report class name"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "SalaryCls" : {
      "type" : "object",
      "required" : [ "SalaryClsKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SalaryClsID" : {
          "type" : "string"
        },
        "SalaryClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Salary, 2 = Hourly"
        },
        "SalaryClsName" : {
          "type" : "string"
        }
      }
    },
    "Screen" : {
      "type" : "object",
      "required" : [ "ModuleKey", "ScreenKey", "ScreenName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "ModuleKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ScreenKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ScreenName" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Description" : {
          "type" : "string"
        },
        "ParentScreenKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SearchCls" : {
      "type" : "object",
      "required" : [ "SearchClsID", "SearchClsKey", "SearchClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SearchClsID" : {
          "type" : "string"
        },
        "SearchClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4 ],
          "example" : "1 = Vendor, 2 = Check, 3 = Voucher, 4 = Client"
        },
        "SearchClsName" : {
          "type" : "string"
        }
      }
    },
    "SearchColumn" : {
      "type" : "object",
      "required" : [ "ColumnName", "FriendlyName", "SearchClsKey" ],
      "properties" : {
        "DataType" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ColumnName" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "FriendlyName" : {
          "type" : "string"
        },
        "SearchClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ColumnDescription" : {
          "type" : "string"
        }
      }
    },
    "Setting" : {
      "type" : "object",
      "required" : [ "InUpdate", "SettingKey" ],
      "properties" : {
        "InUpdate" : {
          "type" : "boolean"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "SettingKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InvoicePeriodKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DocumentContainer" : {
          "type" : "string"
        },
        "DocumentConnection" : {
          "type" : "string"
        },
        "Period_InvoicePeriod" : {
          "$ref" : "#/definitions/Period"
        }
      }
    },
    "SourceCls" : {
      "type" : "object",
      "required" : [ "SourceClsKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SourceClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SourceClsName" : {
          "type" : "string"
        }
      }
    },
    "SpecialtyCls" : {
      "type" : "object",
      "required" : [ "SpecialtyClsKey", "SpecialtyClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SpecialtyClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SpecialtyClsName" : {
          "type" : "string"
        }
      }
    },
    "SportActivityCls" : {
      "type" : "object",
      "required" : [ "SportActivityClsKey", "SportActivityClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SportActivityClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Sport activity class key"
        },
        "SportActivityClsName" : {
          "type" : "string",
          "description" : "Sport activity class name"
        }
      }
    },
    "SportEventCls" : {
      "type" : "object",
      "required" : [ "SportEventClsKey", "SportEventClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SportEventClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Sport event class key"
        },
        "SportEventClsName" : {
          "type" : "string",
          "description" : "Sport event class name"
        }
      }
    },
    "StaffLevel" : {
      "type" : "object",
      "required" : [ "BillRate", "CostRate", "SLID", "SLKey", "SLName" ],
      "properties" : {
        "SLID" : {
          "type" : "string",
          "description" : "Staff level identifier"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Staff level key"
        },
        "SLName" : {
          "type" : "string",
          "description" : "Staff level name"
        },
        "BillRate" : {
          "type" : "string"
        },
        "CostRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "StageCls" : {
      "type" : "object",
      "required" : [ "StageClsKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "StageClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StageClsName" : {
          "type" : "string"
        }
      }
    },
    "State" : {
      "type" : "object",
      "required" : [ "StateID", "StateKey", "StateName" ],
      "properties" : {
        "StateID" : {
          "type" : "string",
          "description" : "State of provence identifier"
        },
        "StateKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "State key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StateName" : {
          "type" : "string",
          "description" : "State or provence name"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "StatusCls" : {
      "type" : "object",
      "required" : [ "StatusClsID", "StatusClsKey", "StatusClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "StatusClsID" : {
          "type" : "string",
          "description" : "Status class identifier"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status class key",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "StatusClsName" : {
          "type" : "string",
          "description" : "Status class name"
        }
      }
    },
    "SuffixCls" : {
      "type" : "object",
      "required" : [ "SuffixClsID", "SuffixClsKey", "SuffixClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SuffixClsID" : {
          "type" : "string"
        },
        "SuffixClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SuffixClsName" : {
          "type" : "string"
        }
      }
    },
    "Table" : {
      "type" : "object",
      "required" : [ "HasExtView", "SystemCls", "TableKey", "TableName" ],
      "properties" : {
        "TagName" : {
          "type" : "string"
        },
        "TableKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Table key"
        },
        "AfterSave" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "SystemCls" : {
          "type" : "boolean"
        },
        "TableName" : {
          "type" : "string",
          "description" : "Table name"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BeforeSave" : {
          "type" : "string"
        },
        "HasExtView" : {
          "type" : "boolean"
        },
        "AfterDelete" : {
          "type" : "string"
        },
        "AfterSelect" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "BeforeDelete" : {
          "type" : "string"
        },
        "BeforeSelect" : {
          "type" : "string"
        },
        "FriendlyName" : {
          "type" : "string"
        },
        "TableDescription" : {
          "type" : "string",
          "description" : "Table description"
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "required" : [ "Tag", "TagKey" ],
      "properties" : {
        "Tag" : {
          "type" : "string"
        },
        "TagKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Time" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "TSCalendarKey", "TimeCalendar", "TimeKey" ],
      "properties" : {
        "TimeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet key"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ApprovedBy" : {
          "type" : "string",
          "description" : "Approved by"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "SubmittedBy" : {
          "type" : "string",
          "description" : "Submitted by"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Approved date"
        },
        "RejectionKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeCalendar" : {
          "$ref" : "#/definitions/TimeCalendar"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Submitted date"
        },
        "TSCalendarKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet calendar key"
        },
        "TimeRejection_Rejection" : {
          "$ref" : "#/definitions/TimeRejection"
        }
      }
    },
    "TimeApprover" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "TAEmployeeKey", "TAKey" ],
      "properties" : {
        "TAKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time approver key"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "TAEmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time approver employee key"
        }
      }
    },
    "TimeAudit" : {
      "type" : "object",
      "required" : [ "TimeAuditKey", "TimeLine", "TimeLineKey", "TimeRev", "TimeRevKey" ],
      "properties" : {
        "TimeRev" : {
          "$ref" : "#/definitions/TimeRev"
        },
        "TimeLine" : {
          "$ref" : "#/definitions/TimeLine"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "TimeRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet revision key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TimeLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet line key"
        },
        "TimeAuditKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet audi key"
        }
      }
    },
    "TimeCalendar" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "EndDate", "IsClosed", "ProfitCenterInfo", "StartDate", "TSCalendarKey", "TSCls", "TSClsKey" ],
      "properties" : {
        "TSCls" : {
          "$ref" : "#/definitions/TSCls"
        },
        "EndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Timesheet calendar end date"
        },
        "Comments" : {
          "type" : "string"
        },
        "IsClosed" : {
          "type" : "boolean"
        },
        "TSClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = Weekly, 2 = Bi-weekly, 3 = Semi-monthly, 4 = Monthly, 5 = Daily"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Timesheet calendar start date"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Profit center information key"
        },
        "TSCalendarKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet calendar key"
        },
        "ProfitCenterInfo" : {
          "$ref" : "#/definitions/ProfitCenterInfo"
        }
      }
    },
    "TimeComment" : {
      "type" : "object",
      "required" : [ "Comments", "Employee", "EmployeeKey", "Reference", "TCKey" ],
      "properties" : {
        "TCKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "Reference" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TimeCommentTag" : {
      "type" : "object",
      "required" : [ "TCKey", "Tag", "TagKey", "TimeComment" ],
      "properties" : {
        "Tag" : {
          "$ref" : "#/definitions/Tag"
        },
        "TCKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TagKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TimeComment" : {
          "$ref" : "#/definitions/TimeComment"
        }
      }
    },
    "TimeHistory" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "TSCalendarKey", "TimeCalendar", "TimeHistoryKey" ],
      "properties" : {
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ApprovedBy" : {
          "type" : "string",
          "description" : "Approved by"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Employee key"
        },
        "SubmittedBy" : {
          "type" : "string",
          "description" : "Submitted by"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Approved date"
        },
        "TimeCalendar" : {
          "$ref" : "#/definitions/TimeCalendar"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Submitted date"
        },
        "TSCalendarKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet history key"
        }
      }
    },
    "TimeHistoryLine" : {
      "type" : "object",
      "required" : [ "BillAmount", "BillHours", "BillRate", "BillStatusCls", "BillStatusClsKey", "CostAmount", "CostRate", "EmployeeCenterKey", "IsOvertime", "PayAmount", "PayRate", "ProfitCenter_EmployeeCenter", "ProfitCenter_ProjectCenter", "Project", "ProjectCenterKey", "ProjectKey", "TimeHistoryLineKey", "WorkDate", "WorkHours" ],
      "properties" : {
        "OTCls" : {
          "$ref" : "#/definitions/OTCls"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Staff level key"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "PayRate" : {
          "type" : "string",
          "description" : "Pay rate"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "BillRate" : {
          "type" : "string",
          "description" : "Bill rate"
        },
        "Comments" : {
          "type" : "string"
        },
        "CostRate" : {
          "type" : "string",
          "description" : "Cost rate"
        },
        "OTClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Overtime1, 2 = Overtime2"
        },
        "WorkDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Work date"
        },
        "BillHours" : {
          "type" : "string",
          "description" : "Bill hours"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PayAmount" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "WorkHours" : {
          "type" : "string",
          "description" : "Work hours"
        },
        "ApprovedBy" : {
          "type" : "string",
          "description" : "Approved by"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "CostAmount" : {
          "type" : "string"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "IsOvertime" : {
          "type" : "boolean"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SubmittedBy" : {
          "type" : "string",
          "description" : "Submitted by"
        },
        "SupComments" : {
          "type" : "string"
        },
        "TimeHistory" : {
          "$ref" : "#/definitions/TimeHistory"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Approved date"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Submitted date"
        },
        "TimeHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet history key"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        },
        "ProjectCenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EmployeeCenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeHistoryLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet history line key"
        },
        "ProfitCenter_ProjectCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "ProfitCenter_EmployeeCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        }
      }
    },
    "TimeLine" : {
      "type" : "object",
      "required" : [ "BillAmount", "BillHours", "BillRate", "BillStatusCls", "BillStatusClsKey", "CostAmount", "CostRate", "EmployeeCenterKey", "InAudit", "InCommon", "IsOvertime", "PayAmount", "PayRate", "ProfitCenter_EmployeeCenter", "ProfitCenter_ProjectCenter", "Project", "ProjectCenterKey", "ProjectKey", "TimeLineKey", "WorkDate", "WorkHours" ],
      "properties" : {
        "OTCls" : {
          "$ref" : "#/definitions/OTCls"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Staff level key"
        },
        "InAudit" : {
          "type" : "boolean"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "PayRate" : {
          "type" : "string",
          "description" : "Pay rate"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "TimeRev" : {
          "$ref" : "#/definitions/TimeRev"
        },
        "BillRate" : {
          "type" : "string",
          "description" : "Bill rate"
        },
        "Comments" : {
          "type" : "string"
        },
        "CostRate" : {
          "type" : "string",
          "description" : "Cost rate"
        },
        "InCommon" : {
          "type" : "boolean"
        },
        "OTClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Overtime1, 2 = Overtime2"
        },
        "WorkDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Work date"
        },
        "BillHours" : {
          "type" : "string",
          "description" : "Bill hours"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PayAmount" : {
          "type" : "string"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "WorkHours" : {
          "type" : "string",
          "description" : "Work hours"
        },
        "ApprovedBy" : {
          "type" : "string",
          "description" : "Approved by"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "CostAmount" : {
          "type" : "string"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "IsOvertime" : {
          "type" : "boolean"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "TimeRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet revision key"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Activity key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SubmittedBy" : {
          "type" : "string"
        },
        "SupComments" : {
          "type" : "string"
        },
        "TimeLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet line key"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "ApprovedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Approved date"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "SubmittedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        },
        "ProjectCenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EmployeeCenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProfitCenter_ProjectCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "ProfitCenter_EmployeeCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        }
      }
    },
    "TimeLineChange" : {
      "type" : "object",
      "required" : [ "BillHours", "BillStatusCls", "BillStatusClsKey", "ChangeNum", "EmployeeCenterKey", "IsOvertime", "ProfitCenter_EmployeeCenter", "ProfitCenter_ProjectCenter", "Project", "ProjectCenterKey", "ProjectKey", "TimeLineKey", "WorkDate", "WorkHours" ],
      "properties" : {
        "OTCls" : {
          "$ref" : "#/definitions/OTCls"
        },
        "SLKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string"
        },
        "OTClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Overtime1, 2 = Overtime2"
        },
        "WorkDate" : {
          "type" : "string",
          "format" : "date"
        },
        "BillHours" : {
          "type" : "string"
        },
        "ChangeNum" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "WorkHours" : {
          "type" : "string"
        },
        "IsOvertime" : {
          "type" : "boolean"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StaffLevel" : {
          "$ref" : "#/definitions/StaffLevel"
        },
        "ActivityKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "SupComments" : {
          "type" : "string"
        },
        "TimeLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ActivityCode" : {
          "$ref" : "#/definitions/ActivityCode"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "ProjectCenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "EmployeeCenterKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ProfitCenter_ProjectCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        },
        "ProfitCenter_EmployeeCenter" : {
          "$ref" : "#/definitions/ProfitCenter"
        }
      }
    },
    "TimeLineRejection" : {
      "type" : "object",
      "required" : [ "RejectClsKey", "TLRKey", "TimeLine", "TimeLineKey" ],
      "properties" : {
        "TLRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Comments" : {
          "type" : "string"
        },
        "TimeLine" : {
          "$ref" : "#/definitions/TimeLine"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TimeLineKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RejectClsKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TimeRejection" : {
      "type" : "object",
      "required" : [ "Employee", "EmployeeKey", "RejectClsKey", "TRKey", "Time", "TimeKey" ],
      "properties" : {
        "Time" : {
          "$ref" : "#/definitions/Time"
        },
        "TRKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TimeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Comments" : {
          "type" : "string"
        },
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RejectClsKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TimeRev" : {
      "type" : "object",
      "required" : [ "RevNum", "Time", "TimeKey", "TimeRevKey" ],
      "properties" : {
        "Time" : {
          "$ref" : "#/definitions/Time"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revision number"
        },
        "TimeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet key"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "TimeRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet revision key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "TimeZone" : {
      "type" : "object",
      "required" : [ "HasDST", "TZKey", "TZName", "TZStandardName", "UTCOffset" ],
      "properties" : {
        "TZKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "HasDST" : {
          "type" : "boolean"
        },
        "TZName" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "UTCOffset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TZStandardName" : {
          "type" : "string"
        }
      }
    },
    "TransactionCls" : {
      "type" : "object",
      "required" : [ "TransClsID", "TransClsKey", "TransClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "TransClsID" : {
          "type" : "string"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TransClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ],
          "example" : "1 = A/PCheckHistory, 2 = A/PCheck, 3 = A/PCheckCashBasis, 4 = A/PVoucherHistory, 5 = A/PVoucher, 6 = A/RReceiptHistory, 7 = A/RReceipt, 8 = A/RReceiptCashBasis, 9 = A/RInvoiceHistory, 10 = A/RInvoice, 11 = G/LJournal, 12 = H/RExpensesheetHistory, 13 = H/RExpensesheet, 14 = H/RTimesheetHistory, 15 = H/RTimesheet, 16 = Misc.ProjectExpense"
        },
        "TransClsName" : {
          "type" : "string"
        },
        "TransClsTable" : {
          "type" : "string"
        }
      }
    },
    "TSCls" : {
      "type" : "object",
      "required" : [ "TSClsID", "TSClsKey", "TSClsName" ],
      "properties" : {
        "TSClsID" : {
          "type" : "string"
        },
        "TSClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = Weekly, 2 = Bi-weekly, 3 = Semi-monthly, 4 = Monthly, 5 = Daily"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TSClsName" : {
          "type" : "string"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "TSFormat" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "TSFormatName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TSFormatName" : {
          "type" : "string"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TSFormatEmployee" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "Employee", "EmployeeKey", "TSFormat" ],
      "properties" : {
        "Employee" : {
          "$ref" : "#/definitions/Employee"
        },
        "TSFormat" : {
          "$ref" : "#/definitions/TSFormat"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "EmployeeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TSFormatLine" : {
      "type" : "object",
      "required" : [ "CenterInfoKey", "Project", "ProjectKey", "TSFormat", "TSFormatLineID", "TSFormatLineName" ],
      "properties" : {
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string"
        },
        "TSFormat" : {
          "$ref" : "#/definitions/TSFormat"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TSFormatLineID" : {
          "type" : "string"
        },
        "TSFormatLineName" : {
          "type" : "string"
        }
      }
    },
    "TSGroupCls" : {
      "type" : "object",
      "required" : [ "TSGroupClsKey", "TSGroupClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "TSGroupClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timesheet group class key"
        },
        "TSGroupClsName" : {
          "type" : "string",
          "description" : "Timesheet group class name"
        }
      }
    },
    "TSSetting" : {
      "type" : "object",
      "required" : [ "AllowActivity", "AllowLocation", "AllowOT1", "AllowOT2", "AllowPayRate", "AllowSL", "AllowTask", "AllowUnsubmit", "CenterInfoKey", "HourEntryClsKey", "RequiresCommentClsKey", "ShowBillPCT", "ShowDirectPCT", "ShowTargetPCT" ],
      "properties" : {
        "AllowSL" : {
          "type" : "boolean"
        },
        "AllowOT1" : {
          "type" : "boolean"
        },
        "AllowOT2" : {
          "type" : "boolean"
        },
        "AllowTask" : {
          "type" : "boolean"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ShowBillPCT" : {
          "type" : "boolean"
        },
        "AllowPayRate" : {
          "type" : "boolean"
        },
        "AllowActivity" : {
          "type" : "boolean"
        },
        "AllowLocation" : {
          "type" : "boolean"
        },
        "AllowUnsubmit" : {
          "type" : "boolean"
        },
        "CenterInfoKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ShowDirectPCT" : {
          "type" : "boolean"
        },
        "ShowTargetPCT" : {
          "type" : "boolean"
        },
        "HourEntryClsKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RequiresCommentClsKey" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "Employee_User", "IsLocked", "Password", "StatusCls", "StatusClsKey", "UserKey", "UserName" ],
      "properties" : {
        "UserKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User key"
        },
        "Attempts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "IsLocked" : {
          "type" : "boolean"
        },
        "Password" : {
          "type" : "string"
        },
        "UserName" : {
          "type" : "string",
          "description" : "User name"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "LastLogin" : {
          "type" : "string",
          "format" : "date-time"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "LastAttempt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "FirstAttempt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "Employee_User" : {
          "$ref" : "#/definitions/Employee"
        }
      }
    },
    "UserRole" : {
      "type" : "object",
      "required" : [ "Role", "RoleKey", "UserKey" ],
      "properties" : {
        "Role" : {
          "$ref" : "#/definitions/Role"
        },
        "RoleKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "UTLJournal" : {
      "type" : "object",
      "properties" : {
        "Key" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Journal key"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Requested revision number"
        },
        "IsCurrent" : {
          "type" : "boolean",
          "description" : "Current revision?"
        }
      }
    },
    "Vendor" : {
      "type" : "object",
      "required" : [ "Company", "CompanyKey", "IsConsultant", "StatusCls", "StatusClsKey", "UseEFT", "UseWT", "VendorKey" ],
      "properties" : {
        "UseWT" : {
          "type" : "boolean",
          "description" : "Vendor uses wire transfer"
        },
        "UseEFT" : {
          "type" : "boolean",
          "description" : "Vendor uses EFT"
        },
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "Company" : {
          "$ref" : "#/definitions/Company"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Vendor comments"
        },
        "CheckMemo" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "StatusCls" : {
          "$ref" : "#/definitions/StatusCls"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "AddressKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor address"
        },
        "CompanyKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Company key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "IsConsultant" : {
          "type" : "boolean"
        },
        "SpecialtyCls" : {
          "$ref" : "#/definitions/SpecialtyCls"
        },
        "StatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor status; 1=Active,2=Inactive",
          "enum" : [ 1, 2 ],
          "example" : "1 = Active, 2 = Inactive"
        },
        "SpecialtyClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor specialty"
        },
        "PrimaryContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Primary contact"
        },
        "SecondaryContactKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Secondary contact"
        },
        "Contact_PrimaryContact" : {
          "$ref" : "#/definitions/Contact"
        },
        "Contact_SecondaryContact" : {
          "$ref" : "#/definitions/Contact"
        }
      }
    },
    "VendorAccount" : {
      "type" : "object",
      "required" : [ "DiscountPct", "Is1099", "UseSeparateChecks", "Vendor", "VendorKey" ],
      "properties" : {
        "Is1099" : {
          "type" : "boolean"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "1099Cls" : {
          "$ref" : "#/definitions/1099Cls"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorCls" : {
          "$ref" : "#/definitions/VendorCls"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "1099ClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "1099 class key",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Consultant, 2 = Rent, 3 = Legal"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "FederalEIN" : {
          "type" : "string",
          "description" : "Federal EIN"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "DiscountPct" : {
          "type" : "number",
          "format" : "double",
          "description" : "Discount percentage"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "PaymentTerm" : {
          "$ref" : "#/definitions/PaymentTerm"
        },
        "VendorClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor class key",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = CreditCard, 2 = Consultant, 3 = Trade, 4 = Employee, 5 = Client"
        },
        "OHAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Overhead g/l account information key"
        },
        "DiscountPeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "PaymentTermKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor payment term key"
        },
        "RegAcctInfoKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Regular g/l account information key"
        },
        "UseSeparateChecks" : {
          "type" : "boolean"
        },
        "AccountInfo_OHAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        },
        "AccountInfo_RegAcctInfo" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      }
    },
    "VendorAutoCheck" : {
      "type" : "object",
      "required" : [ "Account_BankAcct", "BankAcctKey", "User", "UserKey" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bank account"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "Account_BankAcct" : {
          "$ref" : "#/definitions/Account"
        }
      }
    },
    "VendorAutoCheckPost" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "BankAcctKey", "PostAmount", "User", "UserKey", "Vendor", "VendorKey", "VoucherAmount", "VoucherBalance", "VoucherDate", "VoucherDiscount", "VoucherDue", "VoucherID" ],
      "properties" : {
        "User" : {
          "$ref" : "#/definitions/User"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Posting account"
        },
        "CheckID" : {
          "type" : "string",
          "description" : "Check identifier"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor"
        },
        "VoucherID" : {
          "type" : "string",
          "description" : "Vendor invoice identifier"
        },
        "PostAmount" : {
          "type" : "string",
          "description" : "Posting amount"
        },
        "VoucherDue" : {
          "type" : "string",
          "description" : "Vendor invoice due amount"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bank account"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "VoucherDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Vendor invoice date"
        },
        "VoucherAmount" : {
          "type" : "string",
          "description" : "Vendor invoice amount"
        },
        "VoucherBalance" : {
          "type" : "string",
          "description" : "Vendor invoice balance"
        },
        "VoucherDiscount" : {
          "type" : "string",
          "description" : "Vendor invoice discount"
        }
      }
    },
    "VendorAutoCheckVendor" : {
      "type" : "object",
      "required" : [ "AcctKey", "BankAcctKey", "CheckAmount", "CheckDate", "IsReprint", "IsVoid", "UserKey", "Vendor", "VendorAutoCheck", "VendorKey", "VoucherID" ],
      "properties" : {
        "Check" : {
          "$ref" : "#/definitions/Check"
        },
        "IsVoid" : {
          "type" : "boolean"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A/P account"
        },
        "CheckID" : {
          "type" : "string",
          "description" : "Check identifier"
        },
        "UserKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User"
        },
        "CheckKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check"
        },
        "CheckDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Check date"
        },
        "CheckMemo" : {
          "type" : "string",
          "description" : "Check memo"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "IsReprint" : {
          "type" : "boolean"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor"
        },
        "VoucherID" : {
          "type" : "string",
          "description" : "Vendor invoice identifier"
        },
        "BankAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bank account"
        },
        "CheckAmount" : {
          "type" : "string",
          "description" : "Check amount"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "VendorAutoCheck" : {
          "$ref" : "#/definitions/VendorAutoCheck"
        }
      }
    },
    "VendorCls" : {
      "type" : "object",
      "required" : [ "VendorClsID", "VendorClsKey", "VendorClsName" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "VendorClsID" : {
          "type" : "string"
        },
        "VendorClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3, 4, 5 ],
          "example" : "1 = CreditCard, 2 = Consultant, 3 = Trade, 4 = Employee, 5 = Client"
        },
        "VendorClsName" : {
          "type" : "string"
        }
      }
    },
    "VendorEFT" : {
      "type" : "object",
      "required" : [ "AccountNumber", "Amount", "CheckClsKey", "EFTClsKey", "IsExcess", "IsRemittance", "Percentage", "RoutingNumber", "Vendor", "VendorEFTKey", "VendorKey" ],
      "properties" : {
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "IsExcess" : {
          "type" : "boolean"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "EFTClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "EFT class key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "Percentage" : {
          "type" : "string",
          "description" : "Distribution percentage"
        },
        "CheckClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Check class key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "IsRemittance" : {
          "type" : "boolean"
        },
        "VendorEFTKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor EFT key"
        },
        "AccountNumber" : {
          "type" : "string",
          "description" : "Bank account number"
        },
        "RoutingNumber" : {
          "type" : "string",
          "description" : "Bank routing number"
        }
      }
    },
    "VendorInsurance" : {
      "type" : "object",
      "required" : [ "Amount", "Coverage", "InsuranceCls", "InsuranceClsKey", "Vendor", "VendorKey" ],
      "properties" : {
        "Amount" : {
          "type" : "string",
          "description" : "Liability amount"
        },
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "Coverage" : {
          "type" : "string",
          "description" : "Liability coverage"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "InsuranceCls" : {
          "$ref" : "#/definitions/InsuranceCls"
        },
        "InsuranceClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Insurance class key"
        },
        "InsuranceCompany" : {
          "type" : "string",
          "description" : "Insurance company name"
        }
      }
    },
    "Version" : {
      "type" : "object",
      "required" : [ "AppVersion", "VersionKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "AppVersion" : {
          "type" : "string",
          "description" : "Application version"
        },
        "VersionKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Version key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        }
      }
    },
    "Voucher" : {
      "type" : "object",
      "required" : [ "APAcctKey", "Account_APAcct", "DueDate", "Vendor", "VendorKey", "VoucherDate", "VoucherID", "VoucherKey" ],
      "properties" : {
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "DueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Due Date"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Voucher comments"
        },
        "APAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A/P g/l account key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "VoucherID" : {
          "type" : "string",
          "description" : "Voucher number, identifier, or control number"
        },
        "VoucherKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PaymentTerm" : {
          "$ref" : "#/definitions/PaymentTerm"
        },
        "VoucherDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Voucher date"
        },
        "Account_APAcct" : {
          "$ref" : "#/definitions/Account"
        },
        "PaymentTermKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Payment term key"
        }
      }
    },
    "VoucherAudit" : {
      "type" : "object",
      "required" : [ "VoucherAuditKey", "VoucherLine", "VoucherLineKey", "VoucherRev", "VoucherRevKey" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VoucherRev" : {
          "$ref" : "#/definitions/VoucherRev"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "VoucherLine" : {
          "$ref" : "#/definitions/VoucherLine"
        },
        "VoucherRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher revision key"
        },
        "VoucherLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher line key"
        },
        "VoucherAuditKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher audit key"
        }
      }
    },
    "VoucherHistory" : {
      "type" : "object",
      "required" : [ "APAcctKey", "Account_APAcct", "DueDate", "Vendor", "VendorKey", "VoucherDate", "VoucherHistoryKey", "VoucherID" ],
      "properties" : {
        "Vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "DueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Due date"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Voucher comments"
        },
        "APAcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A/P g/l account key"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VendorKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Vendor key"
        },
        "VoucherID" : {
          "type" : "string",
          "description" : "Voucher number, identifier, or control number"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "PaymentTerm" : {
          "$ref" : "#/definitions/PaymentTerm"
        },
        "VoucherDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Voucher date"
        },
        "Account_APAcct" : {
          "$ref" : "#/definitions/Account"
        },
        "PaymentTermKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Payment term key"
        },
        "VoucherHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher history key"
        }
      }
    },
    "VoucherHistoryLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "BillAmount", "LineCls", "LineClsKey", "Multiplier", "Period", "PeriodID", "Qty", "UnitRate", "VoucherHistory", "VoucherHistoryKey", "VoucherHistoryLineKey" ],
      "properties" : {
        "Qty" : {
          "type" : "string",
          "description" : "Distribution quantity"
        },
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "G/L distribution account key"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Voucher line comments"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting identifier"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense type key"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Line class;1=Control,2=Distribution",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Distribution line markup"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "VoucherHistory" : {
          "$ref" : "#/definitions/VoucherHistory"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        },
        "VoucherHistoryKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher history key"
        },
        "VoucherHistoryLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher history line key"
        }
      }
    },
    "VoucherLine" : {
      "type" : "object",
      "required" : [ "Account", "AcctKey", "Amount", "BillAmount", "InAudit", "InCommon", "LineCls", "LineClsKey", "Multiplier", "Period", "PeriodID", "Qty", "UnitRate", "VoucherLineKey", "VoucherRev", "VoucherRevKey" ],
      "properties" : {
        "Qty" : {
          "type" : "string",
          "description" : "Distribution quantity"
        },
        "Amount" : {
          "type" : "string",
          "description" : "Distribution amount"
        },
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "Account" : {
          "$ref" : "#/definitions/Account"
        },
        "AcctKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "G/L distribution account key"
        },
        "InAudit" : {
          "type" : "boolean"
        },
        "Invoice" : {
          "$ref" : "#/definitions/Invoice"
        },
        "LineCls" : {
          "$ref" : "#/definitions/LineCls"
        },
        "Project" : {
          "$ref" : "#/definitions/Project"
        },
        "Comments" : {
          "type" : "string",
          "description" : "Voucher line comments"
        },
        "InCommon" : {
          "type" : "boolean"
        },
        "PeriodID" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting identifier"
        },
        "UnitRate" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "BillAmount" : {
          "type" : "string"
        },
        "ExpTypeKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Expense type key"
        },
        "InvoiceKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "LineClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2 ],
          "example" : "1 = Control, 2 = Distribution"
        },
        "Multiplier" : {
          "type" : "number",
          "format" : "double",
          "description" : "Distribution line markup"
        },
        "ProjectKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Project key"
        },
        "VoucherRev" : {
          "$ref" : "#/definitions/VoucherRev"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "ExpenseType" : {
          "$ref" : "#/definitions/ExpenseType"
        },
        "BillStatusCls" : {
          "$ref" : "#/definitions/BillStatusCls"
        },
        "BillingModCls" : {
          "$ref" : "#/definitions/BillingModCls"
        },
        "VoucherRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher revision key"
        },
        "VoucherLineKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher line key"
        },
        "BillStatusClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Bill status class key",
          "enum" : [ 1, 2, 3, 4, 5, 6 ],
          "example" : "1 = Billable, 2 = Hold, 3 = HoldCurrent, 4 = Write-off, 5 = Non-Billable, 6 = Billed"
        },
        "BillingModClsKey" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 1, 2, 3 ],
          "example" : "1 = Transfer, 2 = Added, 3 = Modified"
        }
      }
    },
    "VoucherRev" : {
      "type" : "object",
      "required" : [ "Period", "PeriodKey", "RevNum", "Voucher", "VoucherKey", "VoucherRevKey" ],
      "properties" : {
        "Period" : {
          "$ref" : "#/definitions/Period"
        },
        "RevNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Revision number"
        },
        "Voucher" : {
          "$ref" : "#/definitions/Voucher"
        },
        "Comments" : {
          "type" : "string"
        },
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "PeriodKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Period posting key"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "VoucherKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher key"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "VoucherRevKey" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Voucher revision key"
        }
      }
    },
    "WBSLabel" : {
      "type" : "object",
      "required" : [ "WBSLabelKey", "WBSLevel1Label", "WBSLevel1Length" ],
      "properties" : {
        "CreatedBy" : {
          "type" : "string",
          "description" : "User name that created the record"
        },
        "StampedBy" : {
          "type" : "string",
          "description" : "User name that modified the record"
        },
        "TimeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was modified"
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the record was created"
        },
        "WBSLabelKey" : {
          "type" : "integer",
          "format" : "int32"
        },
        "WBSLevel1Label" : {
          "type" : "string"
        },
        "WBSLevel2Label" : {
          "type" : "string"
        },
        "WBSLevel3Label" : {
          "type" : "string"
        },
        "WBSLevel4Label" : {
          "type" : "string"
        },
        "WBSLevel5Label" : {
          "type" : "string"
        },
        "WBSLevel6Label" : {
          "type" : "string"
        },
        "WBSLevel1Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "WBSLevel2Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "WBSLevel3Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "WBSLevel4Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "WBSLevel5Length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "WBSLevel6Length" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}